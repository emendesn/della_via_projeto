/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©╠╠
╠╠Ё ATENCAO ESTE PROGRAMA E UTILIZADO PELA ROTINA DE ORCAMENTO             Ё╠╠
╠╠Ё ASSIM DEVE-SE TESTAR O PROGRAMA A415BAIXA QUANDO ESTE FOR ALTERADO.    Ё╠╠
╠╠юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
#INCLUDE "MATA650.CH"
#INCLUDE "PROTHEUS.CH"
#INCLUDE "MSGRAPHI.CH"
#DEFINE USADO CHR(0)+CHR(0)+CHR(1)
/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤└o   Ё Mata650  Ё Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддЁ╠╠
╠╠Ё Descri┤└oЁ Cadastramento de Ordens de Producao                        Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё         ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.             Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё╠╠
╠╠цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё            Ё        Ё      Ё                                          Ё╠╠
╠╠юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function Mata650(aRotAuto,nOpcAuto)
Local nOpc, nPos, lGerar := .F., cAlias := Alias()
Local nOps := 0,cNomBat := "BATCH"+cEmpAnt+"0.OP",lFim:=.F.
Local cNomInd := "BATCH"+cEmpAnt+"0.OPX"
Local cNomInd2:= "BATCH"+cEmpAnt+"2.OPX"
Local nPosBlock
Local bBlock
Local ni         := 0
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Array criado p/ substituir parametros                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aSav650 := Array(20)
PRIVATE lConsTerc
PRIVATE lConsNPT
PRIVATE	lProj711:=.F.

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Estas variaveis indicam para as funcoes de validacao qual    Ё
//Ё programa as esta' chamando                                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE l240:=.F.,l250 :=.F.,l241:=.F.,l242:=.F.,l261:=.F.,l185:=.F.,l650:=.T.

Default nOpcAuto := If(aRotAuto<>Nil,3,nOpcAuto)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica a permissao do programa em relacao aos modulos      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If AMIIn(4,10,19,25)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Variaveis utilizadas na geracao de SCS aglutinadas por data  Ё
	//Ё de necessidade.                                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	PRIVATE aDataOPC1:={},aDataOPC7:={},aOPC1:={},aOPC7:={}
	Private l650Auto := (ValType(aRotauto)=="A")
	/*здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Define Array contendo as Rotinas a executar do programa      Ё
	Ё ----------- Elementos contidos por dimensao ------------     Ё
	Ё 1. Nome a aparecer no cabecalho                              Ё
	Ё 2. Nome da Rotina associada                                  Ё
	Ё 3. Usado pela rotina                                         Ё
	Ё 4. Tipo de Transa┤└o a ser efetuada                          Ё
	Ё    1 - Pesquisa e Posiciona em um Banco de Dados             Ё
	Ё    2 - Simplesmente Mostra os Campos                         Ё
	Ё    3 - Inclui registros no Bancos de Dados                   Ё
	Ё    4 - Altera o registro corrente                            Ё
	Ё    5 - Remove o registro corrente do Banco de Dados          Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	PRIVATE aRotina := {	{STR0001,"AxPesqui"  , 0 , 1},;	//"Pesquisar"
		{STR0047,"A650View"  , 0 , 2},;	//"Visualizar"
		{STR0002,"A650Automa", 0 , 3},;	//"venDas"
		{STR0003,"A650Inclui", 0 , 3},;	//"Incluir"
		{STR0004,"A650Altera", 0 , 4},;	//"Alterar"
		{STR0005,"A650Deleta", 0 , 5},;	//"Excluir"
		{STR0086,"A650Graph" ,0, 2},;   //"Grafico"
		{STR0098,"A650Priori",0, 2},; //"Reprioriza"
		{STR0064,"A650Legend", 0 , 1}}  //"Legenda"
	If ( l650Auto .Or. nOpcAuto<>Nil )
		PRIVATE aRotina := {	{STR0001,"AxPesqui"  , 0 , 1},;	//"Pesquisar"
			{STR0047,"A650View"  , 0 , 2},;	//"Visualizar"
			{STR0003,"A650Inclui", 0 , 3},;	//"Incluir"
			{STR0004,"A650Altera", 0 , 4},;	//"Alterar"
			{STR0005,"A650Deleta", 0 , 5},;	//"Excluir"
			{STR0002,"A650Automa", 0 , 6}}	//"venDas"
	EndIf
	PRIVATE cCadastro := OemToAnsi(STR0006)	//"Ordens de Produ┤└o"
	PRIVATE lEnd:=.F.
	
	PRIVATE cFilA650 := ''
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё mv_par01 - 1 = ALOCACAO PELO FIM      2 = ALOCACAO PELO INICIO Ё
	//Ё mv_par02 - Considera saldo apenas Local Padrao ? 1-sim  2-nao  Ё
	//Ё mv_par03 - Almoxarifado de (Usado p/compor o estoque atual)    Ё
	//Ё mv_par04 - Almoxarifado ate                                    Ё
	//Ё mv_par05 - Altera Prioridade das OPs Filhas tambem ?           Ё
	//Ё mv_par06 - Gera SC - Por Empenho / Por OP / Por Data           Ё
	//Ё mv_par07 - Altera Data Empenho/Ops Filhas ? Sim / Nao          Ё
	//Ё mv_par08 - Sugere Lotes a Empenhar Sim / Nao                   Ё
	//Ё mv_par09 - Grava Obs Ops Inter Sim / Nao                       Ё
	//Ё mv_par10 - Exclui OPs Filhas ? 1-Sim 2-Nфo                     Ё
	//Ё mv_par11 - Alt.todos Prod. Grd?                                Ё	
	//Ё mv_par12 - Exc.todos Prod. Grd?                                Ё	
	//Ё mv_par13 - Mostra tela alteracao empenhos                      Ё	
	//Ё mv_par14 - Qtd. Nossa Poder 3o.  1-Ignora / 2-Soma             Ё	
	//Ё mv_par15 - Qtd. 3o. Nosso Poder  1-Ignora / 2-Subtrai          Ё	
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Pergunte("MTA650",.F.)
	//Salvar variaveis existentes
	For ni := 1 to 20
		aSav650[ni] := &("mv_par"+StrZero(ni,2))
	Next ni
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ativa tecla F12 para acionar perguntas                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ! ( l650Auto )
		Set Key VK_F12 To MTA650PERG()
	EndIF
	lConsNPT  := (aSav650[14] == 1)
	lConsTerc := !(aSav650[15] == 1)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Testa integridade do arquivo BATCHxx0.OP                       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If File("BATCH"+cEmpAnt+"0.OP")
		USE &cNomBAT Alias BAT SHARED NEW VIA __LocalDriver
		If !NetErr()
			If Len(OP) != 15
				Help(" ",1,"C690BAT")
			Endif
			dbSelectArea("BAT")
			dbCloseArea()
		Endif
	Endif
	dbSelectArea("SC2")	
	If ( l650Auto )
		nPos := aScan(aRotauto,{|x| x[1] == "MRP"})
		If ( nPos > 0 .and. aRotAuto[nPos,2] == "S" )
			lProj711:=.T.
		Else
			lProj711:=.F.
		EndIf
		MsRotAuto(nOpcAuto,aRotAuto,"SC2")
	Else
		If nOpcAuto<>Nil
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Chamada direta da funcao ( Visualizacao,Alteracao,Exlcusao ) Ё
			//Ё atraves do nOpcAuto sem passar pela mBrowse.                 Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nPosBlock := Ascan(aRotina,{|x| x[4]== nOpcAuto})
			If ( nPosBlock <> 0 )
				bBlock := &( "{ |x,y,z,k| " + aRotina[ nPosBlock,2 ] + "(x,y,z,k) }" )
				Eval( bBlock,Alias(),SC2->(Recno()),nPosBlock)
			EndIf
		Else
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Endereca a funcao de BROWSE                                  Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			mBrowse( 6, 1,22,75,"SC2",,"C2_DATRF")
		EndIf
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Desativa tecla que aciona perguntas                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If ! ( l650Auto )
		Set Key VK_F12 To
	EndIf
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se existe OP's Intermediarias para geracao          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If File(cNomBat)
		lFim := .F.
		While !lFim
			Use &cNomBAT Alias BAT Shared New VIA __LocalDriver
			lFIm := !NetErr()
		End
		If !File(cNomInd)
			INDEX ON DTOS(DATAINI)+DTOS(DATAFIM)+OP TO &cNomInd
			dbCommitAll()
		EndIf
		If !File(cNomInd2)
			INDEX ON OP+DTOS(DATAINI)+DTOS(DATAFIM) TO &cNomInd2
			dbCommitAll()
		EndIf
		dbClearIndex()
		dbSetIndex(cNomInd)
		dbSetIndex(cNomInd2)
		dbSetOrder(1)
		While !Eof()
			If Empty(BAT->OK)
				lGerar := .T.
				nOps++
			EndIf
			dbSkip()
		End
		If lGerar
			If l650Auto
				nPos := aScan(aRotauto,{|x| x[1] == "AUTEXPLODE"})
				If ( nPos > 0 .and. aRotAuto[nPos,2] == "S" )
					nOpc := 1
				Else
					nOpc := 2
				EndIf
			Else
				MTA650OK(@nOpc)
			EndIf
			If nOpc == 1
				If ( l650Auto )
					MA650Process(@lEnd,nOps)
				Else
					Processa({|lEnd| MA650Process(@lEnd,nOps)},STR0007,OemToAnsi(STR0008),.F.) 	//"Gera┤└o de OPs Intermediarias e SCs"###"Gerando OPs Intermediarias e SCs..."
				EndIf
			EndIf
		EndIf
		dbSelectArea("BAT")
		dbCloseArea()
		dbSelectArea(cAlias)
	EndIf
EndIf
RETURN

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддд©╠╠
╠╠ЁFun┤└o    ЁMA650ProcessЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё28/12/95Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддд╢╠╠
╠╠ЁDescri┤└o Ё Gera OPs intermediarias e SCs    		                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MA650Process(lEnd,nOps,lOrcamento)
A650RunBatch(nOps,lOrcamento)
RETURN

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650AutomaЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa para escolha de pedidos a gerar OP                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650Automa(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Mata650                                                    Ё╠╠
╠╠цддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё         ATUALIZACOES SOFRIDAS DESDE A CONSTRU─AO INICIAL.             Ё╠╠
╠╠цддддддддддддбддддддддбддддддбдддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁProgramador Ё Data   Ё BOPS Ё  Motivo da Alteracao                     Ё╠╠
╠╠цддддддддддддеддддддддеддддддедддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠юддддддддддддаддддддддаддддддадддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Automa(cAlias,nReg,nOpc)
Local aRetCopy:=Aclone(aRotina), cMarca
Local aIndexSC6	:= {}

Local cCondMark   := ""
Local nZ          := 0
Local ni          := 0

PRIVATE aRetorOpc:={}
PRIVATE bFiltraBrw := {|| NIL}
PRIVATE cOp := "" // Variavel private para utilizacao do P.E.
PRIVATE lAltEsp		:= .F. // Indica se ┌ a 1a. Entrada ap╒s alteracao especificacao

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Array criado p/ substituir parametros                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aSav651 := Array(20)

PRIVATE cSeqC2 := "000" ,inclui := .T.

aRotina := {{STR0001, "PesqBrw"  , 0 , 1},;	//"Pesquisar"
	{STR0009, "A650ProcOP", 0 , 3},;	//"Gera O.P."
	{STR0010, "A650Visual", 0 , 0},;	//"Visualiza"
	{STR0011, "A650Credit", 0 , 0} }	//"Avalia Cr┌dito"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё mv_par01 - 1 = Mostra pedidos c/Op    2 = Nao Mostra ped c/OpЁ
//Ё mv_par02 - Prod. Sem Estrut. Gera: OP, SC, Nenhum            Ё
//Ё mv_par03 - Cliente de                                        Ё
//Ё mv_par04 - Cliente ate                                       Ё
//Ё mv_par05 - Produto de                                        Ё
//Ё mv_par06 - Produto ate                                       Ё
//Ё mv_par07 - data de entrega de                                Ё
//Ё mv_par08 - data de entrega ate                               Ё
//Ё mv_par09 - TES de                                            Ё
//Ё mv_par10 - TES ate                                           Ё
//Ё mv_par11 - Considera Local Padr└o (1-Sim 2-N└o)              Ё
//Ё            (para alimentar o campo C2_LOCAL)                 Ё
//Ё mv_par12 - Libera Bloqueio de Credito (1-Sim 2-Nao)          Ё
//Ё mv_par13 - Nёmero inicial da Op                              Ё
//Ё mv_par14 - Pedido de                                         Ё
//Ё mv_par15 - Pedido ate                                        Ё
//Ё mv_par16 - Almoxarifado De                                   Ё
//Ё mv_par17 - Almoxarifado Ate                                  Ё
//Ё mv_par18 - Avalia PVs - 1 - Individualmente - 2 - Agrupados  Ё
//Ё mv_par19 - Qtd a Gerar OP - 1 - LE PADRAO - 2 - SEM LE       Ё
//Ё                           - 3 - LES SOMADOS                  Ё
//Ё mv_par20 - Sim - Exibe apenas pedidos liberados por credito  Ё
//Ё          no faturamento                                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Pergunte("MTA651",.T.)
	cOP := "04/07/"+Space(Len(SC6->C6_OP))
	//Salvar variaveis existentes
	For ni := 1 to 20
		aSav651[ni] := &("mv_par"+StrZero(ni,2))
	Next ni
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica a existencia de indice no SC6                       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Pergunte("MTA650",.F.)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Execblock a ser executado antes da Indregua                  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	IF (ExistTemplate('MA650FIL'))
		cFilA650 := ExecTemplate('MA650FIL',.F.,.F.)
	Endif

	IF (ExistBlock('MA650FIL'))
		cFilA650 := ExecBlock('MA650FIL',.F.,.F.)
	Endif
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gera Indice condicional para nao mostrar pedidos               Ё
	//Ё que ja geraram Op. ou nao liberados por credito no faturamento Ё
	//Ё Escolha feita na pergunte                                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC6")
	
	If aSav651[20] == 1
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Pedidos liberados por credito no faturamento                 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cCondicao := 'C6_OP="07".And.'
		cCondMark := ""
	Else	
		cCondMark := "(SC6->C6_OP+If(Empty(SC6->C6_BLQ).Or.Alltrim(SC6->C6_BLQ)=='N',' ',SC6->C6_BLQ))"
		If aSav651[1] == 2
			cCondicao := 'C6_OP$"'+cOp+'".And.'
		Else
			cCondicao := ''
		EndIf
	EndIf	
	
	cCondicao += 'C6_CLI>="'+aSav651[3]+'".And.C6_CLI<="'+aSav651[4]+'".And.'
	cCondicao += 'C6_PRODUTO>="'+aSav651[5]+'".And.C6_PRODUTO<="'+aSav651[6]+'".And.'
	cCondicao += 'C6_TES>="'+aSav651[9]+'".And.C6_TES<="'+aSav651[10]+'".And.'
	cCondicao += 'Dtos(C6_ENTREG)>="'+Dtos(aSav651[7])+'".And.'
	cCondicao += 'Dtos(C6_ENTREG)<="'+Dtos(aSav651[8])+'".And.'
	cCondicao += 'C6_QTDVEN>0.And.C6_NUM>="'+aSav651[14]+'".And.C6_NUM<="'+aSav651[15]+'".And.'
	cCondicao += 'C6_LOCAL>="'+aSav651[16]+'".And.C6_LOCAL<="'+aSav651[17]+'"'	
	If !Empty(cFIlA650)
		cCondicao := '(' +cCondicao+ ').and.(' +cFilA650+ ')'
	EndIf
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa o filtro utilizando a funcao FilBrowse                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC6")
	dbSetOrder(1)
	bFiltraBrw := {|| FilBrowse("SC6",@aIndexSC6,@cCondicao) }
	Eval(bFiltraBrw)
	
	If aSav651[12] == 1				// Liberando Bloqueio de Credito
		A650LibCre()
	EndIf
	
	dbGotop()
	If Bof() .and. Eof()
		Help(" ",1,"RECNO")
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Endereca a funcao de BROWSE                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cMarca := GetMark()
		MarkBrow("SC6","C6_OK",cCondMark,,,cMarca,,,'xFilial("SC6")','xFilial("SC6")')		
	EndIf
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Finaliza o uso da funcao FilBrowse e retorna os indices padroes.       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	EndFilBrw("SC6",aIndexSC6)
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gera SC's aglutinadas por OP.                                Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If mv_par06 == 2
		For nz:=1 to Len(aOPC1)
			A650GravC1(aOPC1[nz,1],aOPC1[nz,2],aOPC1[nz,3],aOPC1[nz,4],aOPC1[nz,5],;
				aOPC1[nz,6],aOPC1[nz,7],aOPC1[nz,8],aOPC1[nz,9],aOPC1[nz,10],aOPC1[nz,11],aOPC1[nz,12])
		Next nz
		For nz:=1 to Len(aOPC7)
			A650GravC7(aOPC7[nz,1],aOPC7[nz,2],aOPC7[nz,3],aOPC7[nz,4],aOPC7[nz,5],;
				aOPC7[nz,6],aOPC7[nz,7],aOPC7[nz,8],aOPC7[nz,9],aOPC7[nz,10],@aOPC7,nz)
		Next nz
	ElseIf mv_par06 == 3
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gera SC's aglutinadas por data de Necessidade.               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nz:=1 to Len(aDataOPC1)
			A650GravC1(aDataOPC1[nz,1],aDataOPC1[nz,2],aDataOPC1[nz,3],aDataOPC1[nz,4],aDataOPC1[nz,5],;
				aDataOPC1[nz,6],aDataOPC1[nz,7],aDataOPC1[nz,8],aDataOPC1[nz,9],aDataOPC1[nz,10],aDataOPC1[nz,11],aDataOPC1[nz,12])
		Next nz
		For nz:=1 to Len(aDataOPC7)
			A650GravC7(aDataOPC7[nz,1],aDataOPC7[nz,2],aDataOPC7[nz,3],aDataOPC7[nz,4],aDataOPC7[nz,5],;
				aDataOPC7[nz,6],aDataOPC7[nz,7],aDataOPC7[nz,8],aDataOPC7[nz,9],aDataOPC7[nz,10],@aDataOPC7,nz)
		Next nz
	EndIf
EndIf

Pergunte("MTA650",.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da janela                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
inclui := .F.
aRotina:=AClone(aRetCopy)

dbSelectArea(cAlias)
dbGoTo(nReg)
RETURN

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддд©╠╠
╠╠ЁFun┤└o    ЁA650ProcOP  Ё Autor Ё Rodrigo de A. SartorioЁData  Ё29/12/95Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддд╢╠╠
╠╠ЁDescri┤└o Ё Gera OPs atraves dos PVs	                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650ProcOP(cAlias,cCampo,nOpcE,cMarca,lInverte)
Processa({|lEnd| A650GeraOP(@lEnd,cAlias,cCampo,nOpcE,cMarca,lInverte)},STR0012,OemToAnsi(STR0013),.F.) //"Gera┤└o de OPs"###"Gerando OPs..."
RETURN

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650GeraOPЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁPrograma de geracao de OP's a partir de pedidos selecionadosЁ╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650GeraOp(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Numero da opcao selecionada                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650GeraOp(lEnd,cAlias,cCampo,nOpcE,cMarca,lInverte)
Local nReg:=0,nIndex:=0,nQtdAval:=0,nx:=0
Local cArqNtx2:=CriaTrab(NIL,.F.)
Local cNumOPAtu  := aSav651[13]
Local cNumPVAnt  := ''
Local aPedidos   := {}
Local lSomaNumOP := .T.
Local lPEGrava   := ExistBlock('MA650GRPV')
Local lConsEst   := (GetMV("MV_CONSEST") == "S")
// Indica se permite repeir o mesmo grupo de opcionais em varios niveis ou nao
Local lNewOpc    := GetNewPar("MV_REPGOPC","N") == "S" .And. SC6->(FieldPos("C6_MOPC")) > 0

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variaveis para controle da Grade                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private nIncGrd  := 0
Private cNumOPAnt
PRIVATE cObs     := ""
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Retorna os indices e cria a 2a IndRegua.                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Retorna os indices e cria a 2a IndRegua.                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC6")
RetIndex("SC6")
dbClearFilter()
If aSav651[18]==1
	cIndice:="C6_FILIAL+C6_NUM+C6_ITEM"
ElseIf aSav651[18]==2
	cIndice:="C6_FILIAL+C6_PRODUTO+C6_OPC+C6_TPOP+C6_REVISAO+C6_NUM+C6_ITEM"
EndIf
If !lInverte
	cCondicao += '.And.C6_OK == "'+SUBSTR(cMarca,1,Len(C6_OK))+'"'
EndIf
IndRegua("SC6",cArqNtx2,cIndice,,cCondicao,STR0061) //"Selecionando Registros..."
nIndex:=RetIndex("SC6")
#IFNDEF TOP
	dbSetIndex(cArqNtx2+OrdBagExt())
#ENDIF
dbSetOrder(nIndex+1)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Desenha o cursor e o salva para poder movimenta'-lo          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea(cAlias)
ProcRegua(LastRec(),21,5)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa leitura a partir da filial selecionada            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC2")
dbSetOrder(1)
dbSelectArea(cAlias)
dbSeek(xFilial())
While !Eof() .And. C6_FILIAL == xFilial()
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	// Caso nao exista cria array que registra todos os niveis da estrutura
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Type("aRetorOpc") <> "A"
		aRetorOpc:={}
	EndIf
	If lNewOpc
		aRetorOpc:=STR2Array(SC6->C6_MOPC,.F.)
	EndIf
	cNumPVAnt := If(aSav651[18]==1,SC6->C6_NUM,SC6->C6_PRODUTO+SC6->C6_OPC+SC6->C6_TPOP+SC6->C6_REVISAO)
	dbSkip()
	lSomaNumOP := !(cNumPVAnt==If(aSav651[18]==1,SC6->C6_NUM,SC6->C6_PRODUTO+SC6->C6_OPC+SC6->C6_TPOP+SC6->C6_REVISAO))
	nReg := Recno()
	dbSkip(-1)
	Begin Transaction
	lSomaNumOP := AvalMarca(cAlias,cMarca,lInverte,@cNumOPAtu,@nQtdAval,@aPedidos,lPEGrava,nIncGrd) .And. lSomaNumOP
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁGera OPs / SCs aglutinadas por produto e grava PVs            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lSomaNumOp
		nIncGrd  :=  0
		If aSav651[18]==2 .And. QtdComp(nQtdAval) > QtdComp(0) .And. Len(aPedidos) > 0
			SC6->(dbGoto(aPedidos[1,1]))
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Numeracao da OP                                              Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cNumOP   := cNumOpAtu	
			cItemOp  := "01"
			cSeqC2   := "000"
			cItemGrd := Space(Len(SC2->C2_ITEMGRD))
			cGrade   := Space(Len(SC2->C2_GRADE))
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Avalia se o programa pode utilizar este nёmero de OP         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SC2")
			If dbSeek(xFilial()+cNumOp+cItemOp)
				cNumOp:=GetNumSC2()
			EndIf
			If !(cNumOP==cNumOPAtu)
				cNumOPAtu := cNumOP
			EndIf
			cNumOPAnt := cNumOPAtu
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Nao amarra a OP a um unico pedido para evitar erros de       Ё
			//Ё interpretacao do usuario                                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			cPedido := ""
			cItemPV := ""
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Posiciona o produto.                                         Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SB1")
			dbSetOrder(1)
			If SB1->B1_FILIAL+SB1->B1_COD != xFilial()+SC6->C6_PRODUTO
				dbSeek(xFilial()+SC6->C6_PRODUTO)
			EndIf
			cRoteiro:= SB1->B1_OPERPAD
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Calcula a qtd a ter a OP ou SC gerada                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If aSav651[19] == 1 .Or. aSav651[19] == 3
				aQtdes := CalcLote(SC6->C6_PRODUTO,nQtdAval,"F")
			ElseIf aSav651[19] == 2
				aQtdes := {nQtdAval}
			EndIf
			If aSav651[19] == 3
				nQtdBack:=0
				For nX := 1 To Len(aQtdes)
					nQtdBack+=aQtdes[nX]
				Next nX				
				aQtdes := {nQtdBack}
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Gera as OPs ou SCs                                           Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If aPedidos[1,2] .Or. aSav651[2] == 1
				For nX := 1 To Len(aQtdes)
					cSeqC2:=Soma1(cSeqC2,Len(SC2->C2_SEQUEN))
					A650GeraC2(SC6->C6_PRODUTO,aQtdes[nX],,SC6->C6_ENTREG,,,,,IIf(aSav651[11]==1,.T.,.F.),.T.,SC6->C6_LOCAL,SC6->C6_OPC,SC6->C6_TPOP,SC6->C6_REVISAO,NIL,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
					MontEstru(SC6->C6_PRODUTO,aQtdes[nX],SC2->C2_DATPRI,,cSeqC2,SC2->C2_PRIOR,lConsEst,SC6->C6_OPC,.F.,SC6->C6_TPOP,SC2->C2_REVISAO,SC6->C6_PRODUTO)
					If ( __lSx8 )
						ConfirmSx8()
					EndIf
				Next nX
			ElseIf aSav651[2] == 2
				If ( __lSx8 )
					RollBackSx8()
				EndIf
				cNumOp  := ""
				cItemOp := ""
				For nX := 1 to Len(aQtdes)
					A650GeraC1(SC6->C6_PRODUTO,aQtdes[nX],cOp,SC6->C6_ENTREG,,,0,SC6->C6_LOCAL,SC6->C6_TPOP,cPedido,cItemPv)
				Next
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Grava as informacoes referentes as OPs nos PVs               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			For nx:=1 to Len(aPedidos)
				SC6->(dbGoto(aPedidos[nx,1]))
				Reclock("SC6",.F.)
				Replace C6_OP With "01"
				Replace C6_NUMOP  With cNumOp
				Replace C6_ITEMOP With cItemOP
				Replace C6_OK     With ""
				aPedidos[nx,3]:=cNumOp
				aPedidos[nx,4]:=cItemOP
				MsUnlock()
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Posiciona no arquivo de saldos.                              Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				dbSelectArea("SB2")
				dbSetOrder(1)
				dbSeek(xFilial()+SC6->C6_PRODUTO+IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
				If !Found()
					CriaSB2(SC6->C6_PRODUTO,IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
					MsUnLock()
				EndIf
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza saldos fisicos de empenho e pedidos de vendas.       Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				A650AtEmpn(SC6->C6_QTDVEN,"+")
				// Chama ponto de entrada para gravacao no SC6
				If lPEGrava
					ExecBlock('MA650GRPV',.F.,.F.,)		
				EndIf
			Next nx	
			nQtdAval:=0
			aPedidos:={}	
		EndIf
	Else
		cNumOPAnt := cNumOPAtu
	EndIf
	cNumOPAtu := If(!Empty(aSav651[13]),If(lSomaNumOP,Soma1(cNumOPAtu,Len(cNumOPAtu)),cNumOPAtu),'')
	End Transaction
	dbSelectArea(cAlias)
	dbGoto(nReg)
End
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁGera OPs / SCs aglutinadas por produto e grava PVs            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If	QtdComp(nQtdAval) > QtdComp(0) .And. Len(aPedidos) > 0
	nIncGrd  :=  0
	SC6->(dbGoto(aPedidos[1,1]))
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Numeracao da OP                                              Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cNumOP   := cNumOpAtu	
	cItemOp  := "01"
	cSeqC2   := "000"
	cItemGrd := Space(Len(SC2->C2_ITEMGRD))
	cGrade   := Space(Len(SC2->C2_GRADE))
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Avalia se o programa pode utilizar este nёmero de OP         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC2")
	If dbSeek(xFilial()+cNumOp+cItemOp)
		cNumOp:=GetNumSC2()
	EndIf
	If !(cNumOP==cNumOPAtu)
		cNumOPAtu := cNumOP
	EndIf
	cNumOPAnt := cNumOPAtu
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Nao amarra a OP a um unico pedido para evitar erros de       Ё
	//Ё interpretacao do usuario                                     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cPedido := ""
	cItemPV := ""
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona o produto.                                         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB1")
	dbSetOrder(1)
	If SB1->B1_FILIAL+SB1->B1_COD != xFilial()+SC6->C6_PRODUTO
		dbSeek(xFilial()+SC6->C6_PRODUTO)
	EndIf
	cRoteiro:= SB1->B1_OPERPAD
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Calcula a qtd a ter a OP ou SC gerada                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If aSav651[19] == 1 .Or. aSav651[19] == 3
		aQtdes := CalcLote(SC6->C6_PRODUTO,nQtdAval,"F")
	ElseIf aSav651[19] == 2
		aQtdes := {nQtdAval}
	EndIf
	If aSav651[19] == 3
		nQtdBack:=0
		For nX := 1 To Len(aQtdes)
			nQtdBack+=aQtdes[nX]
		Next nX				
		aQtdes := {nQtdBack}
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gera as OPs ou SCs                                           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Begin Transaction
	If aPedidos[1,2] .Or. aSav651[2] == 1
		For nX := 1 To Len(aQtdes)
			cSeqC2:=Soma1(cSeqC2,Len(SC2->C2_SEQUEN))
			A650GeraC2(SC6->C6_PRODUTO,aQtdes[nX],,SC6->C6_ENTREG,,,,,IIf(aSav651[11]==1,.T.,.F.),.T.,SC6->C6_LOCAL,SC6->C6_OPC,SC6->C6_TPOP,SC6->C6_REVISAO,NIL,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
			MontEstru(SC6->C6_PRODUTO,aQtdes[nX],SC2->C2_DATPRI,,cSeqC2,SC2->C2_PRIOR,lConsEst,SC6->C6_OPC,.F.,SC6->C6_TPOP,SC2->C2_REVISAO,SC6->C6_PRODUTO)
			If ( __lSx8 )
				ConfirmSx8()
			EndIf
		Next nX
	ElseIf aSav651[2] == 2
		If ( __lSx8 )
			RollBackSx8()
		EndIf
		cNumOp  := ""
		cItemOp := ""
		For nX := 1 to Len(aQtdes)
			A650GeraC1(SC6->C6_PRODUTO,aQtdes[nX],cOp,SC6->C6_ENTREG,,,0,SC6->C6_LOCAL,SC6->C6_TPOP,cPedido,cItemPv)
		Next
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Grava as informacoes referentes as OPs nos PVs               Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	For nx:=1 to Len(aPedidos)
		SC6->(dbGoto(aPedidos[nx,1]))
		Reclock("SC6",.F.)
		Replace C6_OP With "01"
		Replace C6_NUMOP  With cNumOp
		Replace C6_ITEMOP With cItemOP
		Replace C6_OK     With ""
		aPedidos[nx,3]:=cNumOp
		aPedidos[nx,4]:=cItemOP
		MsUnlock()
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Posiciona no arquivo de saldos.                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB2")
		dbSetOrder(1)
		dbSeek(xFilial()+SC6->C6_PRODUTO+IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
		If !Found()
			CriaSB2(SC6->C6_PRODUTO,IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
			MsUnLock()
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza saldos fisicos de empenho e pedidos de vendas.       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		A650AtEmpn(SC6->C6_QTDVEN,"+")
		// Chama ponto de entrada para gravacao no SC6
		If lPEGrava
			ExecBlock('MA650GRPV',.F.,.F.,)		
		EndIf
	Next nx	
	End Transaction
	nQtdAval:=0
	aPedidos:={}	
EndIf
CloseBrowse()
RETURN

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650VisualЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de visualizacao de O.P.s                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe e Ё Void A650Visual(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650Visual(cAlias)
Local GetList:={}, nReg:=Recno(), cNumOp, cItemOp, aOps:={}, nOpcC:=1
Local cCadastro := OemToAnsi(STR0014),oDlg,oQual	//"OP por Pedido de Venda"

/*здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Estrutura do array de ordens de producao                             Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Seq Produto                Qtde
99  X--------------X 9999999.99
0        1         2         3
1234567890123456789012345678901
*/

While .T.
	
	/*здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	Ё Verifica se esta' na filial correta                          Ё
	юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
	If xFilial() != C6_FILIAL
		Help(" ",1,"A000FI")
		Exit
	EndIf
	
	If C6_OP $ "04#02#  "
		Help(" ",1,"A650NGOP")
		Exit
	EndIf
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona Arquivo de Ordens de Producao                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea(cAlias)
	dbGoTo(nReg)
	cNumOp :=IF(!Empty(SC6->C6_NUMOP),SC6->C6_NUMOP,SC6->C6_NUM)
	cItemOp:=IF(!Empty(SC6->C6_ITEMOP),SC6->C6_ITEMOP,SC6->C6_ITEM)
	
	dbSelectArea("SC2")
	dbSeek(xFilial()+cNumOp+cItemOp)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Carrega array (aOps) com as Ordens de Producao do pedido     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == (xFilial()+cNumOp+cItemOp)
		If !Empty(C2_PEDIDO) .And. C2_PEDIDO # SC6->C6_NUM
			dbSkip()
			Loop
		EndIf
		If !Empty(C2_ITEMPV) .And. C2_ITEMPV # SC6->C6_ITEM
			dbSkip()
			Loop
		EndIf
		AADD(aOps,{C2_SEQUEN,C2_PRODUTO,Str(C2_QUANT,10,2)})
		dbSkip()
	EndDo
	
	IF Empty(aOps)
		Help(" ",1,"A650NOP")
		Exit
	Else
		DEFINE MSDIALOG oDlg TITLE cCadastro From 09,0 To 20,50 OF oMainWnd
		@ 0.5,  0 TO 6, 20.0 OF oDlg
		@ 1,.7 Say OemToAnsi(STR0015)+cNumOP SIZE 110,7	//"Nёmero da OP:  "
		@ 1,12 Say OemToAnsi(STR0016)+cItemOP SIZE 50,7 //"Item:  "
		@ 2,.7 LISTBOX oQual Fields HEADER OemToAnsi(STR0017),OemToAnsi(STR0018),OemToAnsi(STR0019) SIZE 150,42	//"Sequencia"###"Produto"###"Quantidade"
		oQual:SetArray(aOps)
		oQual:bLine := { || {aOps[oQual:nAT][1],aOps[oQual:nAT][2],aOps[oQual:nAT][3]}}
		DEFINE SBUTTON FROM 10  ,166  TYPE 1 ACTION oDlg:End() ENABLE OF oDlg
		ACTIVATE MSDIALOG oDlg
	Endif
	Exit
EndDo

/*здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
Ё Restaura a integridade da janela                             Ё
юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды*/
dbSelectArea(cAlias)
dbGoTo(nReg)

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650DeletaЁ Autor Ё Eveli Morasco         Ё Data Ё 27/11/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de Delecao de O.Ps                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650Deleta(ExpC1,ExpN1,ExpN2)                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650Deleta(cAlias,nReg,nOpc,aCpo,cProgOrig,lProcessou)

Local nOpcA,aAC := { STR0062,STR0063 } //"Abandona"###"Confirma"
Local lMTA650ET:= ExistTemplate( "MTA650E" )
Local lMTA650E := (ExistBlock( "MTA650E" ) )
Local lProcessa:=.T.
Local oDlg, aPosEnch:={}
Local lPar, cNum, cItem, cSeq
Local lMonta    := .F.
Local nQuant    := 0
Local nQuant2UM := 0
Local bCampo := {|nCpo| Field(nCpo) }
Local cMascara	:= GetMv("MV_MASCGRD")
Local nTamRef	:= Val(Substr(cMascara,1,2))
Local aAreaSC2 := ' '
Local cItemGrd
Local lExcGra := .F.
Local aBut650 := {}
Local lRet
Local i          := 0
LocaL aDados     := {}

Private lOkNaoSC6 := .F.

If cProgOrig == NIL
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se devera' excluir ou nao todos os itens da Grade      Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	lExcGra  := If(aSav650[12]==1, .T. , .F.)  	
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta a entrada de dados do arquivo                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Private aTELA[0][0],aGETS[0]
PRIVATE aRatAFM		:= {}					//Variavel utilizada pela Funcao PMSDLGOP - Gerenc. Projetos
PRIVATE bPMSDlgOP	:= {||PmsDlgOP(5,SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN)} // Chamada da Dialog de Gerenc. Projetos

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se for deletar todos os itens da Grade, a Enchoice sera' mon-Ё
//Ё tada de acordo com as variaveis de memoria, caso contrario,  Ё
//Ё sera' montada baseando-se no registro corrente no SC2        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

If IntePms()		// Se usa PMS integrado com o ERP
	aBut650 := {{'PROJETPMS',{||Eval(bPmsDlgOP)},STR0071 }} //"Gerenciamento de Projetos"
Endif	

If IntQIP(SC2->C2_PRODUTO) //Define a integracao com o QIP
	Aadd(aBut650,{"RELATORIO",{|| QP650HIS(SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN,SC2->C2_CHAVE)},STR0087}) //"ObservaГЦo da Ordem de ProduГЦo..."
EndIf

AAdd(aBut650,{ "ORDEM", {|| A650Track() },"System Tracker"} )

If lExcGra  .And. !EMPTY(SC2->C2_ITEMGRD)
	lMonta := .T.
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Salva a integridade dos campos de Bancos de Dados            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	FOR i := 1 TO FCount()
		M->&(EVAL(bCampo,i)) := FieldGet(i)
	NEXT i
	cNum := SC2->C2_NUM
	cItem:= SC2->C2_ITEM
	cSeq := SC2->C2_SEQUEN
	dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)	
	aAreaSC2:=SC2->(GetArea())	
	Do While !Eof() .And. C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN == xFilial()+cNum+cItem+cSeq
		nQuant+= (C2_QUANT-C2_QUJE-C2_PERDA)
		nQuant2UM += C2_QTSEGUM
		dbSkip()
	EndDo
	RestArea(aAreaSC2)
	M->C2_PRODUTO := Substr(M->C2_PRODUTO,1,nTamRef)
	M->C2_QUANT   := nQuant
	M->C2_QTSEGUM := nQuant2UM
	M->C2_OPC     := " "
	M->C2_ITEMGRD := " "
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Envia para processamento dos Gets.                           Ё
//Ё Pcount() retorna num. de parametros enviados na chamada da   Ё
//Ё funcao. Se Pcount() >= 5 foi chamado pelo mata740 (cancel.Op)Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se for rotinas automaticas atualiza a nopca com 2 e nao deve Ё
//Ё montar a janela                                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

If PCount() < 5 .and. (Type("l650Auto") # "L" .or. !l650Auto)
	DEFINE MSDIALOG oDlg TITLE cCadastro FROM 9,0 TO TranslateBottom(.F.,28),80 OF oMainWnd	
	aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}  // ocupa todo o  espaco da janela
	nOpcA:=EnChoice( cAlias, nReg, nOpc ,,,,,aPosEnch,,,,,,,,lMonta)	//"Quanto └ Exclus└o?"	
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{|| If(A650DelOk(), (nOpca := 2,oDlg:End()), nOpca := 1)},{|| nOpca := 1,oDlg:End()},,aBut650)
Else
	nOpcA := 2
EndIf
cNum  := SC2->C2_NUM
cItem := SC2->C2_ITEM
cSeq  := SC2->C2_SEQUEN
cItemGrd := SC2->C2_ITEMGRD

If nOpcA == 2
	
	If lExcGra .And. !Empty(SC2->C2_ITEMGRD)
		dbSeek(xFilial()+cNum+cItem)
	EndIf
	
	While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM+C2_SEQUEN == xFilial()+cNum+cItem+cSeq
		
		If !lExcGra .And. SC2->C2_ITEMGRD!=cItemGrd
			dbSkip()
			loop
		EndIf
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Template acionando Ponto de entrada                Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lMTA650ET
			lProcessa:= ExecTemplate("MTA650E",.F.,.F.)			
			If !(ValType(lProcessa) == "L")
				lProcessa := .T.
			EndIf
		EndIf
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Ponto de entrada anterior a exclusao - MTA650E      Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддды
		
		If lProcessa .and. lMTA650E 
			lProcessa:= ExecBlock("MTA650E",.F.,.F.)				
			If !(ValType(lProcessa) == "L")
				lProcessa := .T.
			EndIf
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Antes de deletar verifica se tem resultados 	                  Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If IntQIP(SC2->C2_PRODUTO) //Define a integracao com o QIP
			QPR->(dbSetOrder(1))
			If QPR->(dbSeek( xFilial("QPR")+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN ))
				Aviso('',OemToAnsi(STR0067),{'Ok'}) //"Existe resultado j═ coletado para esta Ordem de Produ┤└o. Esta O.P. n└o poder═ ser exclu║da."				
				lProcessa := .F.
				SC2->(dbSkip())
			Else
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Exclui o Movimento OP x Lotes								 Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				aDados := {(SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)," "," ",SC2->C2_PRODUTO,SC2->C2_REVI,;
					SC2->C2_LOCAL,SC2->C2_UM,SC2->C2_QUANT,SC2->C2_DATPRI,SC2->C2_EMISSAO," "}                                
					
				QIPAtuOPLote(aDados,2)

			EndIf
		EndIf
		
		If lProcessa .And. A650ChkComp(SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN,SC2->C2_ITEMGRD)
			lPar:=Iif(PCount() < 5,.T.,.F.)
			// Verifica se foram geradas as OPs Filhas, SCs, Demandas, etc.
			If A650ChkBatch(SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD)
				A650DelOp(lPar,@cAlias,@lProcessou,lExcGra)
				If lProcessou
					Exit
				EndIf				
			Else
				dbSelectArea("SB2")
				dbSetOrder(1)
				If !dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL)
					CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
					MsUnlock()
				EndIf
				GravaB2Pre("-",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Executa a exclusao das tabelas do SIGAPMS 2-Estorno/3-ExclusaoЁ
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
				dbSelectArea("SC2")
				PmsWriteOP(2,"SC2")
				PmsWriteOP(3,"SC2")
				A650DelSHC(SC2->C2_PRODUTO,SC2->(C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD),SC2->C2_DATPRI)
				RecLock(cAlias,.F.,.T.)
				dbDelete()
				MsUnLock()
			EndIf
		ElseIf !lProcessa .Or. !lRet
			Exit
		EndIf
	EndDo	
EndIf

dbSelectArea("SC2")
RETURN .T.

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддддбдддддддбддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    Ё A650DelOk   Ё Autor Ё Marcelo Iuspa      Ё Data Ё 26/08/02 Ё╠╠
╠╠цддддддддддедддддддддддддадддддддаддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Valida delecao de OP                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DelOk
Local aSavAre  := {SC6->(IndexOrd()), SC6->(RecNo()), Alias()}
Local nOpcao   := 2,lSeek:=.T.,lRet:=.T.
Local oDlg     := Nil
Local cCaption := STR0090 //"Exclusao de OP"
Local cCaption2:= STR0091 //"Pedido de Venda nao encontrado"
Local cMsg     := STR0092 //"O que fazer?"
Local aBotoes  := {STR0093, STR0094, STR0095} //"Nao Excluir"###"Eliminar empenho"###"Manter empenho"
Local nX         := 0

If !(SC2->C2_DESTINA == "P" .Or. SC2->C2_AGLUT == "S")
	Return(.T.)
Endif	

dbSelectArea("SC6")
dbSetOrder(7)
lSeek:=dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM)
If !lSeek	
	nOpcao:=0
	DEFINE MSDIALOG oDlg FROM 0,0 TO 160,450 TITLE cCaption Of oMainWnd PIXEL
	DEFINE FONT oBold NAME "Arial" SIZE 0, -13 BOLD
	@ 0, 0 BITMAP oBmp RESNAME "LOGIN" oF oDlg SIZE 35,210 NOBORDER WHEN .F. PIXEL
	@ 11 ,35  TO 13 ,400 LABEL '' OF oDlg PIXEL
	@ 3  ,37  SAY cCaption2 Of oDlg PIXEL SIZE 130 ,9 FONT oBold
	@ 16 ,38  SAY cMsg      Of oDlg PIXEL SIZE 185,50
	TButton():New(1000,1000," ",oDlg,{||Nil},32,10,,oDlg:oFont,.F.,.T.,.F.,,.F.,,,.F.)
	ny := 160
	For nx:=1 to Len(aBotoes)
		cAction:="{||nOpcao:="+Str(Len(aBotoes)-nx+1)+",oDlg:End()}"
		bAction:=&(cAction)
		TButton():New(62,ny,OemToAnsi(AllTrim(aBotoes[Len(aBotoes)-nx+1])), oDlg,bAction,52,10,,oDlg:oFont,.F.,.T.,.F.,,.F.,,,.F.)
		ny -= 56
	Next nx
	ACTIVATE MSDIALOG oDlg CENTERED
	lOkNaoSC6 := nOpcao == 2
	lRet:=nOpcao > 1
Endif
SC6->(dbSetOrder(aSavAre[1]))
SC6->(dbGoto(aSavAre[2]))
dbSelectArea(aSavAre[3])
Return lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё AvalMarcaЁ Autor Ё Claudinei M. Benzi    Ё Data Ё 10.01.92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Se o pedido estiver marcado ele gerara' a OP               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё AvalMarca(ExpC1)                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static Function AvalMarca(cAlias,cMarca,lInverte,cNumOPAtu,nQtdAval,aPedidos,lPEGrava,nInc)
Static lBlockVld  := NIL
Local nToler,nQtdeTot,aQtdes:={},nX,nRegSB2,nQtdStok,nQtdBack,cOp,nPosSC2,lNaoGera:=.F.
Local lConsEst := (GetMV("MV_CONSEST") == "S")
Local cItem:="00"
Local lExistBlkT :=ExistTemplate("A650SALDO")
Local lExistBlock:=ExistBlock("A650SALDO")
Local lRetornoBlock:=.T.
Local lRet:=.F.
Local bCond := { || .T. }
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto tem estrutura.                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local lFoundSG1:=SG1->(dbSeek(xFilial("SG1")+SC6->C6_PRODUTO))
Private cObs:=""

lBlockVld  := If(ValType(lBlockVld)=="L",lBlockVld,ExistBlock("A650PRCPV"))
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variaveis utilizadas para controle da grade                  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nInc := If(nInc == NIL, 0, nInc)

If aSav651[20] == 1
	bCond := { || SC6->C6_OP == "07" }
Else
	bCond := { || Empty(C6_OP) .And. (Empty(C6_BLQ) .Or. Alltrim(C6_BLQ) == "N") }
EndIf

If IsMark("C6_OK",cMarca,lInverte) .And. Eval( bCond ) .And. If(aSav651[2] == 3,lFoundSG1,.T.) .And. AvalTES(SC6->C6_TES, 'S')
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se utiliza Ponto de Entrada valida item por item do PV       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If lBlockVld
		lRetornoBlock:=ExecBlock("A650PRCPV",.F.,.F.)
		If ValType(lRetornoBlock) # "L"
			lRetornoBlock:=.T.
		EndIf
	EndIf	
	If !lBlockVld .Or. (lBlockVld .And. lRetornoBlock)
		lRet:=.T.
		cOp := CriaVar("C1_OP")
		Private cSeqC2:="000",cNumOp:="",cItemOp:="",cLocal:="",cItemPV:="",cPedido:=""
		cPedido := SC6->C6_NUM
		cItemPV := SC6->C6_ITEM				
		cNumOp  := If(Empty(cNumOPAtu),SC6->C6_NUM,cNumOPAtu)							
		cItemOp := SC6->C6_ITEM
		cLocal  := SC6->C6_LOCAL
		cGrade  := SC6->C6_GRADE
		
		dbSelectArea("SC2")		
		
		cItemOp  := SC6->C6_ITEM                           	
		cItemGrd := If(SC6->C6_GRADE == "S",StrZero( Val(SC6->C6_ITEMGRD), Len(SC2->C2_ITEMGRD)), Space(Len(SC2->C2_ITEMGRD)) )
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Avalia se o programa pode utilizar este nёmero de OP         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nPosSC2 := Recno()		
		If dbSeek(xFilial()+cNumOp+cItemOp)
			If nInc == 0
				cNumOp:= GetNumSC2()      			
			ElseIf !EMPTY(SC6->C6_GRADE)
				cNumOp:= cNumOPAnt
			EndIf				
		EndIf
		
		If !EMPTY(SC6->C6_GRADE)
			nInc += 1
		EndIf
		
		If !(cNumOP==cNumOPAtu)
			cNumOPAtu := cNumOP
		EndIf
		
		nIncGrd := nInc
		
		dbGoto(nPosSC2)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Posiciona o produto.                                         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB1")
		dbSetOrder(1)
		If SB1->B1_FILIAL+SB1->B1_COD != xFilial()+SC6->C6_PRODUTO
			dbSeek(xFilial()+SC6->C6_PRODUTO)
		Endif
		cRoteiro:=SB1->B1_OPERPAD
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Posiciona no arquivo de saldos.                              Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB2")
		dbSetOrder(1)
		dbSeek(xFilial()+SC6->C6_PRODUTO+IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
		If !Found()
			CriaSB2(SC6->C6_PRODUTO,IIF(aSav651[11]==1,SB1->B1_LOCPAD,SC6->C6_LOCAL))
			MsUnLock()
		EndIf
		nRegSB2 := Recno()
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se existe saldo em estoque.                          Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nQtdStok := 0
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Soma o valor do pedido para corrigir ERRO.                    Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If lConsEst
			nQtdStok := SaldoSB2(.T., , ,lConsTerc,lConsNPT)+(B2_SALPPRE+B2_SALPEDI)-B2_QEMPN+AvalQtdPre("SB2",2)
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Executa P.E. para tratar saldo disponivel.                    Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lExistBlkT
				nQtdBack:=nQtdStok	
				nQtdStok:=ExecTemplate("A650SALDO",.F.,.F.,nQtdStok)
				If ValType(nQtdStok) != "N"
					nQtdStok:=nQtdBack
				EndIf
			EndIf

			If lExistBlock
				nQtdBack:=nQtdStok	
				nQtdStok:=ExecBlock("A650SALDO",.F.,.F.,nQtdStok)
				If ValType(nQtdStok) != "N"
					nQtdStok:=nQtdBack
				EndIf
			EndIf
		EndIf
		If aSav651[18] == 1 .Or. (aSav651[18] == 2 .And. QtdComp(nQtdAval) == QtdComp(0))
			If nQtdStok < 0
				nQtdeTot := ABS(nQtdStok)+SC6->C6_QTDVEN
				If (!Empty(SC6->C6_RESERVA) )
					nQtdeTot := 0
					lNaoGera := .T.
				EndIf
			Else
				nQtdeTot := If(nQtdStok >= SC6->C6_QTDVEN,0,SC6->C6_QTDVEN - nQtdStok)
				If (!Empty(SC6->C6_RESERVA) )
					nQtdeTot := 0
					lNaoGera := .T.
				EndIf
			EndIf
		ElseIf (aSav651[18] == 2 .And. QtdComp(nQtdAval) > QtdComp(0))
			nQtdeTot := SC6->C6_QTDVEN
		EndIf
		nQtdAval+=nQtdeTot
		// Grava informacoes da OP caso processe individualmente cada PV
		If aSav651[18] == 1
			If nQtdeTot > 0
				If lNaoGera
					Help(" ",1,"A650PROXSC",,cNumOp+" "+cItemOp,02,27)
					If ( __lSx8 )
						RollBackSx8()
					EndIf
				Else
					// Verifica a qtd a ter a OP gerada
					If aSav651[19] == 1 .Or. aSav651[19] == 3
						aQtdes := CalcLote(SC6->C6_PRODUTO,nQtdeTot,"F")
					ElseIf aSav651[19] == 2
						aQtdes := {nQtdeTot}
					EndIf
					If aSav651[19] == 3
						nQtdBack:=0
						For nX := 1 To Len(aQtdes)
							nQtdBack+=aQtdes[nX]
						Next nX				
						aQtdes := {nQtdBack}
					EndIf
					If lFoundSG1 .Or. aSav651[2] == 1
						For nX := 1 To Len(aQtdes)
							cSeqC2:=Soma1(cSeqC2,Len(SC2->C2_SEQUEN))
							A650GeraC2(SC6->C6_PRODUTO,aQtdes[nX],,SC6->C6_ENTREG,,,,,IIf(aSav651[11]==1,.T.,.F.),.T.,SC6->C6_LOCAL,SC6->C6_OPC,SC6->C6_TPOP,SC6->C6_REVISAO,NIL,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
							MontEstru(SC6->C6_PRODUTO,aQtdes[nX],SC2->C2_DATPRI,,cSeqC2,SC2->C2_PRIOR,lConsEst,SC6->C6_OPC,.F.,SC6->C6_TPOP,SC2->C2_REVISAO,SC6->C6_PRODUTO)
							If ( __lSx8 )
								ConfirmSx8()
							EndIf
						Next nX
					ElseIf aSav651[2] == 2
						If ( __lSx8 )
							RollBackSx8()
						EndIf
						cNumOp  := ""
						cItemOp := ""
						For nX := 1 to Len(aQtdes)
							A650GeraC1(SC6->C6_PRODUTO,aQtdes[nX],cOp,SC6->C6_ENTREG,,,0,SC6->C6_LOCAL,SC6->C6_TPOP,cPedido,cItemPv)
						Next
					Endif
				EndIf
			Else
				If ( __lSx8 )
					RollBackSx8()
				EndIf
			Endif
			RecLock("SC6",.F.)
			If !lNaoGera .And. nQtdeTot > 0
				Replace C6_OP With "01"
				Replace C6_NUMOP  With cNumOP
				Replace C6_ITEMOP With cItemOP
				Replace C6_OK     With ""
			Else
				Replace C6_OP With "05"
				Replace C6_OK With ""
			EndIf
			MsUnlock()
			// Chama ponto de entrada para gravacao no SC6
			If lPEGrava
				ExecBlock('MA650GRPV',.F.,.F.)		
			EndIf
			// Quando h═ quantidade a ser gerada mas j═ existe nёmero de OP com este nёmero de PV n└o
			// atualiza B2_QEMPN e C6_OP:
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza saldos fisicos de empenho e pedidos de vendas.       Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			dbSelectArea("SB2")
			dbGoto(nRegSB2)
			A650AtEmpn(SC6->C6_QTDVEN,"+")
			// Grava informacoes da OP caso processe aglutinado por produto
		ElseIf aSav651[18] == 2
			If !lNaoGera .And. nQtdeTot > 0
				AADD(aPedidos,{SC6->(Recno()),lFoundSG1,"",""})
			Else
				Reclock("SC6",.F.)
				Replace C6_OP With "05"
				MsUnlock()
				// Quando h═ quantidade a ser gerada mas j═ existe nёmero de OP com este nёmero de PV n└o
				// atualiza B2_QEMPN e C6_OP:
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza saldos fisicos de empenho e pedidos de vendas.       Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				dbSelectArea("SB2")
				dbGoto(nRegSB2)
				A650AtEmpn(SC6->C6_QTDVEN,"+")
			EndIf
		EndIf
	EndIf
EndIf
IncProc()
dbSelectArea(cAlias)
Return lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650IncluiЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de inclusao  de O.P.s                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A650Inclui(ExpC1,ExpN1,ExpN2,ExpC2)                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠Ё          Ё ExpL1 = Se .T. atualiza Projecao de Estoques               Ё╠╠
╠╠Ё          Ё ExpC2 = Campo a ser atualizado na Projacao de Estoques     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650Inclui(cAlias,nReg,nOpcx,aCpo,aX,cCpoProj,cTpOp)
Local nOpca,nToler,nQtdeTot,aQtdes:={},nX,nRegSb2,dData
Local cProduto,nQtde,lProj:=.F.
Local aBut650   := {}
Local aAuxArea	:= GetArea()
Local cItem
Local lEsc		:= .F.
Local aRetEsp   := {}
Local aDados    := {}

PRIVATE aRetorOpc:={}
PRIVATE aColsGrade	:= {}
PRIVATE aHeadGrade	:= {}
PRIVATE aHeader		:= {}
PRIVATE acols		:= {}
PRIVATE aColsRot    := {}
PRIVATE lGrade		:= GetMv("MV_GRADE")
PRIVATE aRatAFM		:= {}					//Variavel utilizada pela Funcao PMSDLGOP - Gerenc. Projetos
PRIVATE bPMSDlgOP	:= {||PmsDlgOP(3,M->C2_NUM,M->C2_ITEM,M->C2_SEQUEN)} // Chamada da Dialog de Gerenc. Projetos
PRIVATE lAltEsp		:= .F. // Indica se ┌ a 1a. Entrada ap╒s alteracao especificacao

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	lProj := .T.
EndIf

If ValType(aX) != "L"
	aX := .F.
EndIf

Private cSeqC2 :="001", cNumOp, cItemOp , cLocal

If ( Type("l650Auto")=="L" .and. l650Auto )
	nOpca := AxIncluiAuto(cAlias,"A650TudoOK()")
Else
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para rotina de inclusao de OPs (Exceto Proj. Estoques) Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If (lProj==.F.) .and. (aX == .F.)
		
		If IntePms()		// Se usa PMS integrado com o ERP
			aBut650 := {{'PROJETPMS',{||Eval(bPmsDlgOP)},STR0071 }} //"Gerenciamento de Projetos"
		Endif
		If IntQIP() //Define a integracao com o QIP
			Aadd(aBut650,{"RELATORIO",{|| QP650HIS(M->C2_NUM,M->C2_ITEM,M->C2_SEQUEN,M->C2_CHAVE)},STR0087}) //"ObservaГЦo da Ordem de ProduГЦo..."
		EndIf
		
		nOpca := AxInclui(cAlias,nReg,nOpcx,,,,"A650TudoOK()",,"A650AtuInc()",aBut650)
	Else
		nOpca := 1
	EndIf
EndIf
If __lSX8
	If nOpcA == 1
		ConfirmSX8()
	Else
		RollBackSx8()
	EndIf
EndIf
dbSelectArea("SC2")
If nOpca == 1
	aAuxArea := GetArea()
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza o C2_REVI - referente ao M╒dulo Insp. Processos  Ё
	//Ё Identifica a Revisao vigente do Produto.                  Ё
	//Ё Atualiza o C2_GRUPO - com o Grupo de Produto.             Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If IntQIP(SC2->C2_PRODUTO) //Define a integracao com o QIP
	
		aRetEsp := QIPRevRot(SC2->C2_PRODUTO)
		
		RecLock("SC2",.F.)
		SC2->C2_REVI   := aRetEsp[1]
		SC2->C2_GRUPO  := aRetEsp[3]
		SC2->C2_VERIFI := 1
		SC2->C2_IDEINV := INVERTE(SC2->C2_NUM) //Ordem invertida p/ controle de Skip-Lote
		MsUnLock()
		
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza o Movimento OP x Lotes								 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aDados := {(SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)," "," ",SC2->C2_PRODUTO,SC2->C2_REVI,;
			SC2->C2_LOCAL,SC2->C2_UM,SC2->C2_QUANT,SC2->C2_DATPRI,SC2->C2_EMISSAO," "}                                

		QIPAtuOPLote(aDados,1)
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Faz todo o tratamento de gravacao do Controle de Skip-Teste estando no    Ё
		//Ё no Modulo Inspecao de Processos                                           Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		QP650GrvSt()
		
		If GetNewPar("MV_QPIMPPL","S") == "S"
			If Type("l650Auto") # "L" .or. !l650Auto
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Faz a Impressao da Ficha de Produto  -  USO                               Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If !Pergunte("QPR041", .T. )
					lEsc	:= .T.
				EndIf
				If !lEsc .And. mv_par01 == 1
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁPonto de Entrada para execucao do relatorio Customizado                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ExistBlock("QIPR041")
						ExecBlock("QIPR041",.F.,.F.,{"MATA650",SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN})
					Else
						QIPR040("MATA650",SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN,"","")
					EndIf
					
				EndIf
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Retorna a pergunta Original                                               Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				Pergunte("MTA650",.F.)
			EndIf
		EndIf		
		dbSelectArea('SC2')
		
	EndIf
	
	
	If (ExistBlock( "MTA650I" ) )
		ExecBlock("MTA650I",.F.,.F.)
	Endif
	cNumOp:= SC2->C2_NUM	
	cItem := SC2->C2_ITEM
	If (lProj==.F.) .and. (aX == .F.)
		Do While !SC2->(EOF()) .And. SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM == xFilial('SC2')+cNumOp+cItem
			dbSelectArea("SB2")
			dbSetOrder(1)
			If !dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL)
				CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
				MsUnlock()
			EndIf
			GravaB2Pre("+",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
			dbSelectArea("SC2")
			A650PutBatch(C2_FILIAL+C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD,,SC2->C2_DATPRI,SC2->C2_DATPRF)
			// Verifica item da grade
			If Empty(SC2->C2_ITEMGRD)
				Exit			
			EndIf
			SC2->(dbSkip())
		EndDo
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Execblock a ser executado apos gravacao do arquivo BATCH     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		IF ExistBlock('MA650PBAT')
			ExecBlock('MA650PBAT',.F.,.F.)
		Endif
	Else
		A650WriteOp(lProj,aX,cCpoProj,cTpOp)
	EndIf
EndIf

RestArea(aAuxArea)
Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650AtuIncЁ Autor Ё Edson Maricate        Ё Data Ё13-06-2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁFuncao chamada pela Axinclui para atualizacao das tabelas   Ё╠╠
╠╠Ё          Ёrelacionadas com a inclusao de ordens de producao.          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA650AtuInc()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      ЁMata650,AxInclui                                            Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650AtuInc()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava no SC2 os Itens Informados na Grade                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
If lGrade .And. Len(aCols) > 0
	Ma650GraGr("SC2","A650")
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Executa a atualizacao das tabelas do SIGAPMS 1-Inclusao      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
PmsWriteOP(1,"SC2")
Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650AlteraЁ Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de alteracao de O.P.s                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A650Altera(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650Altera(cAlias,nReg,nOpcx)

Local nOpca,oDlg,aAlter:={},aPosEnch:={}
Local bCampo := { |nCpo| Field(nCpo) }
Local cMascara	:= GetMv("MV_MASCGRD")
Local nTamRef	:= Val(Substr(cMascara,1,2))
Local cDirPCP := "", cDirOCR := "",nRecFER,nRecSC2,nRecno
Local cNum:="",cItem:="",cSeq:="",cPrior:="",cStatus:="",cSeqPai:="",cItemGrd:=""
Local cCC :=cUM :=cObs := ""
Local dDatPri,dEmissao,dDataAnt
Local nDifFim   :=0,nDifIni:=0
Local lMonta    := .F.
Local nQuant    := 0
Local nQuant2UM := 0
Local aAreaSC2  := ''
Local aBackRot  := aClone(aRotina)
Local aBut650	:= {}

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se devera' alterar ou nao todos os itens da Grade      Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local lAltGra   := If(mv_par11==1, .T. , .F. )
Local i          := 0

PRIVATE cSacram := ""
PRIVATE aTela[0][0], aGets[0]
PRIVATE aRatAFM		:= {}					//Variavel utilizada pela Funcao PMSDLGOP - Gerenc. Projetos
PRIVATE bPMSDlgOP	:= {||PmsDlgOP(4,M->C2_NUM,M->C2_ITEM,M->C2_SEQUEN)} // Chamada da Dialog de Gerenc. Projetos

If !Empty(SC2->C2_DATRF) .and. GetNewPar("MV_ATOPFEC","2") == "2"	// Permite alterar OP encerrada para campos do usuario
	Help("",1,"A650NAOALT")
	Return .F.
EndIf

AADD(aAlter,"C2_CC")
AADD(aAlter,"C2_UM")
AADD(aAlter,"C2_DATPRI")
AADD(aAlter,"C2_DATPRF")
AADD(aAlter,"C2_OBS")
AADD(aAlter,"C2_EMISSAO")
AADD(aAlter,"C2_PRIOR")
AADD(aAlter,"C2_STATUS")

If cModulo == "PCP" .or. cModulo == "QIP"
	dbSelectArea("SH6")
	If !(dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_PRODUTO)) .or. cModulo == "QIP"
		AADD(aAlter,"C2_ROTEIRO")
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Considera os campos criados pelo usuario na alteracao da OP  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SX3")
dbSetOrder(1)
dbSeek("SC2")
While !Eof() .And. X3_ARQUIVO == "SC2"
	If X3_PROPRI == "U" .And. X3USO(X3_USADO)
		AADD(aAlter,X3_CAMPO)
	EndIf
	dbSkip()
EndDo

dbSelectArea("SC2")
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variaveis utilizadas para posterior alteracao de OPs filhas  Ё
//Ё OPs Sacramentadas                                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cNum	:= SC2->C2_NUM
cItem	:= SC2->C2_ITEM
cItemGrd:= SC2->C2_ITEMGRD
cSeq 	:= SC2->C2_SEQUEN
cSeqPai := SC2->C2_SEQPAI
dDatPri := SC2->C2_DATPRI

aAreaSC2:=SC2->(GetArea())
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Salva a integridade dos campos de Bancos de Dados            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
FOR i := 1 TO FCount()
	M->&(EVAL(bCampo,i)) := FieldGet(i)
NEXT i

If lAltGra .And. !EMPTY(SC2->C2_ITEMGRD)
	lMonta := .T.
	dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)	
	Do While !Eof() .And. SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN == xFilial()+cNum+cItem+cSeq
		nQuant+= (C2_QUANT-C2_QUJE-C2_PERDA)
		nQuant2UM += C2_QTSEGUM 	
		dbSkip()
	EndDo
	RestArea(aAreaSC2)     	
	M->C2_PRODUTO := Substr(M->C2_PRODUTO,1,nTamRef)
	M->C2_QUANT   := nQuant
	M->C2_QTSEGUM := nQuant2UM
	M->C2_OPC     := " "
	M->C2_ITEMGRD := " "
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Envia para rotina de Alteracao de OPs                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Type("l650Auto") # "L" .or. !l650Auto
	//	nOpca := AxAltera(cAlias,nReg,nOpcx,,aAlter,,,"A650TudoOK()")
	
	If IntePms()		// Se usa PMS integrado com o ERP
		aBut650 := {{'PROJETPMS',{||Eval(bPmsDlgOP)},STR0071 }} //"Gerenciamento de Projetos"
	Endif
	
	If IntQIP(M->C2_PRODUTO) //Define a integracao com o QIP
		Aadd(aBut650,{"RELATORIO",{|| QP650HIS(M->C2_NUM,M->C2_ITEM,M->C2_SEQUEN,M->C2_CHAVE)},STR0087}) //"ObservaГЦo da Ordem de ProduГЦo..."
	EndIf
	AAdd(aBut650,{ "ORDEM", {|| A650Track() },"System Tracker"} )	
	DEFINE MSDIALOG oDlg TITLE cCadastro FROM 9,0 TO TranslateBottom(.F.,28),80 OF oMainWnd	
	aPosEnch := {,,(oDlg:nClientHeight - 4)/2,}  // ocupa todo o  espaco da janela		
	nOpca := EnChoice(cAlias, nReg, nOpcx, , , , ,aPosEnch,aAlter, , , ,"A650TudoOK()", , ,lMonta)
	ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,&("{|| nOpca := 1,If(Obrigatorio(aGets,aTela).and. Eval({|| " + "a650TudoOk()" + "}),oDlg:End(),(nOpca:=3,.f.))}"),{|| nOpca := 3,oDlg:End()},,aBut650)
Else
	nOpcA := AxIncluiAuto(cAlias,"A650TudoOK()",,4,SC2->(RecNo()))
EndIf

IF nOpca == 1
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa a atualizacao das tabelas do SIGAPMS 2-Estorno/1-Inclusao Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
	PmsWriteOP(2,"SC2")
	
	RecLock("SC2", .F.)
	For i := 1 TO FCount()
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Nao alterar o conteudo destes campos, pois, se for uma OP com Grade e o parametro estiver ativadoЁ	
		//Ё para alterar todos os itens de Grade da OP, os campos abaixo, nao deverao ser alterados.         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
		If FieldName(i)!="C2_PRODUTO".And.FieldName(i)!="C2_QUANT".And.FieldName(i)!="C2_OPC".And.FieldName(i)!="C2_ITEMGRD"
			FieldPut(i,M->&(EVAL(bCampo,i)))
		EndIf	
	Next i                       		
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa a atualizacao das tabelas do SIGAPMS 2-Estorno/1-Inclusao Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
	PmsWriteOP(1,"SC2")
	
	cCC     :=SC2->C2_CC
	cUM     :=SC2->C2_UM
	cObs    :=SC2->C2_OBS
	
	dEmissao:=SC2->C2_EMISSAO
	cPrior  :=SC2->C2_PRIOR
	cStatus :=SC2->C2_STATUS
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Variaveis utilizadas para posterior alteracao de OPs filhas  Ё
	//Ё OPs Sacramentadas                                            Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dEmissao := SC2->C2_EMISSAO
	cPrior	 := SC2->C2_PRIOR
	cStatus	 := SC2->C2_STATUS
	cObs	 := SC2->C2_OBS	
	dDatIni  := SC2->C2_DATPRI	
	dDatFim  := SC2->C2_DATPRF
	
	dbSelectArea("SC2")
	dbSetOrder(1)
	nRecSC2 := Recno()
	
	dbSeek(xFilial()+cNum+cItem+If(lAltGra .And. !Empty(SC2->C2_ITEMGRD),"",cSeq))
	
	While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+cNum+cItem
		
		If !lAltGra .And. SC2->C2_ITEMGRD!=cItemGrd
			dbSkip()
			loop
		EndIf
		
		RecLock("SC2",.F.)
		If !Empty(SC2->C2_ITEMGRD)
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё So' gravar  a observacao nas OP's Pai                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
			If cSeq == C2_SEQUEN
				Replace C2_OBS With cObs     	
			EndIf
			Replace C2_CC With cCC,;
				C2_UM With cUM,;
				C2_DATPRI  With dDatIni,;
				C2_DATPRF  With dDatFim,;
				C2_EMISSAO With dEmissao,;
				C2_PRIOR   With cPrior,;
				C2_STATUS  With cStatus
		EndIf		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Caso usuario deseje, grava Prioridade nas OPs Intermed.   Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If mv_par05 == 1
			Replace C2_PRIOR With cPrior
		EndIf
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Caso usuario deseje, grava Observacao nas OPs Intermed.   Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If mv_par09 == 1
			Replace C2_OBS	With cObs
		EndIf
		Replace C2_EMISSAO	With dEmissao
		Replace C2_STATUS	With cStatus
		MsUnLock()
		dbSkip()
	End
	dbGoto(nRecSC2)
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica a alteracao das datas previstas p/ Inicio/Fim       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Caso alterou a data prevista de inicio e o parametro permitir Ё
	//Ё acerta data das OPs posteriores                               Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If dDatPri # SC2->C2_DATPRI .And. mv_par07 == 1
		If dDatPri < SC2->C2_DATPRI
			nDifIni:=SC2->C2_DATPRI - dDatPri
			dbSkip()
			Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+cNum+cItem .And. C2_SEQUEN > cSeq .And. C2_SEQPAI > cSeqPai
				If Empty(C2_DATRF)
					RecLock("SC2",.F.)
					Replace C2_DATPRI With C2_DATPRI + nDifIni
					Replace C2_DATPRF With C2_DATPRF + nDifIni
					MsUnlock()
				EndIf
				dbSkip()
			EndDo
		Else
			nDifIni:=dDatPri - SC2->C2_DATPRI
			dbSkip()
			Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+cNum+cItem .And. C2_SEQUEN > cSeq .And. C2_SEQPAI > cSeqPai
				If Empty(C2_DATRF)
					RecLock("SC2",.F.)
					Replace C2_DATPRI With C2_DATPRI - nDifIni
					Replace C2_DATPRF With C2_DATPRF - nDifIni
					MsUnlock()
				EndIf
				dbSkip()
			EndDo
		EndIf   		 				
		dbGoto(nRecSC2)
	EndIf
	
	// Apos gravar todos os registros de alteracao
	If (ExistBlock( "MTA650A" ) )
		ExecBlock("MTA650A",.F.,.F.)
	Endif
	
	If IntQIP(M->C2_PRODUTO) //Define a integracao com o QIP
		
		If GetMV("MV_QPIMPPL",.F.,"S") == "S"
			
			If Type("l650Auto") # "L" .or. !l650Auto
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Faz a Impressao da Ficha de Produto  -  USO                               Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If Pergunte("QPR041",.T.) .And. mv_par01 == 1
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//ЁPonto de Entrada para execucao do relatorio Customizado                         Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If ExistBlock("QIPR041")
						ExecBlock("QIPR041",.F.,.F.,{"MATA650",SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN})
					Else
						QIPR040("MATA650",SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)
					EndIf
				EndIf
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Retorna a pergunta Original                                               Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				Pergunte("MTA650",.F.)
			EndIf
		EndIf		
	EndIf
	
	If cSacram == "S" .Or. cSacram == "N"
		If !ChkFile("SH8",.T.)
			Help(" ",1,"SH8EmUso")
		Else
			dbSelectArea("SX2")
			dbSeek("SH8")
			cDirOCR := Alltrim(SX2->X2_PATH)
			If !File(cDirOCR+"CARGA.OPE") .Or. !File(cDirOCR+"CARGA.OI1") .Or. ;
					!File(cDirOCR+"CARGA.OI2") .Or. !File(cDirOCR+"CARGA.OI3") .Or. ;
					!File(cDirOCR+"CARGA.OI4")
				A690CheckSC2(.F.)
			Else
				dbUseArea(.T.,,cDirOCR+"CARGA.OPE","CARGA",.F.,.F.)
				dbSetIndex(cDirOCR+"CARGA.OI1")
				dbSetIndex(cDirOCR+"CARGA.OI2")
				dbSetIndex(cDirOCR+"CARGA.OI3")
				dbSetIndex(cDirOCR+"CARGA.OI4")
				dbGotop()
			EndIf
			cDirPCP := Alltrim(GetMV("MV_DIRPCP"))
			If Empty(cDirPCP)
				PutMV("MV_DIRPCP",cDirOCR)
			EndIf
			cDirPCP += IIf( Right(cDirPCP,1) # "\" , "\" , "" )
			// Apagando OP Sacramentada (caso cSacram = "N" - "dessacramentando" uma OP, esta
			// rotina ┌ executada como medide de precau┤└o).
			dbSelectArea("SHD")
			dbSetOrder(1)
			dbSeek(xFilial()+cNum+cItem+cSeq)
			While !Eof()
				If Substr(HD_OP,1,8) # cNum+cItem
					Exit
				EndIf
				RecLock("SHD",.F.,.T.)
				dbDelete()
				MsUnLock()
				dbSkip()
			End
			// Apagando Ferramentas Sacramentada (caso cSacram = "N" - "dessacramentando" uma OP,
			// esta rotina ┌ executada como medide de precau┤└o).
			dbSelectArea("SHE")
			dbSeek(xFilial()+cNum+cItem+cSeq)
			While !Eof()
				If Substr(HE_OP,1,8) # cNum+cItem
					Exit
				EndIf
				RecLock("SHE",.F.,.T.)
				dbDelete()
				MsUnLock()
				dbSkip()
			End
			If cSacram == "S"
				If File(cDirOCR+"CARGA.FER") .And. File(cDirOCR+"CARGA.FID")
					dbUseArea(.T.,,cDirOCR+"CARGA.FER","FER",.F.,.F.)
					dbSetIndex(cDirOCR+"CARGA.FID")
					dbReIndex()
				EndIf
				dbSelectArea("SH8")
				dbSetOrder(1)
				dbSeek(xFilial()+cNum+cItem+cSeq)
				While !Eof()
					If Substr(H8_OP,1,8) # cNum+cItem
						Exit
					EndIf
					If H8_OP # SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
						dbSelectArea("SC2")
						dbSeek(xFilial()+SH8->H8_OP)
						If !Found()
							Help(" ",1,"A690NAOOP",,SH8->H8_OP,01,21)
							Exit
						EndIf
					EndIf
					RecLock("SHD",.T.)
					Replace  HD_FILIAL With xFilial(),;
						HD_OP With SH8->H8_OP,;
						HD_OPER With SH8->H8_OPER,;
						HD_RECURSO With SH8->H8_RECURSO,;
						HD_FERRAM With SH8->H8_FERRAM,;
						HD_HRINI With SH8->H8_HRINI,;
						HD_DTINI With SH8->H8_DTINI,;
						HD_HRFIM With SH8->H8_HRFIM,;
						HD_DTFIM With SH8->H8_DTFIM,;
						HD_DTIDEAL With SH8->H8_DTIDEAL,;
						HD_HRIDEAL With SH8->H8_HRIDEAL,;
						HD_BITINI With SH8->H8_BITINI,;
						HD_BITFIM With SH8->H8_BITFIM,;
						HD_SEQPAI With SH8->H8_SEQPAI,;
						HD_CTRAB With SH8->H8_CTRAB,;
						HD_USO With SH8->H8_USO,;
						HD_QUANT With SH8->H8_QUANT,;
						HD_DESDOBR With SH8->H8_DESDOBR,;
						HD_BITUSO With SH8->H8_BITUSO,;
						HD_DATRF With SC2->C2_DATRF
					MsUnLock()
					If File(cDirOCR+"CARGA.FER") .And. File(cDirOCR+"CARGA.FID")
						dbSelectArea("FER")
						dbSeek(xFilial("SHE")+SH8->H8_OP)
						nRecFer := Recno()
						While !Eof() .And. xFilial("SHE")+SH8->H8_OP == HE_FILIAL+HE_OP
							dbSelectArea("SHE")
							RecLock("SHE",.T.)
							Replace  HE_FILIAL With xFilial(),;
								HE_PRODUTO With FER->HE_PRODUTO,;
								HE_CODIGO With FER->HE_CODIGO,;
								HE_OPERAC With FER->HE_OPERAC,;
								HE_FERRAM With FER->HE_FERRAM,;
								HE_DTINI With FER->HE_DTINI,;
								HE_DTFIM With FER->HE_DTFIM,;
								HE_HRINI With FER->HE_HRINI,;
								HE_HRFIM With FER->HE_HRFIM,;
								HE_OP With FER->HE_OP
							MsUnLock()
							dbSelectArea("FER")
							dbSkip()
						End
						dbGoto(nRecFer)
						While !Eof() .And. xFilial("SHE")+SH8->H8_OP == HE_FILIAL+HE_OP
							dbDelete()
							dbSkip()
						End
					EndIf
					dbSelectArea("SH8")
					Replace H8_STATUS With "S"
					dbSkip()
				End
				If File(cDirOCR+"CARGA.FER") .And. File(cDirOCR+"CARGA.FID")
					dbSelectArea("FER")
					dbCloseArea()
				EndIf
				If Select("CARGA") > 0
					dbSelectArea("CARGA")
					dbSetOrder(1)
					dbSeek(xFilial()+cNum+cItem+cSeq)
					While !Eof()
						If Substr(H8_OP,1,8) # cNum+cItem
							Exit
						EndIf
						Replace H8_STATUS With "S"
						dbSkip()
					End
				EndIf
			Else
				dbSelectArea("SH8")
				dbSetOrder(1)
				dbSeek(xFilial()+cNum+cItem+cSeq)
				While !Eof()
					If Substr(H8_OP,1,8) # cNum+cItem
						Exit
					EndIf
					Replace H8_STATUS With " "
					dbSkip()
				End
				If Select("CARGA") > 0
					dbSelectArea("CARGA")
					dbSetOrder(1)
					dbSeek(xFilial()+cNum+cItem+cSeq)
					While !Eof()
						If Substr(H8_OP,1,8) # cNum+cItem
							Exit
						EndIf
						Replace H8_STATUS With " "
						dbSkip()
					End
				EndIf
			EndIf
			If Select("CARGA") > 0
				dbCloseArea()
			EndIf
		EndIf
		dbSelectArea("SH8")
		dbCloseArea()
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Retira o SH8 da variavel cFopened ref. a abertura no MNU     Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		ClosFile("SH8")
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Envia para rotina de Alteracao de data dos Empenhos          Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If mv_par07 == 1
		A650TrCDT(SC2->C2_NUM+SC2->C2_ITEM)
	EndIf
Endif
aRotina := aBackRot
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650DelOP Ё Autor Ё Claudinei M. Benzi    Ё Data Ё          Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de exclusao de O.P.s                              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A650DelOP(ExpC1,ExpN1,ExpN2)	                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650DelOp(lPar,cAlias,lProcessou,lExcGra)
Local cOp,cNivel,cNivel2
Local nRegSC2,aTravas:={}
Local nEntregSC7:=0
Local nSavSc7   := 0
Local lExcluiOPF:= If(Valtype(mv_par10)=="N",mv_par10==1,.T.)
Local cOPOrig   := ''
Local cOPAtual  := ''
Local cOpLigada  := ""
Local aRegsSC6  :={}
//здддддддддддддддддддддддддддддддддддддддддддд©
//ЁP.E. para permitir gravacao no S6C          Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
Local lDeleSC6   := ExistBlock('MA650DC6')
//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variaveis que controlam se a OP pode ser   Ё
//Ё excluida ou nao                            Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
Local lExcluiSC2:= .T.

Local cNumOp  := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+If(lExcGra,"",SC2->C2_ITEMGRD)

//здддддддддддддддддддддддддддддддддддддддддддд©
//Ё Variaveis utilizadas qdo OP por PV         Ё
//юдддддддддддддддддддддддддддддддддддддддддддды
Local cProduto:=""
Local nQuantSC6:=0
Local lOutraOp:=.F.
Local nX         := 0

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se devera' ser excluido ou nao todos os itens da Grade Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lExcGra := If(lExcGra==NIL, .F. , lExcGra)

dbSelectArea(cAlias)
A650DelSD3(cNumOp,@lExcluiSC2,lExcGra)

If (!lExcluiSC2 .Or. SC2->C2_QUJE+SC2->C2_PERDA>0) .And. lPar
	Help(" ",1,"MA650INI")
	lExcluiSC2:= .F.
EndIf

If lExcluiSC2 .And. !(SC2->C2_QUJE+SC2->C2_PERDA>0)
	dbSelectarea("SD4")
	dbSetOrder(4)
	cOpLigada:=If(dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN),SD4->D4_OP,"")

	dbSelectArea("SG1")
	dbSeek(xFilial()+SC2->C2_PRODUTO)
	cNivel := G1_NIV
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se a Exclusao for manual, le o proximo registro para     Ё
	//Ё deletar todas as OPs filho c/mesmo Numero e Item.        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC2")
	nRegSC2 := RecNo()
	dbSetOrder(1)
	cOp     := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
	cOPOrig := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
	cItemGrd:= SC2->C2_ITEMGRD
	dbSkip()
	While !EOF() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+SubStr(cOp,1,8) .And. lExcluiSC2
		
		dbSelectarea("SD4")
		dbSetOrder(4)
		If dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN) .And. !Empty(cOpLigada) .And. cOpLigada == SD4->D4_OP
			dbSelectArea("SC2")
			Exit
		EndIf	
		dbSelectArea("SC2")

		//-- Controla a Exclusфo das OP's Filhas
		cOPAtual := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
		cItemGrd := SC2->C2_ITEMGRD
		If !lExcluiOPF .And. !(cOPOrig==cOPAtual)
			dbSelectArea('SC2')
			dbSkip()
			Loop
		EndIf
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se devera deletar ou nao os outros itens da grade, conformeЁ
		//Ё mv_par12                                                            Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If !lExcGra .And. SC2->C2_ITEMGRD!=cItemGrd
			dbSkip()
			loop
		EndIf		
		
		dbSelectArea("SG1")
		If ( dbSeek(xFilial()+SC2->C2_PRODUTO) )
			If ( G1_NIV <= cNivel )
				Exit
			EndIf
		Else
			If ( SC2->C2_DESTINA != "P" )
				Exit
			EndIf
		EndIf
		
		cNumOp  := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+If(lExcGra,"",SC2->C2_ITEMGRD)
		A650DelSD3(cNumOp,@lExcluiSC2,lExcGra)
		If !lExcluiSC2
			dbSelectArea("SC2")
			dbSkip()
			Loop
		EndIf
		dbSelectArea("SC2")
		If C2_QUJE+C2_PERDA>0
			lProcessou:=.T. // Variavel usada apenas na Rotina de Cancelamento de OPs
			cNivel2 := SG1->G1_NIV
			RecLock("SC2",.F.)
			Replace C2_STATUS With "O"
			MsUnLock()
			dbSkip()
			While !EOF() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+SubStr(cOp,1,8)
				dbSelectArea("SG1")
				dbSeek(xFilial()+SC2->C2_PRODUTO)
				If G1_NIV <= cNivel2
					dbSelectArea("SC2")
					Exit
				EndIf
				dbSelectArea("SC2")
				dbSkip()
			EndDo
			Loop
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Se a OP for Sacramentada, deleta no SHD.					    Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cOp := xFilial("SHD")+C2_NUM+C2_ITEM
		cItemGrd := SC2->C2_ITEMGRD
		nTam := Len(SC2->C2_ITEMGRD)
		dbSelectArea("SHD")
		dbSetOrder(1)
		dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM)
		Do While !Eof() .And. HD_FILIAL+Substr(HD_OP,1,8) == cOp
			
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
			//Ё me mv_par12                                                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !lExcGra .And. Right(HD_OP,nTam) != cItemGrd
				dbSkip()
				loop
			EndIf		
			
			RecLock("SHD",.F.,.T.)
			dbDelete()
			dbSkip()
		Enddo
		dbSelectArea("SC2")
		cOp := C2_NUM+C2_ITEM+C2_SEQUEN+If(lExcGra,"",C2_ITEMGRD)
		cItemGrd := SC2->C2_ITEMGRD
		
		dbSelectArea("SD4")
		dbSetOrder(2)
		dbSeek(xFilial()+cOp)
		While !EOF() .And. D4_FILIAL+If(!lExcGra,D4_OP,left(SD4->D4_OP,len(cOp))) == xFilial()+cOp
			
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
			//Ё me mv_par12                                                         Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !lExcGra .And. Right(D4_OP,nTam) != cItemGrd
				dbSkip()
				loop
			EndIf		
			
			//здддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza arquivo de empenhos               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддды
			GravaEmp(SD4->D4_COD,;
				SD4->D4_LOCAL,;
				SD4->D4_QUANT,;
				SD4->D4_QTSEGUM,;
				SD4->D4_LOTECTL,;
				SD4->D4_NUMLOTE,;
				NIL,;
				NIL,;
				SD4->D4_OP,;
				SD4->D4_TRT,;
				NIL,;
				NIL,;
				"SC2",;
				SD4->D4_OPORIG,;
				SD4->D4_DATA,;
				@aTravas,;
				.T.,;
				NIL,;
				NIL,;
				.T.,;
				NIL)
			dbSelectArea("SG1")
			dbSeek(xFilial()+SD4->D4_COD)
			If EOF()
				dbSelectArea("SC1")
				dbSetOrder(4)
				dbSeek(xFilial()+cOp)
				While !EOF() .And. C1_FILIAL+If(!lExcGra,C1_OP,left(C1_OP,len(cOp))) == xFilial()+cOp
					
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
					//Ё me mv_par12                                                         Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If !lExcGra .And. Right(C1_OP,nTam) != cItemGrd
						dbSkip()
						loop
					EndIf		
					
					If C1_PRODUTO == SD4->D4_COD
						dbSelectArea("SB2")
						dbSetOrder(1)
						If !dbSeek(xFilial()+SC1->C1_PRODUTO+SC1->C1_LOCAL)
							CriaSB2(SC1->C1_PRODUTO,SC1->C1_LOCAL)
							MsUnlock()
						EndIf
						GravaB2Pre("-",(SC1->C1_QUANT-SC1->C1_QUJE))
						// Caso ja haja qtd no PC, iguala qtd na SC e retira vinculo
						// do PC com a SC, antes de apaga-la
						If SC1->C1_QUJE > 0
							RecLock("SC1",.F.)
							Replace C1_QUANT   With C1_QUJE
							Replace C1_QTSEGUM With ConvUM(SB2->B2_COD, C1_QUJE, 0, 2)
							MsUnlock()
							dbSelectArea("SC7")
							dbSetOrder(1)
							If dbSeek(xFilial()+SC1->C1_PEDIDO+SC1->C1_ITEMPED)
								// Mostra aviso quando SC ja gerou PC
								Aviso(STR0051,STR0054+SC1->C1_PEDIDO+"/"+SC1->C1_ITEMPED+STR0055,{'Ok'}) //"Aten┤└o"###"Uma Solicita┤└o de Compra amarrada ao Pedido/Item "###" foi exclu║da. Verifique o status deste Pedido de Compra."
								Reclock("SC7",.F.)
								Replace C7_NUMSC With Criavar("C7_NUMSC")
								Replace C7_ITEMSC With CriaVar("C7_ITEMSC")
								MsUnlock()
							EndIf
						EndIf
						//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
						//Ё Execblock a ser executado antes da Exclusao do SC1           Ё
						//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
						IF (ExistBlock('MT650DC1'))
							ExecBlock('MT650DC1',.F.,.F.)
						Endif
						**** Gerar Carta de Correcao do Pedido
						RecLock("SC1",.F.,.T.)
						Replace C1_OBS With STR0025 //"CANCELADA PELO SISTEMA."
						dbDelete()
						MsUnLock()
					EndIf
					dbSkip()
				EndDo
				dbSetOrder(1)
				dbSelectArea("SC7")
				dbSetOrder(8)
				dbSeek(xFilial()+cOp)
				While !EOF() .And. C7_FILIAL+If(!lExcGra,C7_OP,left(C7_OP,len(cOp))) == xFilial()+cOp
					
					//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
					//Ё me mv_par12                                                         Ё
					//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					If !lExcGra .And. Right(C7_OP,nTam) != cItemGrd
						dbSkip()
						loop
					EndIf		
					
					dbSkip()
					nSavSc7 := RecNo()
					dbSkip(-1)
					
					If C7_PRODUTO == SD4->D4_COD .And. C7_TIPO == 2
						dbSelectArea("SB2")
						dbSetOrder(1)
						If !dbSeek(xFilial()+SC7->C7_PRODUTO+SC7->C7_LOCAL)
							CriaSB2(SC7->C7_PRODUTO,SC7->C7_LOCAL)
							MsUnlock()
						EndIf
						nEntregSC7:=SC7->C7_QUJE+SC7->C7_QTDACLA
						GravaB2Pre("-",SC7->C7_QUANT-nEntregSC7)
						// Volta saldo ate a autorizacao de entrega
						dbSelectArea("SC3")
						dbSetOrder(1)
						If dbSeek(xFilial()+SC7->C7_NUMSC+SC7->C7_ITEMSC)
							RecLock("SC3",.F.)
							Replace C3_QUJE With C3_QUJE - (SC7->C7_QUANT-nEntregSC7)
							If C3_QUANT > C3_QUJE .And. C3_ENCER == "E"
								Replace C3_ENCER 	With " "
							Endif
							MsUnlock()
						EndIf
						dbSelectArea("SC7")
						// Caso ja haja qtd ENTREGUE no PC
						If nEntregSC7 > 0
							RecLock("SC7",.F.)
							Replace C7_QUANT With SC7->C7_QUJE+SC7->C7_QTDACLA
							Replace C7_TOTAL With SC7->C7_QUANT * SC7->C7_PRECO
							MsUnlock()
						EndIf
						// Apaga registro somente qdo nao tem saldo a classificar
						If SC7->C7_QTDACLA <= 0
							If GetMv("MV_DELEAE") == "S"
								RecLock("SC7",.F.,.T.)
								Replace C7_OBS With STR0025 //"CANCELADA PELO SISTEMA."
								dbDelete()
							Else
								Reclock("SC7",.F.)
								SC7->C7_OP := Space(Len(SC7->C7_OP))
							EndIf
							MsUnLock()
						EndIf
					EndIf
					dbGoto(nSavSc7)
				EndDo
				dbSetOrder(1)
			EndIf
			dbSelectArea("SD4")
			RecLock("SD4",.F.,.T.)
			dbDelete()
			MsUnLock()
			dbSkip()
		EndDo
		dbSelectArea("SB2")
		dbSetOrder(1)
		If !dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL)
			CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
			MsUnlock()
		EndIf
		GravaB2Pre("-",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Executa a exclusao das tabelas do SIGAPMS 2-Estorno/3-ExclusaoЁ
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
		dbSelectArea("SC2")
		PmsWriteOP(2,"SC2")
		PmsWriteOP(3,"SC2")
		A650DelSHC(SC2->C2_PRODUTO,SC2->(C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD),SC2->C2_DATPRI)
		RecLock(cAlias,.F.,.T.)
		dbDelete()
		MsUnLock()
		dbSkip()
	EndDo
	dbSelectArea("SC2")
	dbGoTo(nRegSC2)
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se a OP for Sacramentada, deleta no SHD.					    Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	cOp := xFilial("SHD")+C2_NUM+C2_ITEM
	cItemGrd := SC2->C2_ITEMGRD
	nTam := Len(SC2->C2_ITEMGRD)
	dbSelectArea("SHD")
	dbSetOrder(1)
	dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM)
	Do While !Eof() .And. HD_FILIAL+Substr(HD_OP,1,8) == cOp
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
		//Ё me mv_par12                                                         Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If !lExcGra .And. Right(HD_OP,nTam) != cItemGrd
			dbSkip()
			loop
		EndIf		
		
		RecLock("SHD",.F.,.T.)
		dbDelete()
		dbSkip()
	Enddo
	
	dbSelectArea("SC2")
	cOp := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+If(lExcGra,"",C2_ITEMGRD)
	cItemGrd := SC2->C2_ITEMGRD
	nTam:= Len(cItemGrd)
	dbSelectArea("SD4")
	dbSetOrder(2)
	dbSeek(xFilial()+cOp)
	While !EOF() .And. D4_FILIAL+If(!lExcGra,D4_OP,left(SD4->D4_OP,len(cOp))) == xFilial()+cOp
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
		//Ё me mv_par12                                                         Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If !lExcGra .And. Right(D4_OP,nTam) != cItemGrd
			dbSkip()
			loop
		EndIf			
		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza arquivo de empenhos               Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		GravaEmp(SD4->D4_COD,;
			SD4->D4_LOCAL,;
			SD4->D4_QUANT,;
			SD4->D4_QTSEGUM,;
			SD4->D4_LOTECTL,;
			SD4->D4_NUMLOTE,;
			NIL,;
			NIL,;
			SD4->D4_OP,;
			SD4->D4_TRT,;
			NIL,;
			NIL,;
			"SC2",;
			SD4->D4_OPORIG,;
			SD4->D4_DATA,;
			@aTravas,;
			.T.,;
			NIL,;
			NIL,;
			.T.,;
			NIL)
		dbSelectArea("SG1")
		dbSeek(xFilial()+SD4->D4_COD)
		If EOF()
			dbSelectArea("SC1")
			dbSetOrder(4)
			dbSeek(xFilial()+cOp)
			While !EOF() .And. C1_FILIAL+If(!lExcGra,C1_OP,left(C1_OP,len(cOp))) == xFilial()+cOp
				
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
				//Ё me mv_par12                                                         Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If !lExcGra .And. Right(C1_OP,nTam) != cItemGrd
					dbSkip()
					loop
				EndIf					
				If C1_PRODUTO == SD4->D4_COD
					dbSelectArea("SB2")
					dbSetOrder(1)
					If !dbSeek(xFilial()+SC1->C1_PRODUTO+SC1->C1_LOCAL)
						CriaSB2(SC1->C1_PRODUTO,SC1->C1_LOCAL)
						MsUnlock()
					EndIf
					GravaB2Pre("-",(SC1->C1_QUANT-SC1->C1_QUJE))
					// Caso ja haja qtd no PC, iguala qtd na SC e retira vinculo
					// do PC com a SC, antes de apaga-la
					If SC1->C1_QUJE > 0
						RecLock("SC1",.F.)
						Replace C1_QUANT With C1_QUJE
						MsUnlock()
						dbSelectArea("SC7")
						dbSetOrder(1)
						If dbSeek(xFilial()+SC1->C1_PEDIDO+SC1->C1_ITEMPED)
							// Mostra aviso quando SC ja gerou PC
							Aviso(STR0051,STR0054+SC1->C1_PEDIDO+"/"+SC1->C1_ITEMPED+STR0055,{'Ok'}) //"Aten┤└o"###"Uma Solicita┤└o de Compra amarrada ao Pedido/Item "###" foi exclu║da. Verifique o status deste Pedido de Compra."
							Reclock("SC7",.F.)
							Replace C7_NUMSC With Criavar("C7_NUMSC")
							Replace C7_ITEMSC With CriaVar("C7_ITEMSC")
							MsUnlock()
						EndIf
					EndIf
					//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
					//Ё Execblock a ser executado antes da Exclusao do SC1           Ё
					//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
					IF (ExistBlock('MT650DC1'))
						ExecBlock('MT650DC1',.F.,.F.)
					Endif
					**** Gerar Carta de Correcao do Pedido
					RecLock("SC1",.F.,.T.)
					Replace C1_OBS With STR0025 //"CANCELADA PELO SISTEMA."
					dbDelete()
					MsUnLock()
				EndIf
				dbSkip()
			EndDo
			dbSetOrder(1)
			dbSelectArea("SC7")
			dbSetOrder(8)
			dbSeek(xFilial()+cOp)
			While !EOF() .And. C7_FILIAL+If(!lExcGra,C7_OP,left(C7_OP,len(cOp))) == xFilial()+cOp
				
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Verifica se devera deletar ou nao os outros itens da grade, confor- Ё
				//Ё me mv_par12                                                         Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If !lExcGra .And. Right(C7_OP,nTam) != cItemGrd
					dbSkip()
					loop
				EndIf		
				
				If C7_PRODUTO == SD4->D4_COD .And. C7_TIPO == 2
					dbSelectArea("SB2")
					dbSetOrder(1)
					If !dbSeek(xFilial()+SC7->C7_PRODUTO+SC7->C7_LOCAL)
						CriaSB2(SC7->C7_PRODUTO,SC7->C7_LOCAL)
						MsUnlock()
					EndIf
					nEntregSC7:=SC7->C7_QUJE+SC7->C7_QTDACLA
					GravaB2Pre("-",SC7->C7_QUANT-nEntregSC7)
					// Volta saldo ate a autorizacao de entrega
					dbSelectArea("SC3")
					dbSetOrder(1)
					If dbSeek(xFilial()+SC7->C7_NUMSC+SC7->C7_ITEMSC)
						RecLock("SC3",.F.)
						Replace C3_QUJE With C3_QUJE - (SC7->C7_QUANT-nEntregSC7)
						If C3_QUANT > C3_QUJE .And. C3_ENCER == "E"
							Replace C3_ENCER 	With " "
						Endif
						MsUnlock()
					EndIf
					dbSelectArea("SC7")
					// Caso ja haja qtd ENTREGUE no PC
					If nEntregSC7 > 0
						RecLock("SC7",.F.)
						Replace C7_QUANT With SC7->C7_QUJE+SC7->C7_QTDACLA
						Replace C7_TOTAL With SC7->C7_QUANT * SC7->C7_PRECO
						MsUnlock()
					EndIf
					// Apaga registro somente qdo nao tem saldo a classificar
					If SC7->C7_QTDACLA <= 0
						**** Gerar Carta de Correcao do Pedido
						RecLock("SC7",.F.,.T.)
						Replace C7_OBS With STR0025 //"CANCELADA PELO SISTEMA."
						dbDelete()
						MsUnLock()
					EndIf
				EndIf
				dbSkip()
			EndDo
			dbSetOrder(1)
		EndIf
		dbSelectArea("SD4")
		RecLock("SD4",.F.,.T.)
		dbDelete()
		MsUnLock()
		dbSkip()
	EndDo
	dbSetOrder(1)
	dbSelectArea("SB2")
	dbSetOrder(1)
	If !dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL)
		CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
		MsUnlock()
	EndIf
	GravaB2Pre("-",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Se tiver um pedido de venda vinculado ,dever═ apag═-lo   Ё
	//Ё caso n└o haja um desdobramento da OP ainda pendente      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If SC2->C2_DESTINA == "P" .Or. SC2->C2_AGLUT == "S"
		dbSelectArea("SC2")
		dbSeek(xFilial()+Substr(cOP,1,8))
		Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+Substr(cOP,1,8)
			If C2_PRODUTO == cProduto .And. Recno() # nRegSC2
				lOutraOP:=.T.
			EndIf
			dbSkip()
		EndDo
		dbGoTo(nRegSC2)
		dbSelectArea("SC6")
		dbSetOrder(7)
		If dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM)
			aRegsSC6:={}
			While !Eof() .And. xFilial()+SC2->C2_NUM+SC2->C2_ITEM == C6_FILIAL+C6_NUMOP+C6_ITEMOP		
				If !Empty(C6_NOTA) .And. !Empty(C6_SERIE) .And. !Empty(C6_DATFAT)
					Help(" ",1,"A650NOTA",,C6_NOTA+" / "+C6_SERIE+" de "+DTOC(C6_DATFAT)+".",02,13)
				EndIf
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Caso esteja OK, desmarca o pedido,liberando o mesmo para Ё
				//Ё OPs novamente                                            Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If C6_OP $ "01#03" .And. !lOutraOP
					AADD(aRegsSC6,Recno())
				EndIf
				nQuantSC6:=C6_QTDVEN			
				dbSelectArea("SB2")
				dbSetOrder(1)
				dbSeek(xFilial()+SC6->C6_PRODUTO+SC6->C6_LOCAL)
				If !Found()
					CriaSB2(SC6->C6_PRODUTO,SC6->C6_LOCAL)
					MsUnLock()
				EndIf			
				If SC6->C6_OP != "03"
					A650AtEmpn(nQuantSC6,"-")
				EndIf
				dbSelectArea("SC6")
				dbSkip()
			End
		Endif
		// Limpa numero das OPs dos Pedidos de Venda
		For nx:=1 to Len(aRegsSC6)
			dbGoto(aRegsSC6[nx])
			RecLock("SC6",.F.)
			Replace C6_OP With IIF(C6_OP=="01","  ","02")
			Replace C6_NUMOP With CriaVar("C6_NUMOP")
			Replace C6_ITEMOP With "  "
			Replace C6_OK     With ""
			MsUnLock()
			If lDeleSC6
				ExecBlock('MA650DC6',.F.,.F.)
			EndIf
		Next nx
		If lOkNaoSC6
			If SB2->(dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL))
				A650AtEmpn(SC2->C2_QUANT,"-")
			Endif	
		Endif
	EndIf
	A650DesBatch(SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD)
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa a exclusao das tabelas do SIGAPMS 2-Estorno/3-ExclusaoЁ
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
	dbSelectArea("SC2")
	PmsWriteOP(2,"SC2")
	PmsWriteOP(3,"SC2")
	A650DelSHC(SC2->C2_PRODUTO,SC2->(C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD),SC2->C2_DATPRI)
	RecLock(cAlias,.F.,.T.)
	dbDelete()
	MsUnLock()
	dbSelectArea("SC6")
	dbSetOrder(1)
Else
	lProcessou:=.T. // Variavel usada apenas na Rotina de Cancelamento de OPs
EndIf
dbSelectArea("SC2")
dbSkip()			
//Nao pode dar Skip(-1) quando for deletar todos os Itens da Grade,  pois dependendo do item
//que foi selecionado para exclusao, o ponteiro podera' ficar posicionado em outra OP, nao deletando
//as demais.
If EMPTY(SC2->C2_ITEMGRD) .And. lExcGra .and. SC2->(Eof())
	// Para que o Refresh da tela funcione corretamente quando
	// deletamos os ultimos registros do browse (da Enchoice).
	dbSkip(-1)		
EndIf
RETURN

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤└o   Ё MontEstruЁ Autor Ё Eveli Morasco         Ё Data Ё 09/09/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤└oЁ Monta array com estrutura do produto                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Sintaxe  Ё MontEstru(ExpC1,ExpN1,ExpD1,ExpC2,ExpN2,ExpC3,ExpL1,ExpC4, Ё╠╠
╠╠Ё          Ё           ExpL2,ExpC5,ExpC6,ExpC7)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do produto a ser explodido                  Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade a ser explodida                         Ё╠╠
╠╠Ё          Ё ExpD1 = Data Prevista de Entrega                           Ё╠╠
╠╠Ё          Ё ExpC2 = Campo da Projecao de Estoques                      Ё╠╠
╠╠Ё          Ё ExpN2 = Sequencia da OP                                    Ё╠╠
╠╠Ё          Ё ExpC3 = Prioridade da OP                                   Ё╠╠
╠╠Ё          Ё ExpL1 = Considera saldo em estoque (.T. Sim .F. Nao)       Ё╠╠
╠╠Ё          Ё ExpC4 = String com opcionais selecionados                  Ё╠╠
╠╠Ё          Ё ExpL2 = Indicador se gera uma unica OP por produto qdo     Ё╠╠
╠╠Ё          Ё         utiliza projecao de estoques                       Ё╠╠
╠╠Ё          Ё ExpC5 = Tipo da Ordem de Producao                          Ё╠╠
╠╠Ё          Ё ExpC6 = Revisao do Produto                                 Ё╠╠
╠╠Ё          Ё ExpC7 = String com toda arvore para controle de opcionais  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Generico                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function MontEstru(cProduto,nQuantPai,dEntrega,cCpoProj,cSeqPai,cPrior,lConsEst,cOpcionais,lOne,cTpOp,cRevisao,cStrOpc)
Static l650LocEmp
LOCAL nR:=0,nRegSC2:=0,nQuantItem:=0,nQtyStok:=0,nQtdBack:=0,nAchoOpc:=0
LOCAL nNecessid:=0,nToler:=0,nQtdeTot:=0,nX,cOp,nSavSC2,cTipo,lProjIni
LOCAL nSalB1 := SB1->(Recno()),nNecQe,nOpca:=3
LOCAL lGeraSc,lGeraOPI,nSG1:=0
LOCAL lAltEmp := (SubStr( cAcesso,37,1 ) == "S")
LOCAL aQtdes:={},aSalvRot:={},aSalvCols:={}
LOCAL nRecSD4:=0,nRecOpc:=0,nRecSB1:=0,nAchoSeq:=0
LOCAL aSeq:={},cLocalSC1:="",cPeriodoOpc:=""
LOCAL lProj,lLocaliza:=.F.,lRastroLoc:=.T.
LOCAL aOps:={},aTravas:={}
LOCAL nBaixa:= 0
LOCAL cOldTipo  := ""
LOCAL lA650CCF := ExistBlock("A650CCF")
LOCAL aComplCols, lMTA650AC, cDesc:=SB1->B1_DESC
Local lExistBlkT :=ExistTemplate("A650SALDO")
Local lExistBlock:=ExistBlock("A650SALDO")
LOCAL lBlockOPI:=ExistBlock("A650OPI"),lRetBlock:=.F.
LOCAL cLocAnt:=""

LOCAL oGet,oDlg2
LOCAL cTitulo
LOCAL aAlter := {}

LOCAL aObjects  := {},aPosObj :={}
LOCAL aSize     := MsAdvSize()
LOCAL aInfo     := {aSize[1],aSize[2],aSize[3],aSize[4],3,3}
LOCAL cLocProc  := GETMV("MV_LOCPROC")

LOCAL aButtons := NIL // Utilizado para incluir botoes atraves de EXECBLOCK

LOCAL lEstMax  := lProj711 .And. aPergs711[19] == 2 .And. aPergs711[1] == 1
Local i          := 0

PRIVATE aCols     := {}
PRIVATE aColsDele := {}

lAltEmp := If( (ValType( lAltEmp ) # "L"),.F.,lAltEmp )
l650LocEmp := If(ValType(l650LocEmp)#"L",ExistBlock("A650LEMP"),l650LocEmp)

IF TYPE("aRotina") == "A"
	aSalvRot := aClone(aRotina)
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se a chamada da funcao vier da projecao, verifica se    Ё
//Ё e' Projecao pelo inicio :                               Ё
//Ё Se Sim nao gera op dos filhos e solicitacao de compra.  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj	 := If(  cCpoProj == NIL ,.F.,.T.)
lProjIni := If( (cCpoProj == NIL),.F.,If(cCpoProj == "INICIO",.T.,.F.) )
lConsEst := If( (lConsEst == NIL),(GetMV("MV_CONSEST") == "S"),lConsEst )

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Se a chamada da funcao vier da projecao, verifica se    Ё
//Ё e' Projecao, quanto a geracao da sc (nPar02 - PRIVATE)  Ё
//Ё 1 - Gera Sc no Mata650   2 - Gera SC no MATA710         Ё
//Ё quanto a geracao da OP PI (nPar03 - PRIVATE)            Ё
//Ё 1 - Gera OP de PI (Mata650)  2 - Gera OP de PI (MATA710)Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	If nPar02 == 2
		lGeraSc := .F.
	Else
		lGeraSC := .T.
	Endif
	If nPar03 == 2
		lGeraOPI:= .F.
	Else
		lGeraOPI:= .T.
	Endif
ElseIf lProj711
	If aPergs711[02] == 2
		lGeraSc := .F.
	Else
		lGeraSC := .T.
	Endif
	If aPergs711[03] == 2
		lGeraOPI:= .F.
	Else
		lGeraOPI:= .T.
	Endif
Else
	lGeraSc := GETMV("MV_GERASC")
	lGeraOPI:= GETMV("MV_GERAOPI")
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava nas Ops filhas o numero da sequencia da Op Pai    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cSeqPai := IIf(cSeqPai != NIL,cSeqPai,"000")
cPrior  := IIf(cPrior != NIL,cPrior,"500")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pega o numero da OP que serao gerados os empenhos       Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cOp := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Monta o array aCols verificando se existem produtos     Ё
//Ё fantasma na estrutura.                                  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aRotina   := { { "" , "        ", 0 , 3}}
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Montagem do AHeader.                                         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
PRIVATE aHeader := {}
aTam:=TamSX3("G1_COMP")	//1
Aadd(aHeader,{STR0026,"G1_COMP" ,PesqPict("SG1","G1_COMP" ,atam[1]),aTam[1],aTam[2],"NaoVazio() .And. ExistCpo('SB1') .And. M->G1_COMP != '"+cProduto+"' .And. A650IniPrd()",USADO, "C" ,"SG1"," " })	//"Componente"
aTam:=TamSX3("D4_QUANT")//2
Aadd(aHeader,{STR0027,"D4_QUANT",PesqPict("SD4","D4_QUANT",atam[1]),aTam[1],aTam[2],"A650ConvUM(2) .And. M->D4_QUANT # 0",USADO, "N" ,"SD4"," " })	//"Quantidade Empenho"
aTam:=TamSX3("D4_LOCAL")//3
Aadd(aHeader,{STR0028,"D4_LOCAL",PesqPict("SD4","D4_LOCAL",atam[1]),aTam[1],aTam[2],"NaoVazio() .And. existcpo('SB2',aCols[n,1]+M->D4_LOCAL) ",USADO, "C" ,"SD4"," " })	//"Local"
aTam:=TamSX3("G1_TRT")	//4
Aadd(aHeader,{STR0017,"G1_TRT"  ,PesqPict("SG1","G1_TRT"  ,atam[1]),aTam[1],aTam[2],"A650Seq()",USADO, "C" ,"SG1"," " })	//"Sequencia"
//зддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento Utilizado para o Siga Pyme Ё
//юддддддддддддддддддддддддддддддддддддддды
If !__lPyme
	aTam:=TamSX3("D4_NUMLOTE")//5
	Aadd(aHeader,{STR0029,"D4_NUMLOTE",PesqPict("SD4","D4_NUMLOTE",atam[1]),aTam[1],aTam[2],"A650LotCTL()",USADO, "C" ,"SD4"," " })	//"Sub-Lote"
	aTam:=TamSX3("D4_LOTECTL")//6
	Aadd(aHeader,{STR0030,"D4_LOTECTL",PesqPict("SD4","D4_LOTECTL",atam[1]),aTam[1],aTam[2],"A650LotCTL()",USADO, "C" ,"SD4"," " })	//"Lote"
	aTam:=TamSX3("D4_DTVALID")//7
	Aadd(aHeader,{STR0031,"D4_DTVALID",PesqPict("SD4","D4_DTVALID",atam[1]),aTam[1],aTam[2]," ",USADO, "D" ,"SD4"," " })	//"Data de Validade"
	aTam:=TamSX3("D4_POTENCI")//8
	Aadd(aHeader,{STR0089,"D4_POTENCI",PesqPict("SD4","D4_POTENCI",atam[1]),aTam[1],aTam[2]," ",USADO, "N" ,"SD4"," " })	//"Potencia"
	aTam:=TamSX3("DC_LOCALIZ")//9
	Aadd(aHeader,{STR0048,"DC_LOCALIZ",PesqPict("SDC","DC_LOCALIZ" ,atam[1]),aTam[1],aTam[2],"Vazio() .Or. ExistCpo('SBE',aCols[n,3]+M->DC_LOCALIZ)",USADO, "C" ,"SBE"," " })	//"Localizacao"
	aTam:=TamSX3("DC_NUMSERI")//10
	Aadd(aHeader,{STR0049,"DC_NUMSERI",PesqPict("SDC","DC_NUMSERI" ,atam[1]),aTam[1],aTam[2],"",USADO, "C" ,""," " })	//"Num de Serie"
EndIf
aTam:=TamSX3("B1_UM")//11
Aadd(aHeader,{STR0069,"B1_UM",PesqPict("SB1","B1_UM",atam[1]),aTam[1],aTam[2],,USADO, "C" ,"SB1","V" })	//" 1a. UM 		
aTam:=TamSX3("D4_QTSEGUM")//12
Aadd(aHeader,{STR0068,"D4_QTSEGUM",PesqPict("SD4","D4_QTSEGUM",atam[1]),aTam[1],aTam[2],"A650ConvUM(1)",USADO, "N" ,"SD4"," " })	//"Quantidade Empenho 2a. UM"		
aTam:=TamSX3("B1_SEGUM")//13
Aadd(aHeader,{STR0070,"B1_SEGUM",PesqPict("SB1","B1_SEGUM",atam[1]),aTam[1],aTam[2],,USADO, "N" ,"SB1"," " })	// "2a. UM"			
aTam:=TamSX3("B1_DESC")	//14
Aadd(aHeader,{STR0085,"B1_DESC" ,PesqPict("SB1","B1_DESC" ,atam[1]),aTam[1],aTam[2],,USADO, "C" ,"SB1"," " })	//"Descri┤└o"

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Execblock Para Inserir Campo em aCols - MTA650AC        Ё
//Ё 1 - Complemento do aHeader                              Ё
//Ё 2 - Conteudo do aCols                                   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If (lMTA650AC:=ExistBlock('MTA650AC'))
	aComplCols := ExecBlock('MTA650AC',.F.,.F.)
Else
	aComplCols := {{},}
EndIf

If Len(aComplCols[1]) != 0
	Aadd(aHeader,aComplCols[1])
EndIf

nPosCod:=aScan(aHeader,{|x| AllTrim(x[2])=="G1_COMP"})
nPosQuant:=aScan(aHeader,{|x| AllTrim(x[2])=="D4_QUANT"})
nPosLocal:=aScan(aHeader,{|x| AllTrim(x[2])=="D4_LOCAL"})
nPosTrt:=aScan(aHeader,{|x| AllTrim(x[2])=="G1_TRT"})
nPosLote  :=aScan(aHeader,{|x| AllTrim(x[2])=="D4_NUMLOTE"})
nPosLotCTL:= aScan(aHeader,{|x| AllTrim(x[2])=="D4_LOTECTL"})
nPosDValid:= aScan(aHeader,{|x| AllTrim(x[2])=="D4_DTVALID"})
nPosPotenc:= aScan(aHeader,{|x| AllTrim(x[2])=="D4_POTENCI"})
nPosLocLz:=aScan(aHeader,{|x| AllTrim(x[2])=="DC_LOCALIZ"})
nPosnSerie:=aScan(aHeader,{|x| AllTrim(x[2])=="DC_NUMSERI"})
nPosUM:=aScan(aHeader,{|x| AllTrim(x[2])=="B1_UM"})
nPosQtSegum:=aScan(aHeader,{|x| AllTrim(x[2])=="D4_QTSEGUM"})
nPos2UM:=aScan(aHeader,{|x| AllTrim(x[2])=="B1_SEGUM"})
nPosDescr := aScan(aHeader,{|x| AllTrim(x[2])=="B1_DESC"})

A650ACols(cProduto,nQuantPai,cOpcionais,lConsEst,cRevisao,aComplCols[2],aHeader,cLocProc)

//зддддддддддддддддддддд©
//Ё Pontos de Entrada   Ё
//юддддддддддддддддддддды
If (ExistTemplate( "EMP650" ) )
	ExecTemplate("EMP650",.F.,.F.)
Endif

If (ExistBlock( "EMP650" ) )
	ExecBlock("EMP650",.F.,.F.)
Endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Varre o array aCols verificando se existem produtos     Ё
//Ё com o mesmo nivel e sequencia na estrutura. Caso isso   Ё
//Ё ocorra, soma o nivel do segundo para n└o gerar divergen Ё
//Ё cias na hora da producao.                               Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
//зддддддддддддддддддддддддддддддддддддддд©
//Ё Tratamento Utilizado para o Siga Pyme Ё
//юддддддддддддддддддддддддддддддддддддддды
If !__lPyme
	For i:=1 To Len(aCols)
		If !aCols[i,Len(aCols[i])]
			nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt]+aCols[i,nPosLote]+aCols[i,nPosLotCtl]+aCols[i,nPosLocLz]+aCols[i,nPosnSerie])
			IF nAchoSeq > 0
				aCols[i,nPosTrt]:=Soma1(aCols[i,nPosTrt])
				nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt]+aCols[i,nPosLote]+aCols[i,nPosLotCtl]+aCols[i,nPosLocLz]+aCols[i,nPosnSerie])
				While nAchoSeq > 0
					aCols[i,nPosTrt]:=Soma1(aCols[i,nPosTrt])
					nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt]+aCols[i,nPosLote]+aCols[i,nPosLotCtl]+aCols[i,nPosLocLz]+aCols[i,nPosNserie])
				EndDo
				AADD(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt]+aCols[i,nPosLote]+aCols[i,nPosLotCtl]+aCols[i,nPosLocLz]+aCols[i,nPosnSerie])
			Else
				AADD(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt]+aCols[i,nPosLote]+aCols[i,nPosLotCtl]+aCols[i,nPosLocLz]+aCols[i,nPosnSerie])
			Endif
		EndIf
	Next i
Else
	For i:=1 To Len(aCols)
		If !aCols[i,Len(aCols[i])]
			nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt])
			IF nAchoSeq > 0
				aCols[i,nPostrt]:=Soma1(aCols[i,nPosTrt])
				nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt])
				While nAchoSeq > 0
					aCols[i,nPostrt]:=Soma1(aCols[i,nPosTrt])
					nAchoSeq:=ASCAN(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt])
				EndDo
				AADD(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt])
			Else
				AADD(aSeq,aCols[i,nPosCod]+aCols[i,nPosTrt])
			Endif
		EndIf
	Next i
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Salva em aSalvCols o array aCols para copia de seguranca.    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aSalvCols := AClone(aCols)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Caso usuario deseje alterar empenho, monta GetDados.         Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lAltEmp .And. Len(aCols) > 0 .And. aSav650[13] == 1 .And. (!Type('l650Auto')=='L' .Or. !l650Auto)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa ponto de entrada para montar array com botoes a      Ё
	//Ё serem apresentados na tela de alteracao de empenho           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If (ExistBlock( "M650BUT" ) )
		aButtons:=ExecBlock("M650BUT",.F.,.F.)
		If ValType(aButtons) # "A"
			aButtons:=NIL		
		EndIf
	Endif
	Private aTELA[0,0],aGETS[0]
	Private nUsado := 5
	nPosAtu:=0
	nPosAnt:=9999
	nColAnt:=9999
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Ativa tecla F4 para comunicacao com Saldos dos Lotes         Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	Set Key VK_F4 TO ShowF4()
	If lMTA650AC
		cTitulo:=OemToAnsi(STR0032+Trim(cProduto)+ " - "+Trim(cDesc)+" / "+cOp)	//"Altera┤└o de Empenho - "
	Else
		cTitulo:=OemToAnsi(STR0032+cProduto+" / "+cOp)	//"Altera┤└o de Empenho - "
	EndIf
	If ( Type("l650Auto") # "L" .or. !l650Auto )
		For i := 1 to Len(aHeader)
			If ! aHeader[i,2] $ "B1_UM, B1_SEGUM"
				Aadd(aAlter, aHeader[i,2])
			Endif
		Next		
		nOpca := 0
		AADD(aObjects,{100,100,.T.,.T.,.F.})
		aPosObj:=MsObjSize(aInfo,aObjects)
		DEFINE MSDIALOG oDlg2 TITLE ctitulo OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5]
		oGet := MSGetDados():New(aPosObj[1,1],aPosObj[1,2],aPosObj[1,3],aPosObj[1,4],1,"A650LinOk","AllwaysTrue","",.T.,,,,1024) // Aumentado numero maximo de linhas na GetDados
		oGet:oBrowse:aAlter := aAlter
		ACTIVATE MSDIALOG oDlg2 ON INIT (EnchoiceBar(oDlg2,{||nopca:=1,oDlg2:End()},{||oDlg2:End()},,aButtons),A650DelCols(oGet:oBrowse))		
	Else
		nopca:=1
	EndIF
	If nOpca == 0
		aCols := AClone(aSalvCols)
	Else
		aSalvCols:=AClone(aCols)
	EndIf
	Set Key VK_F4 TO
EndIf

For nSG1 := 1 to Len(aSalvCols)
	If aSalvCols[nSG1,Len(aSalvCols[nSG1])] .Or. Empty(aSalvCols[nSG1,1])
		Loop
	Endif
	aQtdes     := {}
	nQuantItem := aSalvCols[nSG1,nPosQuant]
	//здддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona SB1                          Ё
	//юдддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB1")
	dbSetOrder(1)
	dbSeek(xFilial()+aSalvCols[nSG1,nPosCod])
	If nQuantItem == 0
		Loop
	EndIf
	//здддддддддддддддддддддддддддддддддддддддд©
	//Ё Posiciona SB2                          Ё
	//юдддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SB2")
	dbSetOrder(1)
	dbSeek(xFilial()+aSalvCols[nSG1,nPosCod]+aSalvCols[nSG1,nPosLocal])
	If Eof()
		CriaSB2(aSalvCols[nSG1,nPosCod],aSalvCols[nSG1,nPosLocal])
		MsUnlock()
	EndIf
	If mv_par02 = 1 .And. cCpoProj == NIL .And. !lProj711
		If lConsEst
			nQtyStok := SaldoSB2(.T.)+SB2->B2_SALPEDI-SB2->B2_QEMPN+AvalQtdPre("SB2",2)
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Executa P.E. para tratar saldo disponivel.                    Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lExistBlkT             
				nQtdBack:=nQtyStok	
				nQtyStok:=ExecTemplate("A650SALDO",.F.,.F.,nQtyStok)
				If ValType(nQtyStok) != "N"
					nQtyStok:=nQtdBack
				EndIf
			EndIf			
			If lExistBlock
				nQtdBack:=nQtyStok	
				nQtyStok:=ExecBlock("A650SALDO",.F.,.F.,nQtyStok)
				If ValType(nQtyStok) != "N"
					nQtyStok:=nQtdBack
				EndIf
			EndIf
		Else
			nQtyStok := 0
		Endif
	Else
		//здддддддддддддддддддддддддддддддддддддддд©
		//Ё Posiciona SB2                          Ё
		//юдддддддддддддддддддддддддддддддддддддддды
		nQtyStok := 0
		If cCpoProj <> NIL
			nQtyStok:=A650SldMRP(.F.,.T.,aSalvCols[nSG1,nPosCod],dEntrega)
		ElseIf lProj711
			nQtyStok:=A650SldMRP(.T.,.F.,aSalvCols[nSG1,nPosCod],dEntrega)
		ElseIf lConsEst
			dbSelectArea("SB2")
			dbSetOrder(1)
			dbSeek(xFilial()+aSalvCols[nSG1,nPosCod]+mv_par03,.T.)
			While !Eof() .And. SB2->B2_FILIAL+SB2->B2_COD+SB2->B2_LOCAL <= xFilial()+aSalvCols[nSG1,nPosCod]+mv_par04
				nQtyStok += SaldoSB2(.T., , ,lConsTerc,lConsNPT)+SB2->B2_SALPEDI-SB2->B2_QEMPN+AvalQtdPre("SB2",2)
				//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Executa P.E. para tratar saldo disponivel.                    Ё
				//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
				If lExistBlkT
					nQtdBack:=nQtyStok	
					nQtyStok:=ExecTemplate("A650SALDO",.F.,.F.,nQtyStok)
					If ValType(nQtyStok) != "N"
						nQtyStok:=nQtdBack
					EndIf
				EndIf

				If lExistBlock
					nQtdBack:=nQtyStok	
					nQtyStok:=ExecBlock("A650SALDO",.F.,.F.,nQtyStok)
					If ValType(nQtyStok) != "N"
						nQtyStok:=nQtdBack
					EndIf
				EndIf
				dbSkip()
			End
		Endif
	Endif
	
	//здддддддддддддддддддддддддддддддддддддддд©
	//Ё Calcula necessidade para o produto     Ё
	//юдддддддддддддддддддддддддддддддддддддддды
	nQtyStok   := IIF(nQtyStok<0,0,nQtyStok)
	If nQuantItem < 0
		nNecessid := nQuantItem
	Else                                                  	
		nNecessid := IIF(nQtyStok >= nQuantItem,0,nQuantItem - nQtyStok)
	EndIf

	dbSelectArea("SG1")
	If dbSeek(xFilial()+aSalvCols[nSG1,nPosCod])
		cTipo := "F"
	Else
		cTipo := "C"
	Endif
	If cTipo == "F" .And. !GetMv("MV_GERAPI") .And. SB1->B1_MRP == "N"
		cTipo := "I"
	Endif
	//зддддддддддддддддддддддддддддддддддддддддд©
	//Ё Executa execblock para verificar se     Ё
	//Ё produto sera fabricado ou comprado      Ё
	//Ё "COMPONENTE FABRICADO OU COMPRADO"      Ё
	//юддддддддддддддддддддддддддддддддддддддддды
	If lA650CCF
		cOldTipo:=cTipo
		cTipo:=ExecBlock("A650CCF",.F.,.F.,{aSalvCols[nSG1,nPosCod],cTipo,SC2->C2_DATPRI,nSG1})
		If !(ValType(cTipo) == "C") .Or. !(cTipo $ "FCI")
			cTipo:=cOldtipo
		EndIf
	EndIf
	//зддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se o produto ┌ do tipo BN      Ё
	//юддддддддддддддддддддддддддддддддддддддддды
	If cTipo == "C" .And. SB1->B1_TIPO == "BN" .And. !MatBuyBN()
		Loop
	EndIf
	cLocalSC1:=aSalvCols[nSG1,nPosLocal]
	//зддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica o local a ser gravado          Ё
	//юддддддддддддддддддддддддддддддддддддддддды
	If SB1->B1_APROPRI == "I"
		aSalvCols[nSG1,nPosLocal] 	:=cLocProc
	Endif
	nRecSB1:=SB1->(Recno())
	//зддддддддддддддддддддддддддддддддддддддддд©
	//Ё Permite alterar o local atraves de P.E. Ё
	//юддддддддддддддддддддддддддддддддддддддддды
	If l650LocEmp
		cLocAnt:=ExecBlock("A650LEMP",.F.,.F.,aSalvCols[nSG1])
		If ValType(cLocAnt) == "C" .And. Len(cLocAnt) == Len(aSalvCols[nSG1,nPosLocal])
			aSalvCols[nSG1,nPosLocal]:=cLocAnt
		EndIf
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se Lote do Empenho ja foi preenchido ou   Ё
	//Ё se a Localizacao do Empenho ja foi preenchida      Ё
	//Ё Caso ja tenha sido, o estoque ja foi verificado.   Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	lRastroLoc:=.T.
	If Rastro(aCols[nSG1,nPosCod],"S")
		lRastroLoc:=Empty(aCols[nSG1,nPosLote]).And.Empty(aCols[nSG1,nPosLotCtl])
	ElseIf Rastro(aCols[nSG1,nPosCod],"L")
		lRastroLoc:=Empty(aCols[nSG1,nPosLotCtl])
	EndIf
	If lRastroLoc .And. Localiza(aCols[nSG1,nPosCod])
		lRastroLoc:=Empty(aCols[nSG1,nPosLocLz]).And.Empty(aCols[nSG1,nPosNSerie])
	EndIf
	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Gera Solicitacoes de Compras ou OPs intermediarias Ё
	//Ё caso haja necessidade.                             Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
	If nNecessid > 0 .And. lRastroLoc
		If cTipo # "C"
			nAchoOpc:=ASCAN(aRetorOpc,{|x| x[1] == cStrOpc+aCols[nSG1,nPosCod]+aCols[nSG1,nPosTRT] })
			If nAchoOpc > 0
				cOpcionais:=aRetorOpc[nAchoOpc,2]			
			EndIf
			//здддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica ponto de entrada para gerar ou nao OPs    Ё
			//Ё intermediarias                                     Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддды
			If lBlockOPI
				lRetBlock:=ExecBlock("A650OPI",.F.,.F.,nSG1)
				If ValType(lRetBlock) == "L"
					lGeraOPI:=lGeraOPI .And. lRetBlock
				EndIf
			EndIf
			If lGeraOPI .And. SB1->B1_FANTASM != "S"
				aOps:={}
				aQtdes := CalcLote(aSalvCols[nSG1,nPosCod],nNecessid,"F")
				If lEstMax
					aQtdes := A711LotMax(aSalvCols[nSG1,nPosCod], nNecessid, aQtdes)
				Endif	
				nRegSC2 := SC2->(RecNo())
				SB1->(dbGoto(nRecSB1))
				For nX := 1 To Len(aQtdes)
					If !((SB1->B1_FANTASM == "S") .Or. (cTipo == "F" .And. !GetMv("MV_GERAPI")))
						IF (cCpoProj != NIL .and. SB1->B1_MRP$" S") .or. cCpoProj = NIL
							//здддддддддддддддддддддддддддддддддддддддддд©
							//Ё Caso gere Ordem de Producao pela projecaoЁ
							//юдддддддддддддддддддддддддддддддддддддддддды
							If lProj .And. nPar10 == 2
								cPeriodoOpc:=A650DtoPer(dEntrega)
								dbSelectArea("OPC")
								dbSetOrder(2)
								If dbSeek(cPeriodoOpc+cProduto+aSalvCols[nSG1,nPosCod]+cOpcionais)
									RecLock("OPC",.F.)
									Replace QUANTIDADE With QUANTIDADE - aQtdes[nx]
									MsUnlock()
								EndIf
							EndIf
							cSeqC2:=Soma1(cSeqC2,Len(SC2->C2_SEQUEN))
							cItemGrd := SC2->C2_ITEMGRD
							cGrade := SC2->C2_GRADE
							If !lOne
								A650GeraC2(aSalvCols[nSG1,nPosCod],aQtdes[nX],,dEntrega,SC2->C2_DATAJI,cCpoProj,cSeqPai,cPrior,.F.,,aSalvCols[nSG1,nPosLocal],cOpcionais,cTpOp,SB1->B1_REVATU,NIL,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
								AADD(aOps,SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD)
								dbSelectArea("SG1")
								nR := RecNo()
								MontEstru(aSalvCols[nSG1,nPosCod],aQtdes[nX],SC2->C2_DATPRI,cCpoProj,cSeqC2,SC2->C2_PRIOR,lConsEst,cOpcionais,lOne,cTpOp,SB1->B1_REVATU,cStrOpc+aCols[nSG1,nPosCod]+aCols[nSG1,nPosTRT])
							EndIf
						EndIf
					EndIf
				Next nX
				SC2->(dbGoTo(nRegSC2))
			EndIf
		Else
			//здддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se deve quebrar pelo Lote Economico Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддды

			* META 811 *

			If lEstMax
				nNecessid := Min(nNecessid, A711Lote(nQuantItem,aSalvCols[nSG1,nPosCod]) + AReadSha(aSalvCols[nSG1,nPosCod], dEntrega, "1") - nQuantItem)
			Endif

			aQtdes := CalcLote(aSalvCols[nSG1,nPosCod],nNecessid,"C")

			If lEstMax
				aQtdes := A711LotMax(aSalvCols[nSG1,nPosCod], nNecessid, aQtdes)
			Endif	
			If SubStr(aSalvCols[nSG1,nPosCod],1,3) != "MOD"
				If lGeraSc
					IF (cCpoProj != NIL .and. SB1->B1_MRP$" S") .or. cCpoProj = NIL
						For nX := 1 To Len(aQtdes)
							//здддддддддддддддддддддддддддддддддддддддддддддддд©
							//Ё Baixa quantidade do arquivo de opcionais       Ё
							//юдддддддддддддддддддддддддддддддддддддддддддддддды
							If lProj .And. nPar10 == 2
								dbSelectArea("OPC")
								dbSetOrder(2)
								If dbSeek(A650DtoPer(dEntrega)+cProduto+aSalvCols[nSG1,nPosCod]+cOpcionais)
									RecLock("OPC",.F.)
									Replace QUANTIDADE With QUANTIDADE - aQtdes[nx]
									MsUnlock()
								EndIf
							EndIf
							A650GeraC1(aSalvCols[nSG1,nPosCod],aQtdes[nX],cOp,dEntrega,cCpoProj,nx,nNecessid,cLocalSC1,cTpOp)
						Next nX
					Endif
				Endif
			EndIf
			dbSelectArea("SG1")
		Endif
	EndIf
	If nQuantItem > 0 .Or. nQuantItem < 0
		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Amarra empenhos com OPs geradas            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		If nQuantItem > 0 .And. cTipo # "C" .And. nNecessid > 0 .And. lGeraOPI .And. SB1->B1_FANTASM != "S" .And. SB1->B1_TIPO != "BN"
			For nx:=1 to Len(aQtdes)
				nBaixa:=Min(nQuantItem,aQtdes[nx])

				//здддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Atualiza arquivo de empenhos               Ё
				//юдддддддддддддддддддддддддддддддддддддддддддды
				If !__lPyme
					GravaEmp(aSalvCols[nSG1,nPosCod],;
						aSalvCols[nSG1,nPosLocal],;
						nBaixa,;
						NIL,;
						aSalvCols[nSG1,nPosLotCtl],;
						aSalvCols[nSG1,nPosLote],;
						aSalvCols[nSG1,nPosLocLz],;
						aSalvCols[nSG1,nPosnSerie],;
						cOp,;
						aSalvCols[nSG1,nPosTrt],;
						NIL,;
						NIL,;
						"SC2",;
						If(Len(aOps)>0,aOps[nx],NIL),;
						dEntrega,;
						@aTravas,;
						.F.,;
						lProj,;
						.T.,;
						.T.,;
						NIL,;
						NIL,;
						!lRastroLoc)
				Else
					GravaEmp(aSalvCols[nSG1,nPosCod],;
						aSalvCols[nSG1,nPosLocal],;
						nBaixa,;
						NIL,;
						NIL,;
						NIL,;
						NIL,;
						NIL,;
						cOp,;
						aSalvCols[nSG1,nPosTrt],;
						NIL,;
						NIL,;
						"SC2",;
						If(Len(aOps)>0,aOps[nx],NIL),;
						dEntrega,;
						@aTravas,;
						.F.,;
						lProj,;
						.T.,;
						.T.,;
						NIL,;
						NIL,;
						!lRastroLoc)
				EndIf
				nQuantItem-=Min(nQuantItem, nBaixa)
			Next nx
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gera Empenho de qtd que ja existente ou    Ё
		//Ё quantidade que nao precisa ser produzida.  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддды
		If nQuantItem # 0 .And. SB1->B1_TIPO != "BN"
			//здддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza arquivo de empenhos               Ё
			//юдддддддддддддддддддддддддддддддддддддддддддды
			If !__lPyme
				GravaEmp(aSalvCols[nSG1,nPosCod],;
					aSalvCols[nSG1,nPosLocal],;
					nQuantItem,;
					NIL,;
					aSalvCols[nSG1,nPosLotCtl],;
					aSalvCols[nSG1,nPosLote],;
					aSalvCols[nSG1,nPosLocLz],;
					aSalvCols[nSG1,nPosnSerie],;
					cOp,;
					aSalvCols[nSG1,nPosTrt],;
					NIL,;
					NIL,;
					"SC2",;
					NIL,;
					dEntrega,;
					@aTravas,;
					.F.,;
					lProj,;
					.T.,;
					.T.,;
					NIL,;
					NIL,;
					!lRastroLoc)
			Else
				GravaEmp(aSalvCols[nSG1,nPosCod],;
					aSalvCols[nSG1,nPosLocal],;
					nQuantItem,;
					NIL,;
					NIL,;
					NIL,;
					NIL,;
					NIL,;
					cOp,;
					aSalvCols[nSG1,nPosTrt],;
					NIL,;
					NIL,;
					"SC2",;
					NIL,;
					dEntrega,;
					@aTravas,;
					.F.,;
					lProj,;
					.T.,;
					.T.,;
					NIL,;
					NIL,;
					!lRastroLoc)
			EndIf
		EndIf
	EndIf
Next
SB1->(dbGoTo(nSalB1))
IF aSalvRot != NIL
	aRotina:=aClone(aSalvRot)
EndIf
If (ExistBlock( 'MA650EMP' ) )
	ExecBlock('MA650EMP',.F.,.F.)
Endif

Return

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650GeraC2Ё Autor Ё Claudinei M. Benzi    Ё Data Ё 10.01.92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Gera O.P. para Produto e quantidade informada via param.   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Sintaxe  Ё A650GeraC2(ExpC1,ExpN1,ExpD1,ExpD2,ExpD3,ExpC2,ExpN2,ExpC3,Ё╠╠
╠╠Ё          Ё            ExpL1,ExpL2,ExpC4,ExpC5,ExpC6,ExpC7)            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do produto                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade da OP                                   Ё╠╠
╠╠Ё          Ё ExpD1 = Data de inicio da OP                               Ё╠╠
╠╠Ё          Ё ExpD2 = Data de entrega da OP                              Ё╠╠
╠╠Ё          Ё ExpD3 = Data ajustada de entrega da OP                     Ё╠╠
╠╠Ё          Ё ExpC2 = Campo para Atualizar a Projacao de Estoques        Ё╠╠
╠╠Ё          Ё ExpN2 = Sequencia da OP                                    Ё╠╠
╠╠Ё          Ё ExpC3 = Prioridade da OP                                   Ё╠╠
╠╠Ё          Ё ExpL1 = Utiliza local padrao                               Ё╠╠
╠╠Ё          Ё ExpL2 = OP gerada por Pedido de Venda                      Ё╠╠
╠╠Ё          Ё ExpC4 = Local considerado                                  Ё╠╠
╠╠Ё          Ё ExpC5 = Opcionais da OP                                    Ё╠╠
╠╠Ё          Ё ExpC6 = Tipo da OP                                         Ё╠╠
╠╠Ё          Ё ExpC7 = Revisao da Estrutura                               Ё╠╠
╠╠Ё          Ё ExpN3 = Quantidade 2a. UM                                  Ё╠╠
╠╠Ё          Ё ExpC8 = Numero da OP                                       Ё╠╠
╠╠Ё          Ё ExpC9 = Item da Op                                         Ё╠╠
╠╠Ё          Ё ExpCA = Sequencia da OP                                    Ё╠╠
╠╠Ё          Ё ExpCB = Roteiro da OP                                      Ё╠╠
╠╠Ё          Ё ExpCC = Observacao da OP                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650GeraC2(cProduto,nQuant,dInicio,dEntrega,dAjusFim,cCpoProj,cSeqPai,cPrior,lLocPad,lPedido,cLocal,cOpcionais,cTpOp,cRevisao,nQtde2UM,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
Local nPrazo
Local cPerProj
Local lProj   :=.F.
Local aRetEsp := {}
Local aDados  := {}

nPrazo := CalcPrazo(cProduto,nQuant)
dInicio := IIf( dInicio  == NIL, dEntrega - nPrazo,dInicio)
dEntrega:= IIf( dEntrega == NIL, dInicio + nPrazo,dEntrega)
dAjusFim:= IIf( dAjusFim == NIL, "" , dAjusFim)
cRevisao:= IIf( cRevisao == NIL ,"" , cRevisao)
lLocPad := IIf( lLocPad  == NIL, .T., lLocPad )
lPedido := IIf( lPedido  == NIL, .F., lPedido )
cTpOp   := IIf( cTpOp == NIL .Or. Empty(cTpOp),"F",cTpOp)
cOpcionais:= IIf( cOpcionais == NIL ,"" , cOpcionais)
nQtde2UM  := IIf( nQtde2UM   == NIL ,0 , nQtde2UM)
cItemGrd  := IF(Type("cItemGrd") == "U", "", cItemGrd)
cGrade    := IF(Type("cGrade")   == "U", "", cGrade)
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava nas Ops filhas o numero da sequencia da Op Pai    Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cSeqPai := IIf(cSeqPai != NIL,cSeqPai,"000")
cPrior  := IIf(cPrior != NIL,cPrior,"500")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	lProj := .T.
endif

dbSelectArea("SB1")
dbSetOrder(1)
dbSeek(xFilial()+cProduto)

dbSelectArea("SC2")

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza dados padroes do arquivo de O.P.s              Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
IF inclui
	RecLock("SC2",.T.)
Else
	dbSeek(xFilial()+cNumOp+cItemOp+cSeqC2)
	IF Found()
		dbSelectArea("SB2")
		dbSetOrder(1)
		If !dbSeek(xFilial()+cProduto+IIf(lLocPad,SB1->B1_LOCPAD,cLocal))
			CriaSB2(cProduto,IIf(lLocPad,SB1->B1_LOCPAD,cLocal))
			MsUnlock()
		EndIf
		GravaB2Pre("-",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
		dbSelectArea("SC2")
		RecLock("SC2",.F.)
	Else
		RecLock("SC2",.T.)
	Endif
Endif
Replace	C2_FILIAL	With xFilial()
Replace C2_PRODUTO	With cProduto
Replace	C2_NUM		With cNumOp
Replace	C2_ITEM		With cItemOp
Replace	C2_SEQUEN	With cSeqC2
Replace	C2_EMISSAO	With dDataBase
Replace	C2_LOCAL	With IIf(lLocPad,SB1->B1_LOCPAD,cLocal)
Replace	C2_CC		With SB1->B1_CC
Replace	C2_UM		With SB1->B1_UM
Replace	C2_QUANT	With nQuant
Replace	C2_QTSEGUM	With ConvUm(cProduto,nQuant,nQtde2UM,2)
Replace	C2_DATPRF	With dEntrega
Replace	C2_DESTINA	With IIF(lPedido,"P","E")
Replace	C2_PRIOR	With cPrior
Replace	C2_SEGUM	With SB1->B1_SEGUM
Replace	C2_DATPRI	With dInicio
Replace	C2_SEQPAI	With cSeqPai
Replace	C2_ROTEIRO	With A650VldRot(SC2->C2_PRODUTO,cRoteiro,SC2->C2_LOCAL)
Replace	C2_IDENT	With IIF(lProj.Or.lProj711,"P"," ")
Replace	C2_PEDIDO	With IIF(lPedido,cPedido,"")
Replace	C2_ITEMPV	With IIF(lPedido,cItemPv,"")
Replace	C2_OPC		With cOpcionais
Replace	C2_TPOP		With cTpop
Replace C2_REVISAO  With cRevisao
Replace C2_ITEMGRD  With cItemGrd
Replace C2_GRADE    With cGrade
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Caso usuario deseje, grava Observacao nas OPs Intermed.   Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If mv_par09 == 1
	Replace C2_OBS	With cObs
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza data de ajuste caso a OP PAI tenha sido ajustada Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If !Empty(dAjusFim)
	Replace C2_DATAJF  With dAjusFim	, C2_DATAJI With (dAjusFim-nPrazo)
EndIf

If (ExistBlock( "MTA650I" ) )
	ExecBlock("MTA650I",.F.,.F.)
Endif
MsUnLock()

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza Necessidade da Projecao de Estoques                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lProj
	cPerProj := A650DtoPer(C2_DATPRF)
	if !Empty(cPerProj)
		cCpoProj := "H5_PER"+cPerProj
		dbSelectArea("SH5")
		dbSetOrder(1)
		If dbSeek(cProduto+"2")
			RecLock("SH5",.F.)
			Replace &(cCpoProj) with &(cCpoProj)+nQuant
			MsUnlock()
		EndIf
		If dbSeek(cProduto+"5")
			dbSetOrder(2)
			RecLock("SH5",.F.)
			Replace &(cCpoProj) with &(cCpoProj)-nQuant
			If &(cCpoProj) < .005
				Replace &(cCpoProj) with 0
			EndIf
			MsUnlock()
		EndIf
	endif
ElseIf lProj711
	A711CriSH5(C2_DATPRF,C2_PRODUTO,C2_OPC,"SC2",Recno(),C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD,"",If(!Empty(C2_PEDIDO),C2_PEDIDO+"/"+C2_ITEMPV,""),Max(0,C2_QUANT-C2_QUJE),"2",.T.)
EndIf

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza os campos utilizados pelo Modulo Inspecao de Processos             Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntQIP(cProduto) //Define a integracao com o QIP

	aRetEsp := QIPRevRot(cProduto)
		
	RecLock("SC2",.F.)
	SC2->C2_REVI    := aRetEsp[1]
	SC2->C2_ROTEIRO := aRetEsp[2] //forca a gravacao do roteiro previsto na Especificacao do produto ou grupo
	SC2->C2_GRUPO   := aRetEsp[3]
	SC2->C2_VERIFI  := 1
	SC2->C2_IDEINV  := INVERTE(SC2->C2_NUM) //Ordem invertida p/ controle de Skip-Lote
	MsUnLock()
		
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Atualiza o Movimento OP x Lotes								 Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	aDados := {(SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)," "," ",SC2->C2_PRODUTO,SC2->C2_REVI,;
		SC2->C2_LOCAL,SC2->C2_UM,SC2->C2_QUANT,SC2->C2_DATPRI,SC2->C2_EMISSAO," "}                                

	QIPAtuOPLote(aDados,1)

	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Faz todo o tratamento de gravacao do Controle de Skip-Teste estando no    Ё
	//Ё no Modulo Inspecao de Processos                                           Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	QP650GrvSt()
EndIf


dbSelectArea("SB2")
dbSetOrder(1)
If !dbSeek(xFilial()+cProduto+IIf(lLocPad,SB1->B1_LOCPAD,cLocal))
	CriaSB2(cProduto,IIf(lLocPad,SB1->B1_LOCPAD,cLocal))
	MsUnlock()
EndIf
GravaB2Pre("+",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650GeraC1Ё Autor Ё Claudinei M. Benzi    Ё Data Ё 10.01.92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Gera Solic. para produto na quantidade informada via param.Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Sintaxe  Ё A650GeraC1(ExpC1,ExpN1,ExpC2,ExpD1)                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do produto                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade da SC                                   Ё╠╠
╠╠Ё          Ё ExpC2 = Numero da OP geradora                              Ё╠╠
╠╠Ё          Ё ExpD1 = Data de entrega da SC                              Ё╠╠
╠╠Ё          Ё ExpC3 = Campo para atualizar projacao de estoques          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650GeraC1(cProduto,nQuant,cOp,dEntrega,cCpoProj,nx,nNecessid,cLocal,cTpOp,cPedido,cItemPedido)
Static lA650OKSC :=NIL 
Static lA650OKSCT:=NIL
Local lProj:=.F.,nAchou
Local lQuant:=.F.
Local lData :=.F.
Local nQuantBaixa:=0
Local lGeraSCAE:=.T.

DEFAULT cPedido:=""
DEFAULT cItemPedido:=""

cTpOp:=If(cTpOp == NIL .Or. Empty(cTpOp),"F",cTpOp)
lA650OKSCT:=If(lA650OKSCT == NIL,ExistTemplate("A650OKSC"),lA650OKSCT)
lA650OKSC:=If(lA650OKSC == NIL,ExistBlock("A650OKSC"),lA650OKSC)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Posiciona no produto correto.                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SB1->(dbSetOrder(1))
SB1->(dbSeek(xFilial("SB1")+cProduto))

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	lProj := .T.
endif

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Pontos de Entrada 											  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lA650OKSCT
	lGeraSCAE:=ExecTemplate("A650OKSC",.F.,.F.,{cProduto,nQuant,cOp})
	If !(ValType(lGeraSCAE) == "L")
		lGeraSCAE:=.T.
	EndIf
EndIf

If lA650OKSC
	lGeraSCAE:=ExecBlock("A650OKSC",.F.,.F.,{cProduto,nQuant,cOp})
	If !(ValType(lGeraSCAE) == "L")
		lGeraSCAE:=.T.
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o produto tem contrato de parceria             Ё
//Ё Se nao, gera solic.Compra; Se sim, gera Autor. de Entrega  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lGeraSCAE .And. SB1->B1_CONTRAT != "S"
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se as SC's/CP's devem ser aglutinados ou se j═    Ё
	//Ё devems ser gerados.                                        Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If mv_par06 == 1 .Or. lProj	 .Or. lProj711// Gera
		A650GravC1(cProduto,nQuant,cOp,dEntrega,cCpoProj,nx,nNecessid,,,cLocal,cTpOp,nil,cPedido,cItemPedido)
	ElseIf mv_par06 == 2				// Aglutina por OP
		nAchou:=ASCAN(aOpC1,{|x| x[1] == cProduto .And. x[8] == NIL .And. x[11] == cTpOp})
		If nAchou == 0
			AADD(aOpC1,{cProduto,nQuant,cOP,dEntrega,cCpoProj,nx,nNecessid,NIL,NIL,cLocal,cTpOp,NIL})
		Else
			If aOpC1[nAchou,2] < aOpC1[nAchou,7]+nNecessid
				aOpC1[nAchou,2]+=nQuant
			EndIf
			aOpC1[nAchou,3]:=CriaVar("C1_OP")
			aOpC1[nAchou,7]+=nNecessid
		EndIf
	Else									// Aglutina por Data de Necessidade
		nAchou:=ASCAN(aDataOpC1,{|x| x[1] == cProduto .And. x[4] == dEntrega .And. x[8] == NIL .And. x[11] == cTpOp})
		If nAchou == 0
			AADD(aDataOpC1,{cProduto,nQuant,cOP,dEntrega,cCpoProj,nx,nNecessid,NIL,NIL,cLocal,cTpOp,NIL})
		Else
			If aDataOpC1[nAchou,2] < aDataOpC1[nAchou,7]+nNecessid
				aDataOpC1[nAchou,2]+=nQuant
			EndIf
			aDataOpC1[nAchou,3]:=CriaVar("C1_OP")
			aDataOpC1[nAchou,7]+=nNecessid
		EndIf
	EndIf
ElseIf lGeraSCAE
	dbSelectArea("SC3")
	dbSetOrder(5)
	If dbSeek(xFilial()+SB1->B1_COD+SB1->B1_PROC+SB1->B1_LOJPROC)
		While !Eof() .And. SC3->C3_FILIAL+SC3->C3_PRODUTO+SC3->C3_FORNECE+SC3->C3_LOJA == xFilial()+SB1->B1_COD+SB1->B1_PROC+SB1->B1_LOJPROC
			lData:=.F.
			lQuant:=.F.
			lData:= !(IIF(lProj.Or.lProj711,aPeriodos[Val(a650DtoPer(dEntrega))],dEntrega) >= SC3->C3_DATPRI  .And. ;
				IIF(lProj.Or.lProj711,aPeriodos[Val(a650DtoPer(dEntrega))],dEntrega) <= SC3->C3_DATPRF)
			lQuant:=(SC3->C3_QUANT <= SC3->C3_QUJE .And. SC3->C3_ENCER =="E")
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Nao Considera Contratos de Parceria Encerrados ou fora da dataЁ
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	
			If	lData .Or. lQuant
				dbSkip()
				Loop
			EndIf	
			Exit
		EndDo
	EndIf
	If Eof() .Or. lData .Or. lQuant
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se as SC's/CP's devem ser aglutinados ou se j═    Ё
		//Ё devems ser gerados.                                        Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If mv_par06 == 1 .Or. lProj .oR. lProj711	// Gera
			A650GravC1(cProduto,nQuant,cOp,dEntrega,cCpoProj,nx,nNecessid,.T.,lData,cLocal,cTpOp,lQuant,cPedido,cItemPedido)
		ElseIf mv_par06 == 2				// Aglutina por OP
			nAchou:=ASCAN(aOpC1,{|x| x[1] == cProduto .And. x[8] == .T. .And. x[9] == lData .And. x[11] == cTpOp})
			If nAchou == 0
				AADD(aOpC1,{cProduto,nQuant,cOP,dEntrega,cCpoProj,nx,nNecessid,.T.,lData,cLocal,cTpOp,lQuant})
			Else				
				If aOpC1[nAchou,2] < aOpC1[nAchou,7]+nNecessid
					aOpC1[nAchou,2]+=nQuant
				EndIf
				aOpC1[nAchou,3]:=CriaVar("C1_OP")
				aOpC1[nAchou,7]+=nNecessid
			EndIf
		Else									// Aglutina por Data de Necessidade
			nAchou:=ASCAN(aDataOpC1,{|x| x[1] == cProduto .And. x[4] == dEntrega .And. x[8] == .T. .And. x[9] == lData .And. x[11] == cTpOp})
			If nAchou == 0
				AADD(aDataOpC1,{cProduto,nQuant,cOP,dEntrega,cCpoProj,nx,nNecessid,.T.,lData,cLocal,cTpOp,lQuant})
			Else
				If aDataOpC1[nAchou,2] < aDataOpC1[nAchou,7]+nNecessid
					aDataOpC1[nAchou,2]+=nQuant
				EndIf
				aDataOpC1[nAchou,3]:=CriaVar("C1_OP")
				aDataOpC1[nAchou,7]+=nNecessid		
			EndIf
		EndIf
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gera A.E. somente do saldo disponivel no Contrato          Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		nQuantBaixa:=If((SC3->C3_QUANT-SC3->C3_QUJE) <= nQuant,(SC3->C3_QUANT-SC3->C3_QUJE),nQuant)
		If mv_par06 == 1 .Or. lProj	.oR.LpROJ711	// Gera
			A650GravC7(cProduto,nQuantBaixa,cOp,dEntrega,cCpoProj,nx,nNecessid,cTpOp,SC3->(Recno()))
		ElseIf mv_par06 == 2					// Aglutina por OP
			nAchou:=ASCAN(aOpC7,{|x| x[1] == cProduto .And. x[8] == cTpOp .And. x[9] == SC3->(Recno())})
			If nAchou == 0
				AADD(aOpC7,{cProduto,nQuantBaixa,cOP,dEntrega,cCpoProj,nx,nNecessid,cTpOp,SC3->(Recno()),SC3->C3_NUM+SC3->C3_FORNECE+SC3->C3_LOJA,NIL,NIL})
			Else
				If aOpC7[nAchou,2] < aOpC7[nAchou,7]+nNecessid
					aOpC7[nAchou,2]+=nQuantBaixa
				EndIf
				aOpC7[nAchou,3]:=CriaVar("C1_OP")
				aOpC7[nAchou,7]+=nNecessid		
			EndIf
		Else										// Aglutina por Data de Necessidade
			nAchou:=ASCAN(aDataOpC7,{|x| x[1] == cProduto .And. x[4] == dEntrega .And. x[8] == cTpOp .And. x[9] == SC3->(Recno())})
			If nAchou == 0
				AADD(aDataOpC7,{cProduto,nQuantBaixa,cOP,dEntrega,cCpoProj,nx,nNecessid,cTpOp,SC3->(Recno()),SC3->C3_NUM+SC3->C3_FORNECE+SC3->C3_LOJA,NIL,NIL})
			Else
				If aDataOpC7[nAchou,2] < aDataOpC7[nAchou,7]+nNecessid
					aDataOpC7[nAchou,2]+=nQuantBaixa
				EndIf
				aDataOpC7[nAchou,3]:=CriaVar("C1_OP")
				aDataOpC7[nAchou,7]+=nNecessid			
			EndIf
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Atualiza Saldo de Quantidade Ja entregue no SC3            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SC3")
		RecLock("SC3",.F.)
		Replace C3_QUJE 	With C3_QUJE + nQuantBaixa
		If C3_QUANT <= C3_QUJE
			Replace C3_ENCER 	With "E"
		Endif
		MsUnlock()
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Gera S.C. da quantidade que nao foi atendida pelo Contrato Ё
		//Ё de Parceria                                                Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If nQuantBaixa < nQuant
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se as SC's/CP's devem ser aglutinados ou se j═    Ё
			//Ё devems ser gerados.                                        Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If mv_par06 == 1 .Or. lProj .oR. LPROJ711	// Gera
				A650GravC1(cProduto,nQuant - nQuantBaixa,cOp,dEntrega,cCpoProj,2,nNecessid,.T.,.F.,cLocal,cTpOp,.T.,cPedido,cItemPedido)
			ElseIf mv_par06 == 2				// Aglutina por OP
				nAchou:=ASCAN(aOpC1,{|x| x[1] == cProduto .And. x[8] == .T. .And. x[9] == .F. .And. x[11] == cTpOp})
				If nAchou == 0
					AADD(aOpC1,{cProduto,nQuant - nQuantBaixa,cOP,dEntrega,cCpoProj,2,nNecessid,.T.,.F.,cLocal,cTpOp,.T.})
				Else
					If aOpC1[nAchou,2] < aOpC1[nAchou,7]+nNecessid
						aOpC1[nAchou,2]+=nQuant- nQuantBaixa
					EndIf
					aOpC1[nAchou,3]:=CriaVar("C1_OP")
					aOpC1[nAchou,7]+=nNecessid
				EndIf
			Else									// Aglutina por Data de Necessidade
				nAchou:=ASCAN(aDataOpC1,{|x| x[1] == cProduto .And. x[4] == dEntrega .And. x[8] == .T. .And. x[9] == .F. .And. x[11] == cTpOp})
				If nAchou == 0
					AADD(aDataOpC1,{cProduto,nQuant - nQuantBaixa,cOP,dEntrega,cCpoProj,2,nNecessid,.T.,.F.,cLocal,cTpOp,.T.})
				Else
					If aDataOpC1[nAchou,2] < aDataOpC1[nAchou,7]+nNecessid
						aDataOpC1[nAchou,2]+=nQuant - nQuantBaixa
					EndIf
					aDataOpC1[nAchou,3]:=CriaVar("C1_OP")
					aDataOpC1[nAchou,7]+=nNecessid
				EndIf
			EndIf
		EndIf
	EndIf
Endif
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650GravC1Ё Autor Ё Marcos Bregantim      Ё Data Ё 29.04.96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Grava Solic. de compra                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650GravC1(ExpC1,ExpN1,ExpC2,ExpD1)                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do produto                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade da SC                                   Ё╠╠
╠╠Ё          Ё ExpC2 = Numero da OP geradora                              Ё╠╠
╠╠Ё          Ё ExpD1 = Data de entrega da SC                              Ё╠╠
╠╠Ё          Ё ExpC3 = Campo para atualizar projacao de estoques          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650GravC1(cProduto,nQuant,cOp,dEntrega,cCpoProj,nx,nNecessid,lAutEnt,lSemData,cLocal,cTpOp,lFaltaQtd,cPedido,cItemPedido)
Static cUser
LOCAL aAreaSH5:={}
Local cNumSolic,cItem, cPerProj, lProj:=.F.

DEFAULT cPedido:=""
DEFAULT cItemPedido:=""

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Posiciona no produto correto.                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SB1->(dbSetOrder(1))
SB1->(dbSeek(xFilial("SB1")+cProduto))

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Obtem usuario e grupo de compras utilizado                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cUser == NIL
	cUser 	:= RetCodUsr()
EndIf

lAutEnt := IIF(lAutEnt==NIL,.F.,lAutEnt)
lSemData:= IIF(lSemData==NIL,.F.,lSemData)
lFaltaQtd:= IIF(lFaltaQtd==NIL,.F.,lFaltaQtd)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	lProj := .T.
endif

nx := IIF(nx==NIL,1,nx)

dbSelectArea("SC1")
IF inclui
	cNumSolic := GetNumSc1(.T.)
	If Empty(cNumSolic)
		cNumSolic := ProximoNum("SC1")
	EndIf
	cItem     := StrZero(1,Len(SC1->C1_ITEM))
	RecLock("SC1",.T.)
Else
	dbSetOrder(4)
	dbSeek(xFilial()+cOp)
	IF Found() .And. !lProj .And. !lProJ711
		While !EOF() .And. C1_FILIAL+C1_OP == xFilial()+cOp
			If C1_PRODUTO == cProduto
				Exit
			EndIf
			dbSkip()
		EndDo
		If !EOF() .And. C1_FILIAL+C1_OP+C1_PRODUTO == xFilial()+cOp+cProduto
			dbSelectArea("SB2")
			dbSetOrder(1)
			If !dbSeek(xFilial()+SC1->C1_PRODUTO+SC1->C1_LOCAL)
				CriaSB2(SC1->C1_PRODUTO,SC1->C1_LOCAL)
				MsUnlock()
			EndIf
			GravaB2Pre("-",SC1->C1_QUANT)
			dbSelectArea("SC1")
			cNumSolic := C1_NUM
			cItem     := C1_ITEM
			RecLock("SC1",.F.)
		Else
			cNumSolic := GetNumSc1(.T.)
			If Empty(cNumSolic)
				cNumSolic := ProximoNum("SC1")
			EndIf
			cItem     := StrZero(1,Len(SC1->C1_ITEM))
			RecLock("SC1",.T.)
		EndIf
	Else
		cNumSolic := GetNumSc1(.T.)
		If Empty(cNumSolic)
			cNumSolic := ProximoNum("SC1")
		EndIf
		cItem     := StrZero(1,Len(SC1->C1_ITEM))
		RecLock("SC1",.T.)
	Endif
Endif
Replace  C1_FILIAL  With xFilial()	,C1_ITEM	With cItem,;
	C1_PRODUTO With cProduto       	,C1_UM		With SB1->B1_UM,;
	C1_LOCAL   With cLocal         	,C1_CC		With SB1->B1_CC,;
	C1_EMISSAO With dDataBase      	,C1_NUM		With cNumSolic,;
	C1_OP      With cOp            	,C1_DESCRI	With SB1->B1_DESC,;
	C1_SEGUM   With SB1->B1_SEGUM	,C1_QUANT	With nQuant,;
	C1_QTSEGUM With ConvUm(cProduto,nQuant,0,2),;
	C1_DATPRF  With IIF(lProj.Or.lProj711,aPeriodos[Val(a650DtoPer(dEntrega))],dEntrega),;
	C1_IMPORT  With SB1->B1_IMPORT		,C1_COTACAO With If(SB1->B1_IMPORT=="S","IMPORT",""),;
	C1_TPOP    With cTpOp				,C1_GRUPCOM With MaRetComSC(SB1->B1_COD,UsrRetGrp(),cUser),;
	C1_USER    With cUser               ,C1_FORNECE With SB1->B1_PROC,;
	C1_LOJA    With SB1->B1_LOJPROC		,C1_SOLICIT With CriaVar("C1_SOLICIT"),;
	C1_CONTA   With SB1->B1_CONTA,C1_OBS With If(!Empty(cPedido+cItemPedido),"PV #"+cPedido+"#"+cItemPedido,""),;
	C1_FILENT  With xFilEnt(If(Empty(C1_FILENT),C1_FILIAL, C1_FILENT))

If (ExistBlock( "MT650C1" ) )
	ExecBlock("MT650C1",.F.,.F.)
EndIf
If lAutEnt
	If lSemData
		Replace C1_OBS With If(!Empty(cPedido+cItemPedido),C1_OBS+Substr(STR0033,1,15),STR0033)	//"FORA DA DATA CONTR. PARCERIA"
	ElseIf lFaltaQtd
		Replace C1_OBS With If(!Empty(cPedido+cItemPedido),C1_OBS+Substr(STR0052,1,15),STR0052)	//"QUANT. DO CONTRATO ESGOTADA"
	Else
		Replace C1_OBS With If(!Empty(cPedido+cItemPedido),C1_OBS+Substr(STR0034,1,15),STR0034)	//"SEM CONTRATO DE PARCERIA"
	Endif
Endif
MsUnLock()
dbSetOrder(1)
IF __lSX8
	ConfirmSX8()
Endif
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza Necessidade da Projecao de Estoques                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
if lProj
	cPerProj := A650DtoPer(C1_DATPRF)
	if !Empty(cPerProj)
		cCpoProj := "H5_PER"+cPerproj
		dbSelectArea("SH5")
		aAreaSH5:=GetArea()
		dbSetOrder(1)
		If dbSeek(cProduto+"2")
			RecLock("SH5",.F.)
			Replace &(cCpoProj) with &(cCpoProj)+nQuant
			MsUnlock()
		EndIf
		If dbSeek(cProduto+"5")
			RecLock("SH5",.F.)
			dbSetOrder(2)
			Replace &(cCpoProj) with &(cCpoProj)-nQuant
			If &(cCpoProj) < .005
				Replace &(cCpoProj) with 0
			EndIf
		EndIf
		RestArea(aAreaSH5)
	endif
Elseif lProj711
	A711CriSH5(C1_DATPRF,C1_PRODUTO,CriaVar("C2_OPC",.F.),"SC1",Recno(),C1_NUM,C1_ITEM,C1_OP,Max(0,C1_QUANT-C1_QUJE),"2",.T.)
endif

dbSelectArea("SB2")
dbSetOrder(1)
If !dbSeek(xFilial()+SC1->C1_PRODUTO+SC1->C1_LOCAL)
	CriaSB2(SC1->C1_PRODUTO,SC1->C1_LOCAL)
	MsUnlock()
EndIf
GravaB2Pre("+",nQuant)
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650GravC7Ё Autor Ё Marcos Bregantim      Ё Data Ё 29.04.96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Grava Autorizacao de Entrega                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650GravC7(ExpC1,ExpN1,ExpC2,ExpD1)                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do produto                                  Ё╠╠
╠╠Ё          Ё ExpN1 = Quantidade da SC                                   Ё╠╠
╠╠Ё          Ё ExpC2 = Numero da OP geradora                              Ё╠╠
╠╠Ё          Ё ExpD1 = Data de entrega da SC                              Ё╠╠
╠╠Ё          Ё ExpC3 = Campo para atualizar projacao de estoques          Ё╠╠
╠╠Ё          Ё ExpN2 = Indicador para Projecao de Estoques                Ё╠╠
╠╠Ё          Ё ExpN3 = Quantidade para Projecao de Estoques               Ё╠╠
╠╠Ё          Ё ExpC4 = Tipo da Ordem de Producao                          Ё╠╠
╠╠Ё          Ё ExpN4 = Registro origem no SC3                             Ё╠╠
╠╠Ё          Ё ExpC5 = Numero do contrato de parceria+Fornecedor+Loja     Ё╠╠
╠╠Ё          Ё ExpA1 = Array utilizado na gravacao                        Ё╠╠
╠╠Ё          Ё ExpN5 = Posicao no array                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650GravC7(cProduto,nQuant,cOp,dEntrega,cCpoProj,nx,nNecessid,cTpOp,nRecSC3,cAux,aArray,nContador)
Local cNumSolic,cItem, cPerProj, lProj:=.F.
Local lSoma:=.T.
Local nPos:=0
Local nTamanho:=TamSX3("C7_NUM")[1]
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Posiciona no produto correto.                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SB1->(dbSetOrder(1))
SB1->(dbSeek(xFilial("SB1")+cProduto))

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL
	lProj := .T.
endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Preenche variaveis nao inicializadas                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
nx := IIF(nx==NIL,1,nx)
aArray:= IIF(aArray == NIL,{},aArray)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se utiliza o mesmo numero de A.E.                 Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Len(aArray) > 1
	For nPos:=nContador-1 To 1 Step -1
		If aArray[nPos,10] == cAux
			aArray[nContador,11]:=Soma1(aArray[nPos,11])
			cNumSolic:=Substr(aArray[nContador,11],1,nTamanho)
			cItem:=Substr(aArray[nContador,11],nTamanho+1)
			lSoma:=.F.
			Exit
		EndIf
	Next nPos
EndIf

If lSoma
	dbSelectArea("SC7")
	IF inclui
		cNumSolic := GetNumSc7(.T.)
		IF Empty(cNumSolic)
			cNumSolic := ProximoNum("SC7")
		Endif
		cItem     := StrZero(1,Len(SC7->C7_ITEM))
		RecLock("SC7",.T.)
	Else
		dbSetOrder(8)
		dbSeek(xFilial()+cOp)
		IF Found() .And. !lProj .And. !lProj711
			While !EOF() .And. C7_FILIAL+C7_OP == xFilial()+cOp
				If C7_PRODUTO == cProduto
					Exit
				EndIf
				dbSkip()
			EndDo
			If !EOF() .And. C7_FILIAL+C7_OP+C7_PRODUTO == xFilial()+cOp+cProduto
				dbSelectArea("SB2")
				GravaB2Pre("-",SC7->C7_QUANT)
				dbSelectArea("SC7")
				cNumSolic := C7_NUM
				cItem     := C7_ITEM
				RecLock("SC7",.F.)
			Else
				cNumSolic := GetNumSc7(.T.)
				If Empty(cNumSolic)
					cNumSolic := ProximoNum("SC7")
				Endif
				cItem     := StrZero(1,Len(SC7->C7_ITEM))
				RecLock("SC7",.T.)
			EndIf
		Else
			cNumSolic := GetNumSc7(.T.)
			If Empty(cNumSolic)
				cNumSolic := ProximoNum("SC7")
			Endif
			cItem     := StrZero(1,Len(SC7->C7_ITEM))
			RecLock("SC7",.T.)
		Endif
	Endif
	If !Empty(aArray)
		aArray[nContador,11]:=cNumSolic+cItem
	EndIf
Else
	Reclock("SC7",.T.)
EndIf

// Posiciona SC3 no registro correto
dbSelectArea("SC3")
dbGoto(nRecSC3)

dbSelectArea("SC7")
dbSetOrder(1)
Replace 	C7_FILIAL  	With xFilial()      ,;
	C7_NUMSC   	With SC3->C3_NUM    ,;
	C7_ITEMSC  	With SC3->C3_ITEM   ,;
	C7_PRECO   	With SC3->C3_PRECO  ,;
	C7_LOJA    	With SC3->C3_LOJA   ,;
	C7_TOTAL   	With nQuant*SC3->C3_PRECO,;
	C7_IPI     	With SC3->C3_IPI    ,;
	C7_COND	  	With SC3->C3_COND   ,;
	C7_CONTATO 	With SC3->C3_CONTATO,;
	C7_FILENT  	With SC3->C3_FILENT	,;
	C7_REAJUST 	With SC3->C3_REAJUST,;
	C7_FRETE   	With SC3->C3_FRETE  ,;
	C7_DATPRF  	With IIF(lProj.Or.lProj711,aPeriodos[Val(a650DtoPer(dEntrega))],dEntrega),;
	C7_LOCAL   	With SC3->C3_LOCAL  ,;
	C7_FORNECE  With SC3->C3_FORNECE,;
	C7_PRODUTO 	With SC3->C3_PRODUTO,;
	C7_MSG	  	With SC3->C3_MSG    ,;
	C7_TPFRETE 	With SC3->C3_TPFRETE,;
	C7_OBS     	With SC3->C3_OBS    ,;
	C7_RESIDUO 	With SC3->C3_RESIDUO,;
	C7_QUANT   	With nQuant         ,;
	C7_UM      	With SB1->B1_UM     ,;
	C7_SEGUM   	With SB1->B1_SEGUM  ,;
	C7_CONTA   	With SB1->B1_CONTA  ,;
	C7_CC 		With SB1->B1_CC     ,;
	C7_TIPO		With 2              ,;
	C7_DESCRI  	With SB1->B1_DESC   ,;
	C7_QTSEGUM 	With ConvUm(SB1->B1_COD,nQuant,0,2),;
	C7_NUM	  	With cNumSolic      ,;
	C7_ITEM    	With cItem          ,;
	C7_QUJE	  	With 0              ,;
	C7_DESC1    With 0              ,;
	C7_DESC2   	With 0              ,;
	C7_DESC3    With 0              ,;
	C7_EMISSAO  With dDataBase      ,;
	C7_EMITIDO 	With "S"            ,;         // Emitido o relatorio de PC
	C7_QTDREEM 	With 0              ,;         // Qtde que foi emitido o PC
	C7_CODLIB  	With Space(Len(C7_CODLIB)) ,;  // Controle de Alcada
	C7_NUMCOT  	With Space(Len(C7_NUMCOT)) ,;  // Numero da Cotacao
	C7_TX       With Space(Len(C7_TX))     ,;  // Transmissao de Arquivos
	C7_CONTROL 	With Space(Len(C7_CONTROL)),;  // Controle de Alcadas
	C7_ENCER    With " "                   ,;  // " "- PC em aberto , "E" - PC encerrado
	C7_IPIBRUT 	With "B"                   ,;  // IPI calculado pelo Bruto
	C7_OP       With cOp,;
	C7_TPOP		With cTpOp
nQuant:=SC7->C7_QUANT
If (ExistBlock( "MT650C7" ) )
	ExecBlock("MT650C7",.F.,.F.)
EndIf
MsUnLock()
IF __lSX8
	ConfirmSX8()
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza Necessidade da Projecao de Estoques                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
if lProj
	cPerProj := A650DtoPer(SC7->C7_DATPRF)
	if !Empty(cPerProj)
		cCpoProj := "H5_PER"+cPerproj
		dbSelectArea("SH5")
		dbSetOrder(1)
		If dbSeek(cProduto+"2")
			RecLock("SH5",.F.)
			Replace &(cCpoProj) with &(cCpoProj)+nQuant
			MsUnlock()
		EndIf
		If dbSeek(cProduto+"5")
			RecLock("SH5",.F.)
			IF nx==1
				Replace &(cCpoProj) with nNecessid
			Endif
			dbSetOrder(2)
			Replace &(cCpoProj) with &(cCpoProj)-nQuant
			If &(cCpoProj) < .005
				Replace &(cCpoProj) with 0
			EndIf
		EndIf
	endif
Elseif lProj711
	A711CriSH5(C7_DATPRF,C7_PRODUTO,CriaVar("C2_OPC",.F.),"SC7",Recno(),C7_NUM,C7_ITEM,C7_OP,Max(0,C7_QUANT-C7_QUJE),"2",.T.)
endif
dbSelectArea("SB2")
dbSetOrder(1)
If dbSeek(xFilial()+SC7->C7_PRODUTO+SC7->C7_LOCAL)
	GravaB2Pre("+",nQuant)
EndIf
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁProximoNumЁ Autor Ё Eveli Morasco         Ё Data Ё 22/10/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Pega o proximo numero e item disponiveis no SC1            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpC1:=ProximoNum(ExpC2)                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Proximo Numero                                     Ё╠╠
╠╠Ё          Ё ExpC2 = Alias a ser incrementado (SC1/SC7)                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function ProximoNum(cAlias)
Local cNumSolic
dbSelectArea(cAlias)
dbSetOrder(1)
dbSeek(xFilial()+"z",.T.)
dbSkip(-1)
If &(Substr(cAlias,2,2)+"_FILIAL") == xFilial()
	cNumSolic := StrZero(Val(&(Substr(cAlias,2,2)+"_NUM"))+1,6)
Else
	cNumSolic := "000001"
EndIf
RETURN cNumSolic

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650IniCpoЁ Autor Ё Claudinei M. Benzi    Ё Data Ё 07/01/92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Rotina p/ inicializacao de alguns campos a partir do Prod. Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650IniCpo()
Local nEndereco
Local nEnd1
Local nEnd2

dbSelectArea("SB1")
dbSetOrder(1)
dbSeek(xFilial()+M->C2_PRODUTO)
IF !Found()
	RETURN .T.
EndIf
IF SB1->B1_FANTASM == "S"
	HELP(" ",1,"A650FANT")
	RETURN .F.
Endif

M->C2_LOCAL := B1_LOCPAD
nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "C2_LOCAL" } )
If nEndereco > 0
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_LOCPAD
EndIf

M->C2_CC := B1_CC
nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "C2_CC" } )
If nEndereco > 0
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_CC
EndIf

M->C2_UM := B1_UM
nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "C2_UM" } )
If nEndereco > 0
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_UM
EndIf

M->C2_SEGUM := B1_SEGUM
nEndereco := Ascan(aGets,{ |x| Subs(x,9,5) == "C2_SEGUM" } )
If nEndereco > 0
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := B1_SEGUM
EndIf

M->C2_SEQUEN := "001"
nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_SEQUEN" } )
If nEndereco > 0
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := "001"
EndIf

nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "C2_PRIOR" } )
If nEndereco > 0
	M->C2_PRIOR := "500"
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := "500"
EndIf

nEndereco := Ascan(aGets,{ |x| Subs(x,9,10) == "C2_REVISAO" } )
If nEndereco > 0
	M->C2_REVISAO := SB1->B1_REVATU
	aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->C2_REVISAO
EndIf
     
If IntQIP(M->C2_PRODUTO) //Define a integracao com o QIP
	M->C2_ROTEIRO := QIPRevRot(M->C2_PRODUTO)[2]
	nEndereco := Ascan(aGets,{|x|SubStr(x,9,9)=="C2_ROTEIRO"})
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := M->C2_ROTEIRO
	EndIf
EndIf

RETURN .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A650DtoPer Ё Autor Ё Ary Medeiros        Ё Data Ё 25/08/92 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Retorna o Periodo da projecao correspondente a uma data    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpC1 := A650DtoPer(ExpD2)                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 := String com o numero do periodo Ex. "01"           Ё╠╠
╠╠Ё          Ё ExpD2 := Data a ser convertida                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA710  e MATA650                                         Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DtoPer(dData)
Local i:=0, cRet:="", dFimProj
Local LProj711:=If(Type("lProj711") == "L",lProj711,If(Type("aPeriodos2") == "A",.T.,.F.))

If lProj711
	i:=Ascan(aPeriodos,dData)
	If i > 0
		cRet := StrZero(i,3,0)	
	ElseIf dData <= aPeriodos[1]
		cRet := "001"
	Endif
Else
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁdFimProj - Data limite para ultimo periodo -> Len(aperiodos) + 1Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	IF Len(aPeriodos) > 1 .And. nTipo # 1 .And. nTipo # 7
		dFimProj := aPeriodos[Len(aPeriodos)] + (aPeriodos[Len(aPeriodos)] - aPeriodos[Len(aPeriodos)-1])
	Else
		If nTipo == 1 .or. nTipo == 7		// Projecao Diaria ou Periodos Variaveis
			dFimProj := aPeriodos[Len(aPeriodos)]
		ElseIf nTipo == 2	// Projecao Semanal
			dFimProj := aPeriodos[Len(aPeriodos)] + 6
		ElseIf nTipo == 3	// Projecao Quinzenal
			dFimProj := CtoD(If(Substr(DtoC(aPeriodos[Len(aPeriodos)]),1,2)="01","15"+Substr(DtoC(aPeriodos[Len(aPeriodos)]),3,6),;
				"01/"+If(Month(aPeriodos[Len(aPeriodos)])+1<=12,StrZero(Month(aPeriodos[Len(aPeriodos)])+1,2)+"/"+;
				SubStr(DtoC(aPeriodos[Len(aPeriodos)]),7,2),"01/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)])+1,4),3,2))),"ddmmyy")
		ElseIf nTipo == 4	// Projecao Mensal
			dFimProj := CtoD("01/"+If(Month(aPeriodos[Len(aPeriodos)])+1<=12,StrZero(Month(aPeriodos[Len(aPeriodos)])+1,2)+;
				"/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)]),4),3,2),"01/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)])+1,4),3,2)),"ddmmyy")
		ElseIf nTipo == 5	// Projecao Trimestral
			dFimProj := CtoD("01/"+If(Month(aPeriodos[Len(aPeriodos)])+3<=12,StrZero(Month(aPeriodos[Len(aPeriodos)])+3,2)+;
				"/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)]),4),3,2),"01/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)])+1,4),3,2)),"ddmmyy")
		ElseIf nTipo == 6	// Projecao Semestral
			dFimProj := CtoD("01/"+If(Month(aPeriodos[Len(aPeriodos)])+6<=12,StrZero(Month(aPeriodos[Len(aPeriodos)])+6,2)+;
				"/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)]),4),3,2),"01/"+Substr(Str(Year(aPeriodos[Len(aPeriodos)])+1,4),3,2)),"ddmmyy")
		EndIf
	EndIf
	
	if dData <= aPeriodos[1]
		cRet := "001"
	endif
	if Len(aPeriodos) >= 2
		For i:= 2 to Len(aPeriodos)
			if dData < aPeriodos[i] .and. dData >= aPeriodos[i-1]
				cRet := StrZero(i-1,3)
				Exit
			endif
		Next
	endif
	if dData >= aPeriodos[Len(aPeriodos)] .And. dData <= dFimProj
		cRet := StrZero(Len(aPeriodos),3)
	ElseIf dData >= dFimProj
		cRet := ""
	Endif
EndIf	
RETURN cRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650WriteOp Ё Autor Ё Ary Medeiros        Ё Data Ё 10/09/93 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Gera OP's intermedi═rias e solicita┤■es de compra          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650WriteOp(lProj,aX,cCpoProj,cTpOp)
Local nToler,nQtdeTot,aQtdes:={},nX,nRegSb2
Local nPrazo			// Prazo de Entrega (Lead Time)
Local dDataIni,dDataFim	// Data Prevista Inicio / Fim
Local dDataAjus			// Data Ajustada Inicio
Local cProduto,nQtde, nQtde2UM,cOpcionais
Local nz
Local lOne:=.F.
Local lEstMax := If(Type('lProj711')=='L',lProj711,.F.) .And. aPergs711[19] == 2 .And. aPergs711[1] == 1
cObs	 := SC2->C2_OBS
nQtde	 := SC2->C2_QUANT
nQtde2UM := SC2->C2_QTSEGUM
cLocal   := SC2->C2_LOCAL
cNumOp	 := SC2->C2_NUM
cItemOp	 := SC2->C2_ITEM
cItemGrd := SC2->C2_ITEMGRD
cProduto := SC2->C2_PRODUTO
cGrade   := SC2->C2_GRADE
cRoteiro := A650VldRot(SC2->C2_PRODUTO,SC2->C2_ROTEIRO,SC2->C2_LOCAL)
cOpcionais:=SC2->C2_OPC

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Envia para rotina de Montagem da Estrutura                   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If cCpoProj != NIL .And. cCpoProj # "INICIO"
	aQtdes := CalcLote(cProduto,nQtde,"F")
	If lEstMax
		aQtdes := A711LotMax(cProduto, A650SldMRP(.T.,.F.,cProduto,aPeriodos[Val(cCpoProj)]), nQtde, aQtdes)
	Endif
Else
	AADD(aQtdes,nQtde)
Endif

nPrazo := CalcPrazo(cProduto,aQtdes[1])

dbSelectArea("SC2")
RecLock("SC2",.F.)
Replace C2_QUANT With aQtdes[1]
Replace C2_QTSEGUM With ConvUm(cProduto,aQtdes[1],nQtde2UM,2)
MsUnLock()

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
// Caso nao exista cria array que registra todos os niveis da estrutura
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Type("aRetorOpc") <> "A"
	aRetorOpc:={}
EndIf
	
// Indica se permite repeir o mesmo grupo de opcionais em varios niveis ou nao
If GetNewPar("MV_REPGOPC","N") == "S" .And. FieldPos("C2_MOPC") > 0
	aRetorOpc:=STR2Array(SC2->C2_MOPC,.F.)
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Atualiza Campo Necessidade da Projecao de Estoques             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
if lProj .And. cCpoProj != "INICIO"
	dbSelectArea("SH5")
	If dbSeek(SG1->G1_NIV+cProduto+"2")
		RecLock("SH5",.F.)
		Replace &(cCpoProj) with &(cCpoProj)+aQtdes[1]
	EndIf
	If dbSeek(SG1->G1_NIV+cProduto+"5")
		RecLock("SH5",.F.)
		Replace &(cCpoProj) with &(cCpoProj)-aQtdes[1]
		If &(cCpoProj) < .005
			Replace &(cCpoProj) with 0
		EndIf
	EndIf
	If nPar10 == 1
		lOne:=.T.
	EndIf
elseIf lProj711
	A711CriSH5(C2_DATPRF,C2_PRODUTO,C2_OPC,"SC2",Recno(),C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD,"",If(!Empty(C2_PEDIDO),C2_PEDIDO+"/"+C2_ITEMPV,""),Max(0,C2_QUANT-C2_QUJE),"2",.T.)
	If aPergs711[16] == 1
		lOne:=.T.
	EndIf
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava 0 nos valores acumulados da OP                           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC2")
RecLock("SC2",.F.)

if aX
	Replace C2_DATPRF With C2_DATPRI + nPrazo
Endif

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Datas de referencia para geracao das OP's intermediarias       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dDataFim := C2_DATPRF
dDataIni := C2_DATPRI
dDataAjus:= C2_DATAJI

If lProj .Or. lProj711
	Replace C2_IDENT With "P"
EndIf

dbSelectArea("SB2")
dbSetOrder(1)
If !dbSeek(xFilial()+cProduto+SC2->C2_LOCAL)
	CriaSB2(cProduto,SC2->C2_LOCAL)
	MsUnlock()
EndIf
GravaB2Pre("+",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
nRegSb2 := RecNo()

For nX := 1 To Len(aQtdes)
	If nX > 1
		cSeqC2:=Soma1(cSeqC2,Len(SC2->C2_SEQUEN))
		A650GeraC2(cProduto,aQtdes[nX],dDataIni,dDataFim,dDataAjus,cCpoProj,,,.F.,,SC2->C2_LOCAL,SC2->C2_OPC,cTpOp,SC2->C2_REVISAO,nQtde2UM,cNumOp,cItemOp,cSeqC2,cRoteiro,cObs)
	EndIf
	MontEstru(cProduto,aQtdes[nX],SC2->C2_DATPRI,cCpoProj,cSeqC2,SC2->C2_PRIOR,NIL,SC2->C2_OPC,lOne,cTpOp,SC2->C2_REVISAO,cProduto)
	dbSelectArea("SB2")
	dbGoTo(nRegSb2)
Next nX
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gera SC's aglutinadas por OP.                                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If mv_par06 == 2
	For nz:=1 to Len(aOPC1)
		A650GravC1(aOPC1[nz,1],aOPC1[nz,2],aOPC1[nz,3],aOPC1[nz,4],aOPC1[nz,5],;
			aOPC1[nz,6],aOPC1[nz,7],aOPC1[nz,8],aOPC1[nz,9],aOPC1[nz,10],aOPC1[nz,11],aOPC1[nz,12])
	Next nz
	For nz:=1 to Len(aOPC7)
		A650GravC7(aOPC7[nz,1],aOPC7[nz,2],aOPC7[nz,3],aOPC7[nz,4],aOPC7[nz,5],;
			aOPC7[nz,6],aOPC7[nz,7],aOPC7[nz,8],aOPC7[nz,9],aOPC7[nz,10],@aOPC7,nz)
	Next nz
	aOPC1:={}
	aOPC7:={}
EndIf

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650PutBatchЁ Autor Ё Ary Medeiros        Ё Data Ё 10/09/93 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Coloca OP na fila para geracao em Batch                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650PutBatch(cOp,lOrcamento,dDataPrIni,dDataPrFim)
Local nLen := Len(cOp), aStru := {},cNomBat := "BATCH"+cEmpAnt+"0.OP",lFim
Local cAlias := Alias(), lMade := .F.
Local cNomInd := "BATCH"+cEmpAnt+"0.OPX"
Local cNomInd2:= "BATCH"+cEmpAnt+"2.OPX"
Local aEstruTRB:={}

lOrcamento := If(lOrcamento == NIL, .F. , lOrcamento )
dDataPrIni := If(dDataPrIni == NIL, dDataBase,dDataPrIni)
dDataPrFim := If(dDataPrFim == NIL, dDataBase,dDataPrFim)

If !File(cNomBat)
	AADD(aEstruTRB,{"OP","C",nLen,0})
	AADD(aEstruTRB,{"OK","C",1,0})
	AADD(aEstruTRB,{"OR","C",1,0})
	AADD(aEstruTRB,{"DATAINI","D",8,0})
	AADD(aEstruTRB,{"DATAFIM","D",8,0})                 	
	AADD(aEstruTRB,{"USUARIO","C",6,0})
	dbCreate(cNomBat,aEstruTRB,__LocalDriver)
	lMade := .T.
EndIf
lFim := .F.
While !lFim
	USE &cNomBAT Alias BAT SHARED NEW VIA __LocalDriver
	lFIm := !NetERR()
End
If lMade
	INDEX ON DTOS(DATAINI)+DTOS(DATAFIM)+OP TO &cNomInd
	INDEX ON OP+DTOS(DATAINI)+DTOS(DATAFIM) TO &cNomInd2
	dbClearIndex()
	dbSetIndex(cNomInd)
	dbSetIndex(cNomInd2)
	dbSetOrder(1)
Else
	If !File(cNomInd)
		INDEX ON DTOS(DATAINI)+DTOS(DATAFIM)+OP TO &cNomInd
		dbCommitAll()
	EndIf
	If !File(cNomInd2)
		INDEX ON OP+DTOS(DATAINI)+DTOS(DATAFIM) TO &cNomInd2
		dbCommitAll()
	EndIf
	dbClearIndex()
	dbSetIndex(cNomInd)
	dbSetIndex(cNomInd2)
	dbSetOrder(1)
EndIf
RecLock("BAT",.T.)
Replace OP with cOp
Replace OR With If(lOrcamento,"S","N")
Replace DATAINI With dDataPrIni
Replace DATAFIM With dDataPrFim
If FIELDPOS("USUARIO")>0
	Replace USUARIO With RetCodUsr()
EndIf	
MsUnLock()
dbCloseArea()
dbSelectArea(cAlias)
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650RunBatchЁ Autor Ё Ary Medeiros        Ё Data Ё 10/09/93 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Executa geracao de OP's intermediarias em batch            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650RunBatch(nOps,lOrcamento)
Local cNomBAT := "BATCH"+cEmpAnt+"0.OP"
Local cNomInd := "BATCH"+cEmpAnt+"0.OPX"
Local cNomInd2:= "BATCH"+cEmpAnt+"2.OPX"
Local lControlUser:=.F.
Local nZ         := 0
PRIVATE cSeqC2 , cNumOp, cItemOp , cLocal

lOrcamento := If(lOrcamento == NIL, .F. , lOrcamento )

If Type("l650Auto") # "L" .or. !l650Auto
	ProcRegua(nOps)
EndIf
dbSelectArea("BAT")
dbGoTop()
lControlUser:=FIELDPOS("USUARIO")>0 .And. (GetNewPar("MV_EXPLOPU","N") == "S")
Inclui := .T.
While !Eof()
	If Type("l650Auto") # "L" .or. !l650Auto
		IncProc()
	EndIf
	If If(lControlUser,BAT->USUARIO == RetCodUsr() .Or. Empty(BAT->USUARIO),.T.) .And. MsRLock()
		If ( Empty(BAT->OK) .and. Subs(OP,1,2) == xFilial("SC2") .And. ;
				If(lOrcamento,BAT->OR=="S",BAT->OR!="S") )
			dbSelectArea("SC2")
			dbSetOrder(1)
			If dbSeek(BAT->OP)
				dbSelectArea("SB2")
				dbSetOrder(1)
				If !dbSeek(xFilial()+SC2->C2_PRODUTO+SC2->C2_LOCAL)
					CriaSB2(SC2->C2_PRODUTO,SC2->C2_LOCAL)
					MsUnlock()
				EndIf
				GravaB2Pre("-",SC2->C2_QUANT,SC2->C2_TPOP,SC2->C2_QTSEGUM)
				dbSelectArea("SC2")
				cSeqC2 :="001"
				A650WriteOp(.F.,.F.,,SC2->C2_TPOP)
				dbSelectArea("SC2")
				MsUnlock()
			EndIf
			dbSelectArea("BAT")
			Replace OK With "Ш"
			dbDelete()
		Endif
		MsrunLock()
	EndIf
	dbSkip()
End

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Gera SC's aglutinadas por data de Necessidade.               Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If mv_par06 == 3
	For nz:=1 to Len(aDataOPC1)
		A650GravC1(aDataOPC1[nz,1],aDataOPC1[nz,2],aDataOPC1[nz,3],aDataOPC1[nz,4],aDataOPC1[nz,5],;
			aDataOPC1[nz,6],aDataOPC1[nz,7],aDataOPC1[nz,8],aDataOPC1[nz,9],aDataOPC1[nz,10],aDataOPC1[nz,11],aDataOPC1[nz,12])
	Next nz
	For nz:=1 to Len(aDataOPC7)
		A650GravC7(aDataOPC7[nz,1],aDataOPC7[nz,2],aDataOPC7[nz,3],aDataOPC7[nz,4],aDataOPC7[nz,5],;
			aDataOPC7[nz,6],aDataOPC7[nz,7],aDataOPC7[nz,8],aDataOPC7[nz,9],aDataOPC7[nz,10],@aDataOPC7,nz)
	Next nz
EndIf

dbSelectArea("BAT")
dbCloseArea()
USE &cNomBAT Alias BAT ExClusive NEW VIA __LocalDriver
IF !NetErr()
	dbClearIndex()
	If File(cNomInd)
		dbSetIndex(cNomInd)
	EndIf
	If File(cNomInd2)
		dbSetIndex(cNomInd2)
	EndIf
	PACK
	dbCloseArea()
Endif
USE  &cNomBAT Alias BAT Shared NEW VIA __LocalDriver
dbClearIndex()
If File(cNomInd)
	dbSetIndex(cNomInd)
EndIf
If File(cNomInd2)
	dbSetIndex(cNomInd2)
EndIf

RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё DesBatch Ё Autor Ё Ary Medeiros          Ё Data Ё 10/09/93 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Tira Op do Arquivo de Batch                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DesBatch(cOP)
Local cNomBat := "BATCH"+cEmpAnt+"0.OP",lFim
Local cNomInd := "BATCH"+cEmpAnt+"0.OPX"
Local cNomInd2:= "BATCH"+cEmpAnt+"2.OPX"

If File(cNomBat)
	lFim := .F.
	While !lFim
		USE &cNomBAT Alias BAT SHARED NEW VIA __LocalDriver
		lFIm := !NetErr()
	End
	If !File(cNomInd)
		INDEX ON DTOS(DATAINI)+DTOS(DATAFIM)+OP TO &cNomInd
		dbCommitAll()
	EndIf
	If !File(cNomInd2)
		INDEX ON OP+DTOS(DATAINI)+DTOS(DATAFIM) TO &cNomInd2
		dbCommitAll()
	EndIf
	dbClearIndex()
	dbSetIndex(cNomInd)
	dbSetIndex(cNomInd2)
	dbSetOrder(2)
	dbSeek(cOp)
	If Found()
		RecLock("BAT",.F.,.T.)
		dbDelete()
	EndIf
	dbCloseArea()
Endif
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё ChkBatch Ё Autor Ё Waldemiro L. Lustosa  Ё Data Ё 31/01/96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Verifica Flag de OP no Arquivo Batch                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650ChkBatch(cOP)
Local cNomBat := "BATCH"+cEmpAnt+"0.OP",lFim,lRet := .T.
Local cNomInd := "BATCH"+cEmpAnt+"0.OPX"
Local cNomInd2:= "BATCH"+cEmpAnt+"2.OPX"

If File(cNomBat)
	lFim := .F.
	While !lFim
		Use &cNomBAT Alias BAT Shared New VIA __LocalDriver
		lFIm := !NetErr()
	End
	If !File(cNomInd)
		INDEX ON DTOS(DATAINI)+DTOS(DATAFIM)+OP TO &cNomInd
		dbCommitAll()
	EndIf
	If !File(cNomInd2)
		INDEX ON OP+DTOS(DATAINI)+DTOS(DATAFIM) TO &cNomInd2
		dbCommitAll()
	EndIf
	dbClearIndex()
	dbSetIndex(cNomInd)
	dbSetIndex(cNomInd2)
	dbSetOrder(2)
	dbSeek(cOp)
	If Found()
		If Empty(BAT->OP)
			lRet := .F.
		EndIf
	EndIf
	dbCloseArea()
EndIf
RETURN lRet

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A650TrcdtЁ Autor Ё Ary Medeiros          Ё Data Ё 10/09/93 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescricao Ё Troca a data do empenho na alteracao                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Trcdt(cOP)


Local cAlias := Alias(),nOrder:=IndexOrd(),nRecno:=Recno()
//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se devera' ser alterado ou nao todos os itens da Grade Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
Local lAltGra   := If(mv_par11==1, .T. , .F. )

dbSelectArea("SD4")
dbSetOrder(2)
dbSelectArea("SC2")
dbSeek(xFilial()+cOP)
Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM == xFilial()+cOP
	dbSelectArea("SD4")
	If dbSeek(xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN)
		Do While !Eof() .And. D4_FILIAL+If(!lAltGra,D4_OP,left(SD4->D4_OP,len(cOp))) == xFilial()+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+If(lAltGra,"",SC2->C2_ITEMGRD)
			Reclock("SD4",.F.)
			Replace D4_DATA With SC2->C2_DATPRI
			MsUnlock()
			dbSkip()
		EndDo
	EndIf
	dbSelectArea("SC2")
	dbSkip()
EndDo
dbSelectArea(cAlias)
dbSetOrder(nOrder)
dbGoto(nRecno)
RETURN .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A650CreditЁ Autor Ё Rosane                Ё Data Ё 13/02/95 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Avalia Credito e Lim. de Cred. de P.V. para Gerar O.P.      Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                     Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Credit(cAlias,cCampo,nOpcE,cMarca,lInverte)
Local nRecno := Recno(), lCredito := lCredVenc := .T.

If MsgYesNo(OemToAnsi(STR0088)) //###"Inicia o processo de avaliacao de credito ?"
	dbSelectArea("SC5")
	dbSetOrder(1)
	dbSelectArea("SA1")
	dbSetOrder(1)
	
	dbSelectArea(cAlias)
	dbGoTop()
	While !Eof()
		If Empty(C6_OP) .Or. C6_OP == "04"
			dbSelectArea("SC5")
			dbSeek(xFilial()+SC6->C6_NUM)
			If Found()
				lCredito := A650Comp(SC6->C6_CLI+SC6->C6_LOJA,SC6->C6_PRCVEN,SC6->C6_QTDVEN,SC5->C5_MOEDA)
				If lCredito
					dbSelectArea("SA1")
					dbSeek(xFilial()+SC5->C5_CLIENTE+SC5->C5_LOJACLI)
					If Found() .And. !Empty(SA1->A1_VENCLC) .And. SA1->A1_VENCLC < dDataBase
						lCredVenc := .F.
					EndIf
				EndIf
			EndIf
			RecLock(cAlias,.F.)
			Replace C6_OP With IIF(lCredito.And.lCredVenc,"  ","04")
			If C6_OP == "04"
				Replace C6_OK With " "
			EndIf
			MsUnLock()
		EndIf
		dbSkip()
		lCredito := lCredVenc := .T.
	End
	dbGoTo(nRecno)
EndIf
Return .T.

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё A650Comp Ё Autor Ё Claudinei M. Benzi    Ё Data Ё 22.01.92 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Efetua comparacao dos saldos com o limite em moeda forte,  Ё╠╠
╠╠Ё          Ё retornando .T. ou .F.   .T.-> Aprovado    .F.-> Reprovado  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё ExpL1 = A650Comp()                                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
FUNCTION A650Comp(cCodCli,nPrcUnit,nQtdLib,nMoeda)
Local lRet:=.T., nValMoeda, nLimCred, cTipoCred, nValPed, nNumDias
Local lExistBlock:=ExistBlock("A650AVALC")
Local	lBackRet
Private lLiber := .F., lTransf := .F.
nMoeda  := Iif(nMoeda == NIL,1,nMoeda)
nMoeda  := Iif(nMoeda == 0,1,nMoeda)
nPrcUnit:= xMoeda(nPrcUnit,nMoeda,1,dDataBase)
cMCusto := GetMV("MV_MCUSTO")

dbSelectArea("SA1")
dbSeek(xFilial()+cCodCli)
cMCusto		:= If(SA1->A1_MOEDALC > 0, Alltrim(STR(SA1->A1_MOEDALC)), cMCusto)

If Found() .And. GetMV("MV_BLOQUEI")
	cTipoCred := Substr(SA1->A1_RISCO,1,1)
	
	IF cTipoCred == "A"
		lRet := .T.
	ElseIf cTipoCred == "E"
		lRet := .F.
	Else
		dbSelectArea("SM2")
		dbSeek(dDataBase)
		
		nLimCred  := (SA1->A1_LC) * IIF(!Empty(M2_MOEDA&cMCusto.),M2_MOEDA&cMCusto.,1)
		
		nValPed := (nQtdLib * nPrcUnit)
		If SA1->A1_SALDUP + xMoeda(SA1->A1_SALPEDL,Val(cMCusto),1,dDatabase) + nValPed > nLimCred
			lRet := .F.
		Else
			If cTipoCred $ "BCD"
				nNumDias := GetMV("MV_RISCO"+cTipoCred)
				dbSelectArea("SE1")
				dbSetOrder(8)
				dbSeek(xFilial()+cCodCli+"A")
				If Found()
					If dDataBase - E1_VENCREA < nNumDias
						lRet := .T.
					Else
						lRet := .F.
					EndIf
				Else
					lRet := .T.
				EndIf
			EndIf
		EndIf
	Endif
Endif
// Executa ponto de entrada
If lExistBlock
	lRet:=ExecBlock("A650AVALC",.F.,.F.,lRet)
	If ValType(lRet) # "L"
		lRet:=lBackRet
	EndIf
EndIf		
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650Prior   Ё Autor Ё Waldemiro Lustosa   Ё Data Ё 12/09/95 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Validacao do campo C2_PRIOR                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Prior()
Local cAlias := Alias(), nIndexOrd := IndexOrd(), nRecno := Recno()
Local cCpoPrior := ReadVar(), cPrior := &(ReadVar())
Local cSeqAnt, nEndereco, lRet := .T.

If cCpoPrior == "M->C2_PRIOR" .And. altera .And. M->C2_PRIOR # SC2->C2_PRIOR
	If M->C2_SEQUEN # "001"
		cSeqAnt := StrZero( Val( M->C2_SEQUEN ) - 1, 3, 0)
		dbSelectArea("SC2")
		dbSetOrder(1)
		dbSeek(xFilial()+M->C2_NUM+M->C2_ITEM+cSeqAnt)
		If Found()
			If cPrior > C2_PRIOR
				Help(" ",1,"A650PRIOR",,C2_PRIOR,03,20)
				M->C2_PRIOR := C2_PRIOR
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,8) == "C2_PRIOR" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := C2_PRIOR
				EndIf
				lRet := .F.
			EndIf
		EndIf
	EndIf
EndIf

dbSelectArea(cAlias)
dbSetOrder(nIndexOrd)
dbGoto(nRecno)
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650Status  Ё Autor Ё Waldemiro Lustosa   Ё Data Ё 14/09/95 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Validacao do campo C2_STATUS                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Status()
Local cAlias := Alias(), nIndexOrd := IndexOrd(), nRecno := Recno()
Local cCpoStatus := ReadVar(), cStatus := &(ReadVar())
Local nEndereco, lRet := .T., cDirOCR := ""
Local cSavScrPerg, nOpcA, aAC := {STR0062,STR0063} //"Abandona"###"Confirma"

If cCpoStatus == "M->C2_STATUS"
	If inclui
		If cStatus == "S"
			Help(" ",1,"A650SACRAM")
			lRet := .F.
		EndIf
	Else
		If SC2->C2_STATUS # "S" .And. cStatus == "S"
			dbSelectArea("SC2")
			dbSetOrder(1)
			dbSeek(xFilial()+M->C2_NUM+M->C2_ITEM+M->C2_SEQUEN)
			If Found()
				If !Empty(C2_DATRF)
					Help(" ",1,"A650SACRA2")
					lRet := .F.
				Else
					If !ChkFile("SH8",.T.)
						Help(" ",1,"SH8EmUso")
						lRet := .F.
					Else
						dbSelectArea("SH8")
						dbGotop()
						If Bof() .And. Eof()
							Help(" ",1,"A650SACRAM")
							lRet := .F.
						Else
							dbSetOrder(1)
							dbSeek(xFilial()+M->C2_NUM+M->C2_ITEM+M->C2_SEQUEN)
							If Empty(SC2->C2_DATAJI) .Or. Empty(SC2->C2_DATAJF) .Or. Empty(SC2->C2_HORAJI) .Or. Empty(SC2->C2_HORAJF)
								If !Found()
									Help(" ",1,"A650SACRAM")
								Else
									If A690CheckSC2()
										Help(" ",1,"A650SACRA3")
									Else
										Help(" ",1,"A650SACRAM")
									EndIf
								EndIf
								lRet := .F.
							Else
								If SH8->(Found())
									If !A690CheckSC2()
										If A690ChkFlag(2) == 0
											Help(" ",1,"A650SACRA4")
											lRet := .F.
										Else
											cSacram := "S"
										EndIf
									Else
										Help(" ",1,"A650SACRA3")
										lRet := .F.
									EndIf
								Else
									Help(" ",1,"A650SACRAM")
									lRet := .F.
								EndIf
							EndIf
						EndIf
						dbCloseArea()
						ClosFile("SH8")
					EndIf
				EndIf
			EndIf
		ElseIf SC2->C2_STATUS == "S" .And. cStatus # "S"
			cText:=STR0035+CHR(13)	//"Esta O.P. est═ Sacramentada (aloca┤└o fixa)."
			cText+=STR0036	//"Voc┬ tem certeza que deseja mudar a Situa┤└o ?"
			IIF(MsgYesNo(OemToAnsi(cText),OemToAnsi(STR0024)),nOpca:=2,nOpca:=1)	//"Aten┤└o"
			If nOpcA == 2
				cSacram := "N"
			Else
				lRet := .F.
			EndIf
		ElseIf SC2->C2_STATUS == "S" .And. cStatus == "S"
			cSacram := ""
		ElseIf SC2->C2_STATUS # "S" .And. cStatus # "S"
			cSacram := ""
		EndIf
		If !lRet
			M->C2_STATUS := SC2->C2_STATUS
			nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_STATUS" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := SC2->C2_STATUS
			EndIf
		EndIf
	EndIf
EndIf

dbSelectArea(cAlias)
dbSetOrder(nIndexOrd)
dbGoto(nRecno)
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650DatPri  Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 22/08/97 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Validacao do campo C2_DATPRI                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DatPri(cCpoDatPri,dDatPri,cProd,nQuant,lReferencia)

Local lRet := .T.,nEndereco:=0
Local nPrazo

cCpoDatPri:= IF(cCpoDatPri==NIL,ReadVar(),cCpoDatPri)
dDatpri := IF(dDatPri==NIL,&(ReadVar()),dDatPri)
cProd   := IF(cProd  ==NIL,M->C2_PRODUTO,cProd)
nQuant  := IF(nQuant ==NIL,M->C2_QUANT,nQuant)

nPrazo := CalcPrazo(cProd,nQuant)
lReferencia := If(lReferencia == NIL, .F., lReferencia)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

If cCpoDatpri == "M->C2_DATPRI"
	If !Empty(nPrazo)
		// Valida Data
		If	!Empty(M->C2_DATPRF) .And. (M->C2_DATPRF - dDatPri) < nPrazo
			// Nao apresenta o help qdo chamado do MRP
			If !lProj711
				Help(" ",1,"A650AJUSTD")
			EndIf
			If mv_par01 == 1 // Valida pela data Final
				M->C2_DATPRI:= M->C2_DATPRF - nPrazo
			Else	// Valida pela data Inicial
				M->C2_DATPRF:= dDatPri + nPrazo
			EndIf
			// Valida Data prevista p/ fim com a DataBase do sistema
			If M->C2_DATPRF < dDataBase
				M->C2_DATPRF:=dDataBase + nPrazo
			EndIf
			If !lReferencia
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRI" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRI)
				EndIf
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRF" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRF)
				EndIf
			EndIf	
			// Inicializa Data
		ElseIf Empty(M->C2_DATPRF)
			M->C2_DATPRF:= dDatPri + nPrazo
			// Valida Data prevista p/ fim com a DataBase do sistema
			If M->C2_DATPRF < dDataBase
				M->C2_DATPRF:=dDataBase + nPrazo
			EndIf
			If !lReferencia
				nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRF" } )
				If nEndereco > 0
					aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRF)
				EndIf
			EndIf	
		EndIf
	EndIf
EndIf
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650DatPrf  Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 22/08/97 Ё╠╠
╠╠цддддддддддеддддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Validacao do campo C2_DATPRF                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                      Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DatPrf(cCpoDatPrf,dDatPrf,cProd,nQuant, lReferencia)

Local lRet := .T.
Local nPrazo, nEndereco:=0

cCpoDatPrf:= IF(cCpoDatPrf==NIL,ReadVar(),cCpoDatPrf)
dDatprf := IF(dDatPrf==NIL,&(ReadVar()),dDatPrf)
cProd   := IF(cProd  ==NIL,M->C2_PRODUTO,cProd)
nQuant  := IF(nQuant ==NIL,M->C2_QUANT,nQuant)
lReferencia := If(lReferencia == NIL, .F., lReferencia)

nPrazo := CalcPrazo(cProd,nQuant)

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

If cCpoDatprf == "M->C2_DATPRF"
	// Valida em relacao a data base
	If dDatprf < dDataBase .And. !lProj711
		Help(" ",1,"A650DATPRF")
		lRet := .F.
	EndIf
	If lRet
		// Verifica se o prazo de entrega esta sendo respeitado e caso
		// nao esteja, mostra Help
		If !Empty(nPrazo)
			// Valida Data
			If !Empty(M->C2_DATPRI) .And. (M->C2_DATPRI + nPrazo) > dDatPrf
				If !lProj711
					Help(" ",1,"A650AJUSTD")
				EndIf
				If mv_par01 == 1	// Valida pela data Final
					M->C2_DATPRI:= dDatprf - nPrazo
				Else // Valida pela data Inicial
					M->C2_DATPRF:= M->C2_DATPRI + nPrazo
				EndIf
				// Valida Data prevista p/ fim com a DataBase do sistema
				If M->C2_DATPRF < dDataBase
					M->C2_DATPRF:=dDataBase + nPrazo
				EndIf
				If !lReferencia
					nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRI" } )
					If nEndereco > 0
						aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRI)
					EndIf
					nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRF" } )
					If nEndereco > 0
						aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRF)
					EndIf
				EndIf	
				// Inicializa Data
			ElseIf Empty(M->C2_DATPRI)
				M->C2_DATPRI:= dDatprf - nPrazo
				If !lReferencia
					nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRI" } )
					If nEndereco > 0
						aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRI)
					EndIf
				EndIf	
			EndIf
		EndIf
	EndIf
EndIf
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650TudoOkЁ Autor Ё Rodrigo de A. Sartorio Ё Data Ё22/08/97 Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Valida a Enchoice em relacao as datas de inicio previsto   Ё╠╠
╠╠Ё          Ё e entrega prevista com prazo de entrega.                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650TudoOk()
Local lRet := .T.
Local nPrazo := CalcPrazo(M->C2_PRODUTO,M->C2_QUANT),nEndereco:=0
Local nPrazoTot
Local lGrade   := GetMv("MV_GRADE")
Local cProduto := M->C2_PRODUTO
Local nTipoVld:=1

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a rotina esta sendo chamada da Proj.Estoques NOVA Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
lProj711:=If(Type("lProj711") == "L",lProj711,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se a grade esta ativa e se o produto digitado eh uma referenciaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If IntQIP(cProduto) .And. (!(lGrade .And. MatGrdPrrf(@cProduto)) .Or. (lGrade .And. MatGrdPrrf(@cProduto) .And. Len(aColsRot) ==0 ) )
	If Empty(M->C2_ROTEIRO)
		If (Type("l650Auto") # "L" .or. !l650Auto)
			MsgAlert(OemToAnsi(STR0050)+CHR(13)+OemToAnsi(STR0053),OemToAnsi(STR0051))		//"O campo roteiro dever═ ser preenchido, pois a integra┤└o com os"###"m╒dulos CELERINA est═ ativa (Verifique o parametro MV_QIPMAT)"###"Aten┤└o"
		Else
			AutoGRLog(OemToAnsi(STR0050)+CHR(13)+OemToAnsi(STR0053),OemToAnsi(STR0051))		//"O campo roteiro dever═ ser preenchido, pois a integra┤└o com os"###"m╒dulos CELERINA est═ ativa (Verifique o parametro MV_QIPMAT)"###"Aten┤└o"
		EndIf
		lRet := .F.
	EndIf
EndIf
// Verifica campos obrigatorios
If !Obrigatorio(aGets,aTela)
	lRet:=.F.
EndIf
// Verifica datas previstas
If M->C2_DATPRI + nPrazo > M->C2_DATPRF .And. lRet
	lRet:=.F.
	If !lProj711
		Help(" ",1,"A650AJUSTD")
	EndIf
	If mv_par01 == 1	// Valida pela data Final
		M->C2_DATPRI:= M->C2_DATPRF - nPrazo
	Else // Valida pela data Inicial
		M->C2_DATPRF:= M->C2_DATPRI + nPrazo
	EndIf
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRI" } )
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRI)
	EndIf
	nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_DATPRF" } )
	If nEndereco > 0
		aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := DTOC(M->C2_DATPRF)
	EndIf
EndIf
If lRet .And. Inclui
	nPrazoTot:=PrazoEstru(M->C2_PRODUTO,M->C2_QUANT)
	If nPrazoTot > 0 .And. ((M->C2_DATPRI - nPrazoTot) < dDataBase)
		If lProj711
			lRet:=.T.
		Else
			lRet:=A650Alert2(M->C2_NUM+M->C2_ITEM+M->C2_SEQUEN,nPrazoTot,M->C2_PRODUTO)
		EndIf
	EndIf
	If lRet
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Execblock a ser executado para verificar a validacao         Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		IF (ExistBlock('MA650VLD'))
			nTipoVld := ExecBlock('MA650VLD',.F.,.F.)
			If ValType(nTipoVld) # "N" .Or. (nTipoVld # 1 .And. nTipoVld # 2)
				nTipoVld:=1			
			EndIf
		Endif
		If nTipoVld == 1
			M->C2_SEQUEN := "001"
			nEndereco := Ascan(aGets,{ |x| Subs(x,9,9) == "C2_SEQUEN" } )
			If nEndereco > 0
				aTela[Val(Subs(aGets[nEndereco],1,2))][Val(Subs(aGets[nEndereco],3,1))*2] := "001"
			Endif
		EndIf	
		lRet:=ExistChav("SC2",M->C2_NUM+M->C2_ITEM+If(nTipoVld==1,"",M->C2_SEQUEN))
	EndIf
EndIf
RETURN lRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁMTA650PERGЁ Autor Ё Rodrigo de A. SartorioЁ Data Ё 28/12/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Chamada da funcao PERGUNTE                                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function MTA650PERG()
Local ni:=0
Pergunte("MTA650",.T.)
//Salvar variaveis existentes
For ni := 1 to 20
	aSav650[ni] := &("mv_par"+StrZero(ni,2))
Next ni
RETURN NIL

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠Ё Fun┤└o   ЁMTA650OK  Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё 04/12/95 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠Ё Descri┤└oЁ Confirmacao antes de gerar OPs intermediarias e SCs        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MTA650OK                                                   Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function MTA650OK(nOpc)
Static lBlockMta650Ok
Local lMta650Ok
Local cText:=STR0037+CHR(13)	//"As OPs intermediarias e as SCs n└o foram geradas."
cText+=STR0038+CHR(13)	//"As op┤■es s└o:"
cText+=STR0039+CHR(13)  //"- Sim ,gerar agora."
cText+=STR0040+chr(13)	//"- N└o ,abandona para gera-las posteriormente."
cText+=STR0096+CHR(13) //"Se o parametro MV_EXPLOPV estiver configurado como SIM so serao"
cText+=STR0097 //"gerados OPs Interm. / Empenhos para as OPs desse usuario."
If lBlockMta650Ok == Nil
	lBlockMta650Ok := ExistBlock("Mta650Ok")
Endif	
If lBlockMta650Ok .And. ValType(lMta650Ok := ExecBlock("MTA650OK", .F., .F.)) == "L"
	Return(If(lMta650Ok, nOpc:=1, nOpc:=2))
Else
	Return(IIF(MsgYesNo(OemToAnsi(cText),OemToAnsi(STR0024)),nOpc:=1,nOpc:=2))	//"Aten┤└o"
Endif	

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    Ё SHOWF4   Ё Autor Ё Rodrigo de A. SartorioЁ Data Ё 02/12/96 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Chamada da funcao F4LOTE                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function ShowF4()
If (Alltrim(ReadVar()) $ "M->D4_LOTECTL/M->D4_NUMLOTE")
	F4Lote(,,,"A650",aCols[n,nPosCod],aCols[n,nPosLocal])
EndIf	
Return Nil

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбддддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650ACols Ё Autor Ё Rodrigo de A. Sartorio Ё Data Ё 16/06/97Ё╠╠
╠╠цддддддддддеддддддддддадддддддаддддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Fun┤└o recursiva que monta o array aCols usado para gerar  Ё╠╠
╠╠Ё          Ё empenhos e SC's, verifica se existem produtos fantasma na  Ё╠╠
╠╠Ё          Ё estrutura e substitue os mesmos pelos produtos incluidos   Ё╠╠
╠╠Ё          Ё nos n║veis abaixo.                                         Ё╠╠
╠╠Ё          Ё Caso o usuario tenha preenchido a pergunte MV_PAR08        Ё╠╠
╠╠Ё          Ё ("Sugerir lotes a empenhar") como SIM, quebra o empenho dasЁ╠╠
╠╠Ё          Ё MPS de acordo com os lotes dispon║veis.                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A650ACols(cProduto,nQuantPai,cOpcionais,lConsEst,cRevisao,uConteudo,aHeader,cLocProc)
LOCAL nRecno:=0
LOCAL cGravaOpc:=""
LOCAL cAlias:=Alias()
LOCAL zi:=0
LOCAL aRetorno:={}
LOCAL nSC2Recno := SC2->(Recno())
LOCAL lSwap
Local nQtd2UM:=0
Local nDecSD4 := TamSX3('D4_QUANT')[2]
Local cDescB1 := ""
Local nProcura:= 0
Local aLotesTot:={}
Local lPotencia:=.F.,nQuantPot:=0,nQuantPot2:=0
PRIVATE uTrans:=uConteudo

lConsEst := If( (lConsEst == NIL),(GetMV("MV_CONSEST") == "S"),lConsEst )

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica informacoes de rastreabilidade                      Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If mv_par08 == 1 .And. lConsEst
	dbSelectArea("SG1")
	dbSetOrder(1)
	dbSeek(xFilial()+cProduto)
	Do While !Eof() .And. G1_FILIAL+G1_COD == xFilial()+cProduto
		dbSelectArea("SB1")
		dbSetOrder(1)
		dbSeek(xFilial()+SG1->G1_COMP)
		dbSelectArea("SG1")
		nQuantItem:=Round(ExplEstr(nQuantPai,SC2->C2_DATPRI,cOpcionais,cRevisao),nDecSD4)
		nQtd2UM:=ConvUM(SG1->G1_COMP,nQuantItem,0,2)
		cDescB1:=SB1->B1_DESC
		If SB1->B1_FANTASM != "S" .And. QtdComp(nQuantItem) # QtdComp(0)
			nProcura := ASCAN(aLotesTot,{|x| x[1]== SG1->G1_COMP .And. x[6]== SG1->G1_POTENCI})
			If nProcura == 0
				AADD(aLotesTot,{SG1->G1_COMP,nQuantItem,nQtd2UM,If(SB1->B1_APROPRI=="I",cLocProc,If(MV_PAR02=1,SB1->B1_LOCPAD,MV_PAR03)),NIL,SG1->G1_POTENCI})				
			Else
				aLotesTot[nProcura,2]+=nQuantItem				
				aLotesTot[nProcura,3]+=nQtd2Um
			EndIf
		EndIf
		dbSelectArea("SG1")
		dbSkip()
	EndDo
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inclui informacoes referente aos lotes que serao utilizados  Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
For zi:=1 to Len(aLotesTot)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica informacoes de maneira diferenciada quando produto  Ё
	//Ё utiliza controle de potencia identificada na estrutura.      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If Empty(aLotesTot[zi,6]) .Or. !PotencLote(aLotesTot[zi,1])
		aRetorno:=SldPorLote(aLotesTot[zi,1],aLotesTot[zi,4],aLotesTot[zi,2],aLotesTot[zi,3],NIL,NIL,NIL,NIL,NIL,.T.,If(mv_par02==1 .Or. aLotesTot[zi,4] == cLocProc,NIL,mv_par04),nil,nil,.T.)
	Else
		aRetorno:=SldPorLote(aLotesTot[zi,1],aLotesTot[zi,4],99999999999999999999,99999999999999999999,NIL,NIL,NIL,NIL,NIL,.T.,If(mv_par02==1 .Or. aLotesTot[zi,4] == cLocProc,NIL,mv_par04),nil,nil,.T.)	
	EndIf
	aLotesTot[zi,5]:=ACLONE(aRetorno)
Next zi

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Inicializa aCols                                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SG1")
dbSetOrder(1)
dbSeek(xFilial()+cProduto)
Do While !Eof() .And. G1_FILIAL+G1_COD == xFilial()+cProduto
	dbSelectArea("SB1")
	dbSetOrder(1)
	dbSeek(xFilial()+SG1->G1_COMP)
	dbSelectArea("SG1")
	nQuantItem:=Round(ExplEstr(nQuantPai,SC2->C2_DATPRI,cOpcionais,cRevisao),nDecSD4)
	nQtd2UM:=ConvUM(SG1->G1_COMP,nQuantItem,0,2)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica informacoes de maneira diferenciada quando produto  Ё
	//Ё utiliza controle de potencia identificada na estrutura.      Ё
	//Ё Converte a quantidade necessaria sempre baseado na POTENCIA  Ё
	//Ё MAXIMA (100%)                                                Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !Empty(SG1->G1_POTENCI) .And. PotencLote(SG1->G1_COMP) .And. nQuantItem > 0
		lPotencia:=.T.
		nQuantItem:=Round(nQuantItem*(SG1->G1_POTENCI/100),nDecSD4)
		nQtd2UM:=ConvUM(SG1->G1_COMP,nQuantItem,0,2)
	Else
		lPotencia:=.F.
	EndIf
	cDescB1:=SB1->B1_DESC
	If SB1->B1_FANTASM != "S"
		If nQuantItem == 0
			AADD(aCols,ARRAY(Len(aHeader)+1))
			aCols[Len(aCols),nPosCod]   := SG1->G1_COMP
			aCols[Len(aCols),nPosQuant] := nQuantItem
			aCols[Len(aCols),nPosLocal] := If(SB1->B1_APROPRI=="I",cLocProc,SB1->B1_LOCPAD)
			aCols[Len(aCols),nPosTRT]   := SG1->G1_TRT
			If !__lPyme
				aCols[Len(aCols),nPosLote]  := CriaVar("D4_NUMLOTE")
				aCols[Len(aCols),nPosLotCtl]:= CriaVar("D4_LOTECTL")
				aCols[Len(aCols),nPosdValid]:= CriaVar("D4_DTVALID")
				aCols[Len(aCols),nPosPotenc]:= CriaVar("D4_POTENCI")
				aCols[Len(aCols),nPosLocLz] := CriaVar("DC_LOCALIZ")
				aCols[Len(aCols),nPosnSerie]:= CriaVar("DC_NUMSERI")
			EndIf
			aCols[Len(aCols),nPosUM]    := SB1->B1_UM
			aCols[Len(aCols),nPosQtSegum]:=nQtd2UM
			aCols[Len(aCols),nPos2UM]   :=SB1->B1_SEGUM
			aCols[Len(aCols),nPosDescr] :=cDescB1
			aCols[Len(aCols),Len(aHeader)+1]:= .F.
			If ValType(uConteudo) != "U"
				lSwap := aCols[Len(aCols), Len(aCols[Len(aCols)])]
				aCols[Len(aCols), Len(aCols[Len(aCols)])] := &(uTrans)
				AAdd(aCols[Len(aCols)], lSwap)
			EndIf
			AADD(aColsDele,Len(aCols))
		Else
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Incrementa variavel dos opcionais                            Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If !Empty(cOpcionais) .And. !Empty(SG1->G1_GROPC) .And. ;
					!Empty(SG1->G1_OPC) .And. (SG1->G1_GROPC+SG1->G1_OPC $ cOpcionais)
				cGravaOpc+=SG1->G1_GROPC+SG1->G1_OPC+"/"
			EndIf
			// Verifica se usa Rastro ou Localizacao Fisica
			// e se deve sugerir os lotes e localizacoes do empenho
			If mv_par08 == 1 .And. (Rastro(SG1->G1_COMP) .Or. Localiza(SG1->G1_COMP));
					.And. lConsEst
				nProcura := ASCAN(aLotesTot,{|x| x[1]== SG1->G1_COMP})
				If nProcura > 0
					aRetorno:=ACLONE(aLotesTot[nProcura,5])
					For zi:=1 to Len(aRetorno)
						If QtdComp(aRetorno[zi,5]) > QtdComp(0) .And. If(lPotencia,aRetorno[zi,12] > 0,.T.)
							AADD(aCols,ARRAY(Len(aHeader)+1))
							aCols[Len(aCols),nPosCod]   := SG1->G1_COMP
							If lPotencia
								// PRIMEIRA UNIDADE DE MEDIDA
								nQuantPot:=aRetorno[zi,5]*(aRetorno[zi,12]/100)
								aCols[Len(aCols),nPosQuant] := Min(nQuantPot,nQuantItem)								
								nQuantPot:=aCols[Len(aCols),nPosQuant]
								aCols[Len(aCols),nPosQuant] := aCols[Len(aCols),nPosQuant]/(aRetorno[zi,12]/100)
								// SEGUNDA UNIDADE DE MEDIDA	
								nQuantPot2:=aRetorno[zi,6]*(aRetorno[zi,12]/100)
								aCols[Len(aCols),nPosQtSegum] := Min(nQuantPot2,nQtd2UM)								
								nQuantPot2:=aCols[Len(aCols),nPosQtSegum]
								aCols[Len(aCols),nPosQtSegum] := aCols[Len(aCols),nPosQtSegum]/(aRetorno[zi,12]/100)
							Else
								aCols[Len(aCols),nPosQuant] := Min(aRetorno[zi,5],nQuantItem)
								aCols[Len(aCols),nPosQtSegum]:=Min(aRetorno[zi,6],nQtd2UM)
							EndIf
							aCols[Len(aCols),nPosLocal] := aRetorno[zi,11]
							aCols[Len(aCols),nPosTRT]   := SG1->G1_TRT
							If !__lPyme
								aCols[Len(aCols),nPosLote]  := aRetorno[zi,2]
								aCols[Len(aCols),nPosLotCtl]:= aRetorno[zi,1]
								aCols[Len(aCols),nPosdValid]:= aRetorno[zi,7]
								aCols[Len(aCols),nPosPotenc]:= aRetorno[zi,12]
								aCols[Len(aCols),nPosLocLz] := aRetorno[zi,3]
								aCols[Len(aCols),nPosnSerie]:= aRetorno[zi,4]
							EndIf
							aCols[Len(aCols),nPosUM]    := SB1->B1_UM
							aCols[Len(aCols),nPos2UM]   :=SB1->B1_SEGUM
							aCols[Len(aCols),nPosDescr] :=cDescB1
							aCols[Len(aCols),Len(aHeader)+1]:= .F.
							If ValType(uConteudo) != "U"
								lSwap := aCols[Len(aCols), Len(aCols[Len(aCols)])]
								aCols[Len(aCols), Len(aCols[Len(aCols)])] := &(uTrans)
								AAdd(aCols[Len(aCols)], lSwap)
							EndIf
							If lPotencia
								nQuantItem -= nQuantPot
								nQtd2UM    -= nQuantPot2
							Else
								nQuantItem -= aCols[Len(aCols),nPosQuant]
								nQtd2UM    -= aCols[Len(aCols),nPosQtSegum]					
							EndIf
							aRetorno[zi,5] -= aCols[Len(aCols),nPosQuant]
							aRetorno[zi,6] -= aCols[Len(aCols),nPosQtSegum]						
							aLotesTot[nProcura,5] := ACLONE(aRetorno)
						EndIf
						If QtdComp(nQuantItem) <= QtdComp(0)
							Exit						
						EndIf
					Next zi
				EndIf
				If nQuantItem > 0
					AADD(aCols,ARRAY(Len(aHeader)+1))
					aCols[Len(aCols),nPosCod]   := SG1->G1_COMP
					aCols[Len(aCols),nPosQuant] := nQuantItem
					aCols[Len(aCols),nPosLocal] := If(SB1->B1_APROPRI=="I",cLocProc,SB1->B1_LOCPAD)
					aCols[Len(aCols),nPosTRT]   := SG1->G1_TRT
					If !__lPyme
						aCols[Len(aCols),nPosLote]  := CriaVar("D4_NUMLOTE")
						aCols[Len(aCols),nPosLotCtl]:= CriaVar("D4_LOTECTL")
						aCols[Len(aCols),nPosdValid]:= CriaVar("D4_DTVALID")
						aCols[Len(aCols),nPosPotenc]:= CriaVar("D4_POTENCI")
						aCols[Len(aCols),nPosLocLz] := CriaVar("DC_LOCALIZ")
						aCols[Len(aCols),nPosnSerie]:= CriaVar("DC_NUMSERI")
					EndIf
					aCols[Len(aCols),nPosUM]    := SB1->B1_UM
					aCols[Len(aCols),nPosQtSegum]:=nQtd2UM
					aCols[Len(aCols),nPos2UM]   :=SB1->B1_SEGUM
					aCols[Len(aCols),nPosDescr] :=cDescB1
					aCols[Len(aCols),Len(aHeader)+1]:= .F.
					If ValType(uConteudo) != "U"
						lSwap := aCols[Len(aCols), Len(aCols[Len(aCols)])]
						aCols[Len(aCols), Len(aCols[Len(aCols)])] := &(uTrans)
						AAdd(aCols[Len(aCols)], lSwap)
					EndIf
				EndIf
			Else
				//зддддддддддддддддддддддддддддддддддддддд©
				//Ё Tratamento Utilizado para o Siga Pyme Ё
				//юддддддддддддддддддддддддддддддддддддддды
				If !__lPyme
					AADD(aCols,ARRAY(Len(aHeader)+1))
					aCols[Len(aCols),nPosCod]   := SG1->G1_COMP
					aCols[Len(aCols),nPosQuant] := nQuantItem
					aCols[Len(aCols),nPosLocal] := If(SB1->B1_APROPRI=="I",cLocProc,SB1->B1_LOCPAD)
					aCols[Len(aCols),nPosTRT]   := SG1->G1_TRT
					aCols[Len(aCols),nPosLote]  := CriaVar("D4_NUMLOTE")
					aCols[Len(aCols),nPosLotCtl]:= CriaVar("D4_LOTECTL")
					aCols[Len(aCols),nPosdValid]:= CriaVar("D4_DTVALID")
					aCols[Len(aCols),nPosPotenc]:= CriaVar("D4_POTENCI")
					aCols[Len(aCols),nPosLocLz] := CriaVar("DC_LOCALIZ")
					aCols[Len(aCols),nPosnSerie]:= CriaVar("DC_NUMSERI")
					aCols[Len(aCols),nPosUM]    := SB1->B1_UM
					aCols[Len(aCols),nPosQtSegum]:=nQtd2UM
					aCols[Len(aCols),nPos2UM]   :=SB1->B1_SEGUM
					aCols[Len(aCols),nPosDescr] :=cDescB1
					aCols[Len(aCols),Len(aHeader)+1]:= .F.
				Else	
					AADD(aCols,ARRAY(Len(aHeader)+1))
					aCols[Len(aCols),nPosCod]   := SG1->G1_COMP
					aCols[Len(aCols),nPosQuant] := nQuantItem
					aCols[Len(aCols),nPosLocal] := If(SB1->B1_APROPRI=="I",cLocProc,SB1->B1_LOCPAD)
					aCols[Len(aCols),nPosTRT]   := SG1->G1_TRT
					aCols[Len(aCols),nPosUM]    := SB1->B1_UM
					aCols[Len(aCols),nPosQtSegum]:=nQtd2UM
					aCols[Len(aCols),nPos2UM]   :=SB1->B1_SEGUM
					aCols[Len(aCols),nPosDescr] :=cDescB1
					aCols[Len(aCols),Len(aHeader)+1]:= .F.
				EndIf
				If ValType(uConteudo) != "U"
					lSwap := aCols[Len(aCols), Len(aCols[Len(aCols)])]
					aCols[Len(aCols), Len(aCols[Len(aCols)])] := &(uTrans)
					AAdd(aCols[Len(aCols)], lSwap)
				EndIf
			EndIf
		EndIf
	Else
		nRecno:=Recno()
		A650ACols(SG1->G1_COMP,nQuantItem,cOpcionais,lConsEst,,uConteudo,aHeader,cLocProc)
		dbGoto(nRecno)
		SC2->(dbGoto(nSC2Recno))
	EndIf
	dbSelectArea("SG1")
	dbSkip()
EndDo
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Grava opcionais corretos na Ordem de Producao                Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
SC2->(dbGoto(nSC2Recno))
Reclock("SC2",.F.)
Replace C2_OPC With cGravaOpc
MsUnlock()
dbSelectArea(cAlias)
RETURN NIL

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650LibCredЁ Autor Ё Cristina Ogura        Ё Data Ё 03/07/97Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤└o ЁLibera os Pedidos de Vendas com credito bloqueado.          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A650LibCred()
dbGotop()
While !Eof()
	RecLock("SC6",.F.)
	Replace C6_OP With IIF(C6_OP=="04","  ",C6_OP)
	MsUnlock()
	dbSkip()
End
RETURN NIL

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650ChkCompЁ Autor Ё Edson Maricate        Ё Data Ё31.08.99 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤└o ЁVerifica a situacao das SCs e AEs da OP.                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A650ChkComp(cNumOp,cItemOp,cSequen,cItemGrd)
Local aArea		:= GetArea()
Local lDelOpSC	:= If(GetMV("MV_DELOPSC")=="S",.T.,.F.)
Local lRet		:= .T.
Local nOpc
Local cOp

dbSelectArea("SC1")
dbSetOrder(4)
dbSelectArea("SC7")
dbSetOrder(8)
dbSelectArea("SC2")
dbSetOrder(1)
dbSeek(xFilial()+cNumOp+cItemOp+cSequen+cItemGrd)
While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD==xFilial("SC2")+cNumOp+cItemOp+cSequen+cItemGrd .And. lRet
	cOp := SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+SC2->C2_ITEMGRD
	dbSelectArea("SC1")
	dbSeek(xFilial()+cOp)  // Ordem : 4
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica a existencia de PCs e gera um aviso, pois os PCs    Ё
	//Ё ja podem estar em fase de entrega.                           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	While !EOF() .And. C1_FILIAL+C1_OP == xFilial("SC1")+cOp
		If SC1->C1_QUJE > 0
			nOpc := Aviso(OemToAnsi(STR0024),OemToAnsi(STR0056)+SC1->C1_NUM+"/"+SC1->C1_ITEM+OemToAnsi(STR0057)+SC1->C1_PEDIDO+"/"+SC1->C1_ITEMPED+" .",If(lDelOpSC,{OemToAnsi(STR0060),OemToAnsi(STR0059)},{OemToAnsi(STR0060)})) // "Aten┤фo"#"Esta operacao ira excluir a SC "#" que possui amara┤ao com o PC "
			If nOpc == 1 .Or. nOpc == 0
				lRet  := .F.
				Exit
			EndIf
		EndIf
		dbSkip()
	End
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica a existencia de AEs e gera um aviso, pois as AEs    Ё
	//Ё ja podem estar em fase de entrega.                           Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC7")
	dbSeek(xFilial()+cOp) // Ordem : 8
	While !EOF() .And. C7_FILIAL+C7_OP == xFilial("SC7")+cOp
		If SC7->C7_TIPO == 2 .And. SC7->C7_QUJE+SC7->C7_QTDACLA > 0
			nOpc := Aviso(OemToAnsi(STR0024),OemToAnsi(STR0058)+SC7->C7_NUM+"/"+SC7->C7_ITEM+" .",If(lDelOpSC,{OemToAnsi(STR0060),OemToAnsi(STR0059)},{OemToAnsi(STR0060)})) // "Aten┤фo"#"A exclus└o desta OP implicara na exclus└o da Autorizacao de Entrega "
			If nOpc == 1
				lRet	:= .F.
				Exit
			EndIf
		EndIf
		dbSkip()
	End
	dbSelectArea("SC2")
	dbSkip()
End

dbSelectArea("SC1")
dbSetOrder(1)
dbSelectArea("SC7")
dbSetOrder(1)
RestArea(aArea)
RETURN lRet

/*/
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650LegendЁRev.   Ё Edson Maricate        Ё Data Ё29.07.2000 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддддд╢╠╠
╠╠Ё          ЁDemonstra a legenda das cores da mbrowse                     Ё╠╠
╠╠Ё          Ё                                                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁNenhum                                                       Ё╠╠
╠╠Ё          Ё                                                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁNenhum                                                       Ё╠╠
╠╠Ё          Ё                                                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁDescri┤└o ЁEsta rotina monta uma dialog com a descricao das cores da    Ё╠╠
╠╠Ё          ЁMbrowse.                                                     Ё╠╠
╠╠Ё          Ё                                                             Ё╠╠
╠╠Ё          Ё                                                             Ё╠╠
╠╠цддддддддддеддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё Materiais                                                   Ё╠╠
╠╠юддддддддддаддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function A650Legend()
BrwLegenda(cCadastro,STR0064,{	{"ENABLE",STR0065},; //"Legenda"###"Em aberto"
	{"DISABLE",STR0066}})	//"Encerrada"
Return(.T.)

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650ConvUMЁAutor  Ё Patricia A. Salomao   Ё Data Ё 28/12/00 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Converte as Unidades de Medida                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametro Ё Unidade de Medida a ser convertida (1/2)                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё Logico                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ*/

Function A650ConvUm(nUnid)
LOCAL lRet:=.T.
If nUnid == 2
	//зддддддддддддддддддддддддддддддддддддддд©
	//Ё Tratamento Utilizado para o Siga Pyme Ё
	//юддддддддддддддддддддддддддддддддддддддды
	If !__lPyme
		aCols[n,11]  := ConvUm(aCols[n,1],M->D4_QUANT,aCols[n,11],nUnid)
	Else
		aCols[n,6]  := ConvUm(aCols[n,1],M->D4_QUANT,aCols[n,6],nUnid)
	EndIf
	lRet:= !Empty(&(ReadVar()))
Else
	aCols[n,2]   := ConvUm(aCols[n,1],aCols[n,2],M->D4_QTSEGUM,nUnid) 	
	lRet:= !Empty(aCols[n,2])
EndIf		
Return lRet

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁaProdGradeЁ Autor ЁPatricia A. Salomao    Ё Data Ё03/2001   Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁEfetua a Valida┤└o do Codigo do Produto e Inicializa as     Ё╠╠
╠╠Ё          Ёvariaveis do acols da Grade.                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1: Codigo do Produto                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Logico (Se o Produto ┌ valido ou nao)                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMata650 / Mata250                                           Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function aProdGrade(cProduto)

Local lRetorno		:= .T.
Local lReferencia	:= .F.
Local lGrade		:= GetMv("MV_GRADE")
Local cCampo        := ReadVar()

cProduto := If(cProduto==NIL,&(ReadVar()),cProduto)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//ЁVerifica se a grade esta ativa e se o produto digitado eh uma referenciaЁ
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lGrade  .And. MatGrdPrrf(@cProduto)
	lReferencia := MatGrdPrrf(@cProduto)
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Monta o AcolsGrade e o AheadGrade para este item     Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
	MatGrdMont(1,cProduto,.T.)	
EndIf

dbSelectArea("SB1")
dbSetOrder(1)
If ( !dbSeek(xFilial("SB1")+cProduto,.F.) )
	Help(" ",1,cCampo)
	lRetorno	 := .F.
EndIf

Return(lRetorno)

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA650CamposЁ Autor ЁPatricia A. Salomao    Ё Data Ё14.03.2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁInicializa alguns campos baseando-se no SB1                 Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function a650Campos()
M->C2_LOCAL := SB1->B1_LOCPAD
M->C2_UM    := SB1->B1_UM
M->C2_SEGUM := SB1->B1_SEGUM
Return .T.

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁaVldGrade Ё Autor ЁPatricia A. Salomao    Ё Data Ё03/2001   Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁValida o produto e os valores informados na Grade.          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1 - Programa                                            Ё╠╠
╠╠Ё          ЁExpC2 - Nome do Campo                                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁExpL1: Logico                                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMata650 / Mata250                                           Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function aVldGrade(cProg, cCampo)
Local lRet  	:=.T.
Local nColuna	:= aScan(aHeader,{|x| AllTrim(x[2]) == AllTrim(Substr(Readvar(),4))})
Local cProdGrd	:= ""
Local cMascara	:= GetMv("MV_MASCGRD")
Local nTamRef	:= Val(Substr(cMascara,1,2))
Local nTamLin   := Val(Substr(cMascara,4,2))
Local nTamCol   := Val(Substr(cMascara,7,2))
Local aAreaSC2  := ''
Local lAchou    := .F.
Local cNum, cItem, cSeq
Local lReferencia := .F.

cProg    := If(cProg  == NIL,'',cProg)
cCampo   := If(cCampo == NIL,'',cCampo)
cProdGrd := Substr(SB4->B4_COD,1,nTamRef)+acols[n][1]+aHeader[nColuna][1]

If cProg  == "A250"
	lReferencia :=MatGrdPrrf(M->D3_COD)
ElseIf cProg == "A650"
	lReferencia :=MatGrdPrrf(M->C2_PRODUTO)
EndIf	
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se o Produto Existe                                           Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SB1")
dbSetOrder(1)
If ( !dbSeek(xFilial("SB1")+cProdGrd,.F.) )
	HELP(" ",1,"NAOEXISTE")
	lRet := .F.	                          	
EndIf

If ! (SB1->B1_GRADE == "S")
	Help(" ",1,"A650NGRADE",, cProdGrd, 3, 0)
	Return(.F.)
Endif	

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё No Apontamento da Producao, verificar se o produto informado na grade, Ё
//Ё faz parte da Ordem de Producao informada.                              Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If lRet .and. cProg == "A250" .and. lReferencia
	dbSelectArea("SC2")
	aAreaSC2 := SC2->(GetArea())
	dbSetOrder(6)
	dbSeek(xFilial()+Alltrim(M->D3_OP)+cProdGrd)
	cNum  := SC2->C2_NUM
	cItem := SC2->C2_ITEM
	cSeq  := SC2->C2_SEQUEN
	lAchou := .F.
	Do While !Eof() .And. C2_FILIAL+C2_NUM+C2_ITEM+C2_SEQUEN == xFilial()+cNum+cItem+cSeq
		If SC2->C2_PRODUTO == cProdGrd .And. !Empty(SC2->C2_DATRF)
			Help(" ",1, "A250JAPROD")
			lRet := .F.
			Exit
		EndIf
		lAchou := .T.
		dbSkip()
	EndDo
	If !lAchou
		Help(" ",1, "A250NOGRD")
		lRet := .F.
	EndIf
	If cCampo =="M->D3_PARCTOT"
		If !Alltrim(&(Readvar())) $"PT"
			Help(" ",1, "A250PARTOT")
			lRet := .F.
		EndIF
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁNao deixar alterar na grade, a qtde. da 2a. UM, se o produto nao tiver 2a. UM Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cCampo =="M->D3_QTSEGUM" .And. Empty(SB1->B1_SEGUM)
		Help(" ",1,"A250NO2UM")
		lRet := .F.
	EndIf
	RestArea(aAreaSC2)
EndIf

If lRet .and. cProg == "A650" .and. lReferencia
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//ЁNao deixar alterar na grade, a qtde. da 2a. UM, se o produto nao tiver 2a. UM Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If cCampo =="M->C2_QTSEGUM" .And. Empty(SB1->B1_SEGUM)
		Help(" ",1,"A250NO2UM")
		lRet := .F.
	Endif
EndIF

Return(lRet)

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁaQtdGrade Ё Autor Ё Patricia A. Salomao   Ё Data Ё03/2001   Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁSe a Grade estiver ativa, efetua a entrada de dados,na colu-Ё╠╠
╠╠Ё          Ёna de Quantidade.                                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpL1 - Se Mostra ou Nao a GetDados                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁSempre .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMata650 / Mata250                                           Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function aQtdGrade(lMostra)

Local nQtdInf	:= 0
Local nOpcA 	:= 0
Local nCntFor	:= 0
Local nColuna 	:= 0
Local nLinha	:= 0
Local cProdRef
Local lQtdPro, lQtdPro2,nColQtd, nColQtd2
Local aAltGr	:= {}
Local aBackRot	:= aClone(aRotina)
Local cCpoQtd, cCpoQtd2	
Local oDlg,oGet

Local nAux 		:=1
Local lRet, lCond := .T.
Local nQuant := 0
Local aGrade := {}
Local cCampo := Readvar()
Local lGrade := GetMV("MV_GRADE")
Local cProg  := ''
Local l250650:= .F.
Local nCols      := 0

lMostra := IF(lMostra == NIL,.T.,lMostra)

//-- Verifica se a funcao foi chamada do MATA250 ou do MATA650
If Type('l250')=='L' .And. l250
	cProg   := 'A250'
	l250650 := .T.
ElseIf Type('l650')=='L' .And. l650
	cProg   := 'A650'
	l250650 := .T.
EndIf

If cProg == "A650"
	cProdRef := M->C2_PRODUTO
	lQtdPro	 := If("C2_QUANT"$ReadVar(),.T.,.F.)
	lQtdPro2 := If("C2_QTSEGUM"$ReadVar(),.T.,.F.)    	
	cCpoQtd  := "M->C2_QUANT"
	cCpoQtd2 := "M->C2_QTSEGUM"
	nColQtd  := If(lQtdPro,1,5)
	nColQtd2 := If(nColQtd==1,5,1)			
ElseIF cProg == "A250"
	If Empty(M->D3_OP)
		Help(" ",1,"A650NOP")
		Return .F.
	EndIf
	cProdRef := M->D3_COD
	lQtdPro	 := If("D3_QUANT"$ReadVar(),.T.,.F.)
	lQtdPro2 := If("D3_QTSEGUM"$ReadVar(),.T.,.F.)
	cCpoQtd  := "M->D3_QUANT"	
	cCpoQtd2 := "M->D3_QTSEGUM"	
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Verifica se a funcao foi chamada pelo campo "Parcial/Total"  Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	If !lQtdPro .And. !lQtdPro2
		nColQtd  := 1
		nColQtd2 := 5
	Else
		nColQtd  := If(lQtdPro,1,5)
		nColQtd2 := If(nColQtd==1,5,1)
	EndIf	
	
EndIf
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Muda o valor do aRotina para nao incluir linha na GetDados   Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aRotina[3,4] := 6

//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Verifica se a grade esta ativa                       Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
If ( lGrade ) .And. l250650
	
	If ( MatGrdPrrf(@cProdRef) )
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Posiciona  no SB4 para validacao da funcao aVldGrade()                 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		dbSelectArea("SB4")
		dbSetOrder(1)
		dbSeek(xFilial("SB4")+cProdRef)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Monta aHeader e aCols                                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aHeader	:= Aclone(aHeadGrade[nAux])
		aHeader[1] 	:=  {" ","R","@!",4,0,"","","C","","V"}
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Montagem do Array dos campos  que podem ser alterados                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		For nCntFor := 2 To Len(aHeadgrade[nAux])
			aadd(aAltGr,aHeader[nCntFor][2])
			If cProg == "A250"
				aHeader[nCntFor][6] :=  If(cCampo=='M->D3_QTSEGUM',"aVldGrade('A250','M->D3_QTSEGUM')" ,"aVldGrade('A250')")
			Else
				aHeader[nCntFor][6] :=  If(cCampo=='M->C2_QTSEGUM',"aVldGrade('A650','M->C2_QTSEGUM')" ,"aVldGrade('A650')")
			EndIf
		Next nCntFor
		
		aGrade := Aclone(aCols)
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Verifica se ja carregou ou nao a grade                                 Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If cProg == "A250"
			lFirst := If(Len(aCols)>0 ,.F.,.T.)        				
		EndIf
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Montagem do ACols da Grade                                             Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		aCols:= {}
		For nLinha :=  1 To Len(aColsGrade[nAux])
			aadd(acols,Array(Len(aHeader)))
			For nColuna := 1 To Len(aHeader)
				If  ( nColuna ==  1 )
					acols[nLinha][nColuna] := aColsGrade[nAux][nLinha][nColuna]
				Else
					acols[nLinha][nColuna] := aColsGrade[nAux][nLinha][nColuna][nColQtd]
				EndIf
			Next nColuna
		Next nLinha
		
		//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁNo Apontamento da Producao,carrega a coluna de quantidade da grade,de acordo com a variavel lFirst:Ё
		//ЁSe True : Traz na Coluna de Quantidade os valores de C2_QUANT-C2_QUJE-C2_PERDA                     Ё
		//ЁSe False: Traz na Coluna de Quantidade, as qtdes. digitadas.                                       Ё
		//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды   	
		If cProg == "A250"
			a250Insere(ReadVar(),lFirst)
		EndIf   					
		If lMostra
			DEFINE MSDIALOG oDlg TITLE cCadastro FROM 10,10 TO 25,68   OF oMainWnd
			
			oGet:=MSGetDados():New(20,12,103,223,3,"AllwaysTrue","AllwaysTrue",,.F.,aAltGr,1)
			ACTIVATE MSDIALOG oDlg ON INIT EnchoiceBar(oDlg,{||nOpcA:=1,oDlg:End()},{||oDlg:End()})
		Else
			nOpca := 1
		Endif
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//ЁEfetua a Atualizacao no aColsGrade  Corrente                            Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		If ( nOpcA == 1 )
			For nLinha :=  1 To Len(aColsGrade[nAux])
				For nColuna := 2 To Len(aHeader)
					cProd  := cProdRef+acols[nLinha][1]+aHeader[nColuna][1]						
					dbSelectArea("SB1")
					dbSetOrder(1)
					dbSeek(xFilial()+cProd)					
					aColsGrade[nAux][nLinha][nColuna][nColQtd ] := acols[nLinha][nColuna]
					Do Case
					Case ( nColQtd2 == 1 )
						aColsGrade[nAux][nLinha][nColuna][nColQtd2] := ConvUm(AllTrim(cProd),aColsGrade[nAux][nLinha][nColuna][nColQtd2],aCols[nLinha][nColuna],1)							
						aCols[nlinha][nColuna] := If(SB1->B1_CONV!=0,aColsGrade[nAux][nLinha][nColuna][nColQtd2],aCols[nlinha][nColuna])							
					Case ( nColQtd2 == 5 )
						aColsGrade[nAux][nLinha][nColuna][nColQtd2] := ConvUm(AllTrim(cProd),aCols[nLinha][nColuna],aColsGrade[nAux][nLinha][nColuna][nColQtd2],2)
						aCols[nlinha][nColuna] := If(SB1->B1_CONV!=0,aColsGrade[nAux][nLinha][nColuna][nColQtd2],aCols[nlinha][nColuna])							
					EndCase										
				Next nColuna
			Next nLinha
			
			If cProg == "A650"
				For nLinha:=1 to Len(acols)
					For nCols:=2 to Len(aHeader)
						
						lCond:= aColsGrade[nAux][nLinha][nCols][1] != 0
						If lCond
							cProdRef	:= M->C2_PRODUTO
							lRet:=MatGrdPrrf(@cProdRef)
							cProdRef += acols[nLinha][1]+aHeader[nCols][1]		
							SeleOpc(1, "A650", cProdRef, lRet)
							//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
							//Ё Adiciona o opcional do produto no aCols                                Ё
							//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
							If !Empty(M->C2_OPC)
								//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё A Qtd. do Opcional no array sera sempre gravada na 1a. UM              Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды							
								If Readvar() == cCpoQtd
									nQuant   := aColsGrade[nAux][nLinha][nCols][1]						    					
								ElseIf Readvar() == cCpoQtd2
									nQuant   := ConvUm(cProdRef,0,aColsGrade[nAux][nLinha][nCols][5],1)
								EndIf	
								//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Se o Prod. tiver opcional,acrescenta no array da Grade, o Opcional     Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды												
								nTamGrd := Len(aColsGrade[nAux][nLinha][nCols])
								//
								//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
								//Ё Verificar se ja acrescentou um elemento no array                       Ё
								//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды												
								If Len(aColsGrade[nAux][nLinha][nCols]) == 5
									AAdd(aColsGrade[nAux][nLinha][nCols],M->C2_OPC)						
								Else
									aColsGrade[nAux][nLinha][nCols][6] := M->C2_OPC
								EndIf	
								M->C2_OPC := " "
							EndIf	
						EndIf
					Next nCols
				Next nLinha
			ElseIf cProg  == "A250"
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//ЁSe for alterada a quantidade dos Itens, atualizar o tipo da Baixa dos mesmos (Parcial/Total)Ё
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды	         		
				If Len(aColsPT) > 0 .And. lMostra
					aParcTot("A250",.F.)
				EndIf	
			EndIf
		Else
			aCols := AClone(aGrade)
		EndIf
		
		If (ReadVar()==cCpoQtd .Or. ReadVar()==cCpoQtd2)
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Soma as quantidades digitadas na getdados da grade   Ё
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддды
			nQtdInf := MatGrdSoma(nAux,&(Readvar()),nColQtd)
			//зддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Atualiza as quantidades                               Ё
			//юддддддддддддддддддддддддддддддддддддддддддддддддддддддды
			If ( lQtdPro )
				&(cCpoQtd)  := nQtdInf  //Quant. 1a UM
				nQtdInf  := 0
				nQtdInf  := MatGrdSoma(nAux,nQtdInf,5)
				&(cCpoQtd2) := nQtdInf  // Quant. 2a UM
			EndIf
			If ( lQtdPro2 )
				&(cCpoQtd2) := nQtdInf  //Quant. 2a UM
				nQtdInf  := 0
				nQtdInf  := MatGrdSoma(nAux,nQtdInf,1)
				&(cCpoQtd)  := nQtdInf  //Quant. 1a UM
			EndIf
		EndIf	
	EndIf
EndIf

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura aRotina Original                                    Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
aRotina:=aClone(aBackRot)
Return( .T. )

/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁMa650GraGrЁ Autor ЁPatricia A. Salomao    Ё Data Ё03/2001   Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁGrava os Itens Digitados na Grade                           Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁExpC1 - Alias do Arquivo                                    Ё╠╠
╠╠Ё          ЁExpC2 - Nome do Programa                                    Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   ЁSempre .T.                                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       ЁMata650 / Mata250                                           Ё╠╠
╠╠цддддддддддедддддддддддддддбдддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё   DATA   Ё Programador   ЁManutencao Efetuada                         Ё╠╠
╠╠цддддддддддедддддддддддддддедддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё          Ё               Ё                                            Ё╠╠
╠╠юддддддддддадддддддддддддддадддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/

Function Ma650GraGr(cAlias,cProg)
Local aArray:={}
Local nCols :=0
Local nLinha:=0
Local cItemGrd := Replicate("0",Len(SC2->C2_ITEMGRD))
LOCAL bCampo 	:= {|nCPO| Field(nCPO) }
Local aArea
Local cProdRef
Local aAreaSC2 := SC2->(GetArea())
Local cOpc := " "
Local nAux := 1
Local nPerda  := 0
Local nQuant  := 0
Local nQuant2UM := 0
Local nRegSC2 := 0
Local nRegSD3 := 0
Local i          := 0

dbSelectArea(cAlias)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Salva a integridade dos campos de Bancos de Dados            Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
FOR i := 1 TO FCount()
	M->&(EVAL(bCampo,i)) := FieldGet(i)
NEXT i

dbSelectArea(cAlias)
aArea :=GetArea()

For nLinha:=1 to Len(acols)	
	For nCols:=2 to Len(aHeader)                                      	
		nTamGrd := Len(aCols[nlinha])	
		If cProg == "A250"
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Se for apontamento, considerar a quantidade de Perda         Ё		
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
			If Len(aQtdPerda) > 0
				nPerda := aQtdPerda[nLinha][nCols]
			EndIf		
		EndIf	
		If aColsGrade[nAux][nLinha][nCols][1] + nPerda > 0
			cProdRef := If(cProg =="A650",M->C2_PRODUTO, M->D3_COD)	
			MatGrdPrrf(@cProdRef)		
			cProdRef += aColsGrade[nAux][nLinha][1]+;
				aHeadGrade[nAux][nCols][1]
			
			nQuant    := aColsGrade[nAux][nLinha][nCols][1]
			nQuant2UM := aColsGrade[nAux][nLinha][nCols][5]
			cOpc      := " "
			
			//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
			//Ё Verifica se foi incluido opcionais para este item            Ё		
			//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
			If Len(aColsGrade[nAux][nLinha][nCols])>5
				cOpc := aColsGrade[nAux][nLinha][nCols][6]
			EndIf
			If cProg == "A650"
				cItemGrd := Soma1(cItemGrd,Len(SC2->C2_ITEMGRD))
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Altera os dados do 1o Item (Produto Referencia) e inclui os  Ё		
				//Ё outros Itens da Grade                                        Ё				
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды		
				nRegSC2 += 1			
				RecLock(cAlias,If(nRegSC2 == 1,.F.,.T.))		
			Elseif cProg == "A250"         		
				nRegSD3 += 1
				dbSelectArea("SC2")
				dbSetOrder(6)
				SC2->(dbSeek(xFilial()+Alltrim(M->D3_OP)+cProdRef))
				cItemGrd := SC2->C2_ITEMGRD	
				dbSetOrder(aAreaSC2[2])
				//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
				//Ё Altera os dados do 1o Item (Produto Referencia) e inclui os  Ё		
				//Ё outros Itens da Grade                                        Ё				
				//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды				
				RecLock(cAlias,If(nRegSD3 == 1,.F.,.T.))		
			EndIf		          							
			For i := 1 TO FCount()
				FieldPut(i,M->&(EVAL(bCampo,i)))
			Next i
			
			If cProg == "A650"
				Replace C2_PRODUTO With cProdRef
				Replace C2_QUANT   With nQuant
				Replace C2_ITEMGRD With cItemGrd
				Replace C2_GRADE   With "S"
				Replace C2_QTSEGUM With ConvUM(SC2->C2_PRODUTO,nQuant,nQuant2UM,2)
				Replace C2_OPC     With cOpc
				a650DatPri("M->C2_DATPRI",M->C2_DATPRI,cProdRef,nQuant,.T.)  		
				a650DatPrf("M->C2_DATPRF",M->C2_DATPRF,cProdRef,nQuant,.T.)  				
				Replace C2_DATPRI  With M->C2_DATPRI                     		
				Replace C2_DATPRF  With M->C2_DATPRF  			  		
				If Len(aColsRot) > 0
					Replace C2_ROTEIRO With aColsRot[nLinha][nCols]
				EndIf				    				
			EndIf	
			If cProg =="A250"
				Replace D3_COD     With cProdRef
				Replace D3_QUANT   With nQuant
				Replace D3_QTSEGUM With ConvUM(SC2->C2_PRODUTO,nQuant,nQuant2UM,2)
				Replace D3_OP      With alltrim(M->D3_OP)+cItemGrd
				If Len(aColsPT) > 0
					Replace D3_PARCTOT With If(aColsPT[nLinha][nCols]$"PT",aColsPT[nLinha][nCols],If(aColsPT[nLinha][nCols]$"X","T"," "))
				EndIf
				If Len(aQtdPerda) > 0
					Replace D3_PERDA   With aQtdPerda[nLinha][nCols]
				EndIf					
			EndIf
		EndIf
	Next nCols
Next nLinha
RestArea(aArea)
Return
/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650VisualЁ Autor Ё Edson Maricate        Ё Data Ё13-06-2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁPrograma de visualizacao de OPs                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁA650Visual(ExpC1,ExpN1,ExpC2)                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650View(cAlias,nReg,nOpcx)

Local aBut650 		:= If(IntePms(),;
	{{'PROJETPMS',{||Eval(bPmsDlgOP)},STR0071 }}, {}) //"Gerenciamento de Projetos"

If IntQIP(SC2->C2_PRODUTO) //Define a integracao com o QIP
	Aadd(aBut650,{"RELATORIO",{|| QP650HIS(SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN,SC2->C2_CHAVE)},STR0087}) //"ObservaГЦo da Ordem de ProduГЦo..."
EndIf
AAdd(aBut650,{ "ORDEM", {|| A650Track() },"System Tracker"} )

PRIVATE aRatAFM		:= {}					//Variavel utilizada pela Funcao PMSDLGOP - Gerenc. Projetos
PRIVATE bPMSDlgOP	:= {||PmsDlgOP(2,M->C2_NUM,M->C2_ITEM,M->C2_SEQUEN)} // Chamada da Dialog de Gerenc. Projetos

Return AxVisual(cAlias,nReg,nOpcx,,,,,aBut650)


/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA650AtEmpn Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё04/06/02 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁAtualiza o campo B2_QEMPN                                   Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650AtEmpn(nQuant,cSinal)
LOCAL nMutiplic:=If(cSinal=="+",1,-1)
DEFAULT cSinal := "+"
RecLock("SB2",.F.)

Replace B2_QEMPN  With Max(0, B2_QEMPN  + (nQuant*nMutiplic))
Replace B2_QEMPN2 With Max(0, B2_QEMPN2 + (ConvUM(SB2->B2_COD,nQuant,0,2)*nMutiplic))

MsUnlock()
RETURN NIL

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁQP650GrvStЁ Autor Ё Marcelo Pimentel      Ё Data Ё28/08/2001Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o ЁRotina de gravacao do Controle de Skip-Teste                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   ЁQP650GrvSt()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650 - Utilizada para o modulo Inspecao de Processos    Ё╠╠
╠╠Ё          Ё atraves do Parametro MV_QIPMAT = "S" e cModulo = "QIP"     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Static function QP650GrvSt()
Local dDtValid
Local cMvSkTes	:= GetMv("MV_QPSKPTE")
Local cGrupo	:= ''
Local nOrdQPA	:= QPA->(IndexOrd())
Local aEnsInsp	:= {}
Local cRevi		:= ''
Local cFatApr	:= ''
Local cFatApC	:= ''
Local cFatRep	:= ''
Local nDias		:= 0
Local aAreaQPA	:= QPA->(GetArea())
Local aAreaQPH	:= QPH->(GetArea())
Local aAreaQPN	:= QPN->(GetArea())
Local aAreaQPI	:= QPI->(GetArea())
Local aAreaQPO	:= QPO->(GetArea())
Local aAreaSC2	:= SC2->(GetArea())
Local aAreaQP6	:= QP6->(GetArea())
Local nI		:= 0
Local lExisAlEsp:= Iif(QP6->(FieldPos("QP6_ALTESP")) > 0,.T.,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Retorna a revisao vigente do produto.                        Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
cRevi := QA_UltRvQ(SC2->C2_PRODUTO,,.F.)

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Define os Fatores Aprovado, Aprovado Condicional e Reprovado Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
QPD->(dbSetOrder(1))
If QPD->(dbSeek(xFilial("QPD")))
	While !QPD->(Eof())
		If QPD->QPD_CATEG == "1"
			cFatApr := Iif(Empty(cFatApr),QPD->QPD_CODFAT,cFatApr)
		ElseIf QPD->QPD_CATEG == "2"
			cFatApC := Iif(Empty(cFatApC),QPD->QPD_CODFAT,cFatApC)
		ElseIf QPD->QPD_CATEG == "3"
			cFatRep := Iif(Empty(cFatRep),QPD->QPD_CODFAT,cFatRep)
		EndIf
		QPD->(dbSkip())
	EndDo
EndIf

//здддддддддддддддддддддддддддддддддд©
//Ё Grava os controles do Skip-Teste Ё
//юдддддддддддддддддддддддддддддддддды
// Parametro que indica 1-> Todas as Producoes, 2-> Somente as Inspecionadas
If cMvSkTes == "1" .Or. (cMvSkTes == "2" .And. SC2->C2_VERIFI <> 2)	// INSPECIONOU a Producao
	
	// Identifica o Grupo do Produto
	QPA->(dbSetOrder(2))
	If QPA->(dbSeek(xFilial("QPA")+SC2->C2_PRODUTO))
		cGrupo := QPA->QPA_GRUPO
	EndIf
	QPA->(dbSetOrder(nOrdQPA))
	
	//здддддддддддддддддддддд©
	//Ё Calcula o Skip-Teste Ё
	//юдддддддддддддддддддддды
	aEnsInsp := QP650SkTe(SC2->C2_PRODUTO,cRevi,cFatRep)
	
	// Atualiza os controles do skip-teste
	For nI := 1 to Len(aEnsInsp)
		
		// Verifica se h═ skip-teste individual definido
		QPH->(dbSetOrder(2))
		If QPH->(dbSeek(xFilial("QPH")+SC2->C2_PRODUTO+aEnsInsp[nI,1]))
			
			// Atualiza o controle do skip-teste individual
			QPN->(dbSetOrder(2))
			If !QPN->(dbSeek(xFilial("QPN")+SC2->C2_PRODUTO+aEnsInsp[nI,1]))
				RecLock("QPN", .T.)
				QPN->QPN_FILIAL	:= xFilial("QPN")
				QPN->QPN_PRODUT	:= SC2->C2_PRODUTO
				QPN->QPN_ENSAIO	:= aEnsInsp[nI,1]
				QPN->QPN_CODREC	:= SC2->C2_ROTEIRO
				QPN->QPN_CONTAD	:= 1
			Else
				RecLock("QPN", .F.)
				QPN->QPN_CONTAD := aEnsInsp[nI,2]
			EndIf
			MsUnLock()
			If aEnsInsp[nI,2] == 1	// Indica que inspecionou
				// Atualiza o historico do skip-teste individual
				RecLock("QPY", .T.)
				QPY->QPY_FILIAL	:= xFilial("QPY")
				QPY->QPY_PRODUT	:= SC2->C2_PRODUTO
				QPY->QPY_CODREC	:= SC2->C2_ROTEIRO
				QPY->QPY_DTENTR	:= SC2->C2_EMISSAO
				QPY->QPY_ENSAIO	:= aEnsInsp[nI,1]
				QPY->QPY_LOTE	:= SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
				MsUnLock()
			EndIf

			If ExistBlock("QPGRVST")
 				ExecBlock("QPGRVST",.F.,.F.,{ SC2->C2_PRODUTO,cRevi,SC2->C2_ROTEIRO,aEnsInsp[nI,1]})
 				//produto,revisao,roteiro,ensaio
			Endif
		
		Else
			// Verifica se h═ skip-teste por grupo definido
			QPI->(dbSetOrder(2))
			If QPI->(dbSeek(xFilial("QPI")+cGrupo+aEnsInsp[nI,1]))
				// Atualiza o controle do skip-teste por Grupo
				QPO->(dbSetOrder(2))
				If !QPO->(dbSeek(xFilial("QPO")+cGrupo+aEnsInsp[nI,1]))
					RecLock("QPO", .T.)
					QPO->QPO_FILIAL	:= xFilial("QPO")
					QPO->QPO_GRUPO 	:= cGrupo
					QPO->QPO_ENSAIO	:= aEnsInsp[nI,1]
					QPO->QPO_DTENTR	:= SC2->C2_EMISSAO
					QPO->QPO_CODREC	:= SC2->C2_ROTEIRO
					QPO->QPO_CONTAD	:= 1
				Else
					RecLock("QPO", .F.)
					QPO->QPO_CONTAD := aEnsInsp[nI,2]
				EndIf
				
				// Guarda a Data Producao que inspecionou o ensaio
				If QPO->QPO_CONTAD == 1
					QPO->QPO_DTENTR	:= SC2->C2_EMISSAO
				EndIf
				MsUnLock()
				
				If aEnsInsp[nI,2] == 1	// Indica que inspecionou
					// Atualiza o historico do skip-teste por Grupo
					RecLock("QPZ", .T.)
					QPZ->QPZ_FILIAL	:= xFilial("QPZ")
					QPZ->QPZ_GRUPO 	:= cGrupo
					QPZ->QPZ_DTENTR	:= SC2->C2_EMISSAO
					QPZ->QPZ_ENSAIO	:= aEnsInsp[nI,1]
					QPZ->QPZ_PRODUT	:= SC2->C2_EMISSAO
					QPZ->QPZ_CODREC	:= SC2->C2_ROTEIRO
					MsUnLock()
				EndIf

				If ExistBlock("QPGRVST")
 					ExecBlock("QPGRVST",.F.,.F.,{cGrupo,cRevi,SC2->C2_ROTEIRO,aEnsInsp[nI,1]})
 					//grupo,revisao,roteiro,ensaio
				Endif

			EndIf
		EndIf
	Next nI
EndIf

If SC2->C2_VERIFI == 2	// CERTIFICOU A ORDEM DE PRODUCAO
	
	//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Grava o Laudo da Ordem da Producao  na certificacao     Ё
	//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	// Localiza Produto/Revisao p/ calc. Data Validade do Laudo
	QP6->(dbSetOrder(1))
	QP6->(dbSeek(xFilial("QP6")+SC2->C2_PRODUTO+Inverte(cRevi)))
	
	If QP6->QP6_SHLF <> 0
		// Verifica a unidade do shelf-life
		nDias 	:= Iif(QP6->QP6_TPSLIF=="1",QP6->QP6_SHLF,;	// Dia
			Iif(QP6->QP6_TPSLIF=="2",QP6->QP6_SHLF*30,;			// Mes
			Iif(QP6->QP6_TPSLIF=="3",QP6->QP6_SHLF/24,;			// Horas
			Iif(QP6->QP6_TPSLIF=="4",QP6->QP6_SHLF*365,0))))	// Ano
		
		// Calcula a Data Validade do Laudo
		dDtValid := Iif(nDias<>0,dDataBase+nDias,Ctod("  /  /  "))
	EndIf
	
	RecLock("QPL",.t.)
	QPL->QPL_FILIAL		:= xFilial("QPL")
	QPL->QPL_OP 		:= SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN
	QPL->QPL_PRODUT		:= SC2->C2_PRODUTO
	QPL->QPL_DTENTR		:= SC2->C2_EMISSAO
	QPL->QPL_LABOR		:= Space(TamSX3("QPL_LABOR")[1])
	QPL->QPL_OPERAC		:= Space(TamSX3("QPL_OPERAC")[1])
	QPL->QPL_TAMLOT		:= Str(SC2->C2_QUANT)
	QPL->QPL_DTENLA		:= dDataBase
	QPL->QPL_HRENLA		:= Left(Time(),5)
	QPL->QPL_LAUDO		:= cFatApr
	QPL->QPL_DTLAUD		:= dDataBase
	QPL->QPL_HRLAUD		:= Left(time(),5)
	QPL->QPL_DTVAL		:= dDtValid
	QPL->QPL_JUSTLA		:= GetMv("MV_QPJUSLA")	// Justificativa do Laudo para Ordem de Producao certificada
	QPL->QPL_DTDILA		:= dDataBase
	QPL->QPL_HRDILA		:= Left(Time(),5)
	MsUnLock()
EndIf

//Efetua a gravacao do campo "ALTESP" - Flag para identificar qdo for a primeira producao da nova revisao.
If lExisAlEsp
	QP6->(dbSetOrder(1))
	If QP6->(dbSeek(xFilial("QP6")+SC2->C2_PRODUTO+Inverte(cRevi)))
		Reclock("QP6",.F.)
		If lAltEsp
			QP6->QP6_ALTESP	:= "S"
		Else
			QP6->QP6_ALTESP	:= "N"
		EndIf
		MsUnLock()
	EndIf
EndIf

RestArea(aAreaQPA)
RestArea(aAreaQPH)
RestArea(aAreaQPN)
RestArea(aAreaQPI)
RestArea(aAreaQPO)
RestArea(aAreaSC2)
RestArea(aAreaQP6)

Return(.T.)
/*/
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤┘o    ЁQP650SkTe Ё Autor Ё Marcelo Pimentel      Ё Data Ё 23.08.01 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Calcula o Skip-Teste de uma Producao                       Ё╠╠
╠╠Ё          Ё As consistencias realizadas para verificar se aplica o     Ё╠╠
╠╠Ё          Ё Skip-Lote valem tbem para o Skip-Teste.                    Ё╠╠
╠╠Ё          Ё Forca inspecao de todos os ensaios:1a.producao apos altera-Ё╠╠
╠╠Ё          Ё cao especificao, producao anterior recusada (mesmas regras Ё╠╠
╠╠Ё          Ё do Skip-Lote).                                             Ё╠╠
╠╠Ё          Ё Se o parametro para calcular o skip-teste somente para as  Ё╠╠
╠╠Ё          Ё producoes inspecionadas estiver ligado, nao calcula o skip-Ё╠╠
╠╠Ё          Ё teste se a producao for certificada pelo skip-lote.Neste   Ё╠╠
╠╠Ё          Ё Caso, na impressao da ficha de uso, os ensaios aparecerao  Ё╠╠
╠╠Ё          Ё como certificados tbem.                                    Ё╠╠
╠╠Ё          Ё Se o calculo para skip-teste for para todas as producoes,  Ё╠╠
╠╠Ё          Ё verifica o skip-teste mesmo que a producao seja certificadaЁ╠╠
╠╠Ё          Ё pelo skip-lote, porque pode ter ensaio a inspecionar, e se Ё╠╠
╠╠Ё          Ё o parametro MV_QPCERPR ="N" (nao certifica a producao se   Ё╠╠
╠╠Ё          Ё se tiver ensaio a inspecionar pelo skip-teste), forca a    Ё╠╠
╠╠Ё          Ё a inspecao da producao.                                    Ё╠╠
╠╠Ё          Ё Para gravar os controles de skip-teste(atualizar os conta- Ё╠╠
╠╠Ё          Ё dores),verifica o parametro MV_QPSKPTE, para atualizar to- Ё╠╠
╠╠Ё          Ё das as producoes ou somente as inspecionadas (verificacao  Ё╠╠
╠╠Ё          Ё na gravacao da producao).                                  Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A200SkTe(ExpC1,ExpC2,ExpC3)                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Codigo do Produto                                  Ё╠╠
╠╠Ё          Ё ExpC2 = Revisao do Produto                                 Ё╠╠
╠╠Ё          Ё ExpC3 = Fator de reprovacao do laudo                       Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
/*/
Function QP650SkTe(cProduto,cRevi,cFatRep)
Local aEns		:= {}
Local aEnsPro	:= {}
Local nI		:= 0
Local nCt		:= 0
Local nCtRecu	:= 0
Local nPrdInsp	:= 0
Local aAreaQP6	:= QP6->(GetArea())
Local aAreaQPH	:= QPH->(GetArea())
Local aAreaQPN	:= QPN->(GetArea())
Local aAreaSC2	:= SC2->(GetArea())
Local cLabor	:= CriaVar("QPL_LABOR",.F.)

// Identifica no. Producoes a inspecionar referente ao fator de reprovacao
dbSelectArea("QPD")
dbSetOrder(1)
dbSeek(xFilial("QPD")+cFatRep)
nPrdInsp := QPD_ENTINS

//зддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Identifica os ensaios do Produto                                  Ё
//юддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
// Ensaios mensuraveis
dbSelectArea("QP7")
dbSetOrder(1)
dbSeek(xFilial("QP7")+cProduto+cRevi)
While !QP7->(Eof()) .And. QP7->QP7_FILIAL+QP7->QP7_PRODUT+QP7->QP7_REVI == xFilial("QP7")+cProduto+cRevi
	Aadd(aEnsPro,QP7->QP7_ENSAIO)	// Ensaio, sk-teste indiv. e por grupo
	dbSkip()
EndDo

// Ensaios Texto
dbSelectArea("QP8")
dbSetOrder(1)
dbSeek(xFilial("QP8")+cProduto+cRevi)
While !QP8->(Eof()) .And. QP8->QP8_FILIAL+QP8->QP8_PRODUT+QP8->QP8_REVI == xFilial("QP8")+cProduto+cRevi
	Aadd(aEnsPro,QP8->QP8_ENSAIO)	// Ensaio, sk-teste indiv. e por grupo
	dbSkip()
EndDo

// Verifica se tem Producao anterior recusada
nCt  := 0
nCtRecu := 1
dbSelectArea("SC2")
dbSetOrder(7)       	// Produto
dbSeek( xFilial("SC2")+cProduto )	// Ultima producao do Produto
While ! Eof() .And. SC2->C2_FILIAL+SC2->C2_PRODUTO == xFilial("SC2")+cProduto
	
	// Localiza Laudo da Producao
	dbSelectArea("QPL")
	dbSetOrder(1)
	If dbSeek(xFilial("QPL")+SC2->C2_NUM+SC2->C2_ITEM+SC2->C2_SEQUEN+Space(02)+cLabor )
		// Verifica se o Fator do Laudo tem no. producoes a inspecionar
		dbSelectArea("QPD")
		dbSetOrder(1)
		dbSeek(xFilial("QPD")+QPL->QPL_LAUDO)
		If QPD->QPD_ENTINS <> 0 .And. nCt <= QPD->QPD_ENTINS-1
			nCtRecu := 2
			Exit
		EndIf
	EndIf
	
	nCt++
	If nCt > nPrdInsp
		Exit
	EndIf
	dbSelectArea("SC2")
	dbSkip()
EndDo

// Calcula o Skip-Teste
For nI := 1 to Len(aEnsPro)
	// Verifica se h═ skip-teste individual definido
	dbSelectArea("QPH")
	dbSetOrder(2)	//Produto + Ensaio
	If dbSeek(xFilial("QPH")+cProduto+aEnsPro[nI])
		
		// Producao anterior com laudo reprovado, inspeciona o ensaio
		If nCtRecu <> 1
			Aadd(aEns, {aEnsPro[nI],1})
		Else
			// Verifica se o ensaio dever═ ser inspecionado
			dbSelectArea("QPN")
			dbSetOrder(2)
			If !dbSeek(xFilial("QPN")+cProduto+aEnsPro[nI])
				Aadd(aEns, {aEnsPro[nI],1})
			Else
				If QPN->QPN_CONTAD+1 > QPH->QPH_SKPTES
					Aadd(aEns, {aEnsPro[nI],1})
				Else
					Aadd(aEns, {aEnsPro[nI],QPN->QPN_CONTAD+1})
				EndIf
			EndIf
		EndIf
	EndIf
Next nI

RestArea(aAreaQP6)
RestArea(aAreaQPH)
RestArea(aAreaQPN)
RestArea(aAreaSC2)
Return(aEns)

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤ao    ЁA650Graph Ё Autor ЁPatricia A. Salomao    Ё Data Ё 14/01/02 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Grafico de Apontamento da Ordem de Producao                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё A650Graph()                                                Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ                                                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё MATA650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650Graph()

Local nTotBaixa :=0,nTotAbert:=0,nTotPerda:=0
Local cNumOP    := " "
Local aAreaSC2,oGraph,oDlg
Local aObjects  :={},aPosObj  :={}
Local aSize     :=MsAdvSize(.F.)
Local aInfo     :={aSize[1],aSize[2],aSize[3],aSize[4],3,3}
Local lEncerrada := .F.
// Array com objetos utilizados
AADD(aObjects,{100,015,.T.,.F.,.F.})
AADD(aObjects,{100,100,.T.,.T.,.T.})
AADD(aObjects,{100,015,.T.,.F.,.F.})
aPosObj:=MsObjSize(aInfo,aObjects)

If !Empty(C2_DATRF) .And. C2_QUANT > C2_QUJE+C2_PERDA
	lEncerrada := .T.
EndIf
nTotAbert +=C2_QUANT-C2_QUJE-C2_PERDA
nTotBaixa +=C2_QUJE
nTotPerda +=C2_PERDA

DEFINE MSDIALOG oDlg TITLE STR0072 OF oMainWnd PIXEL FROM aSize[7],0 TO aSize[6],aSize[5]  //"Grafico de Apontamento de OP"
@ aPosObj[1,1],aPosObj[1,2]     Say Alltrim(RetTitle("C2_NUM"))    + " : " + C2_NUM+"/"+C2_ITEM OF oDlg PIXEL
@ aPosObj[1,1],aPosObj[1,2]+120 Say Alltrim(RetTitle("C2_PRODUTO"))+ " : " + C2_PRODUTO OF oDlg PIXEL
@ aPosObj[1,1],aPosObj[1,2]+200 Say Alltrim(RetTitle("C2_EMISSAO"))+ " : " + DTOC(C2_EMISSAO)OF oDlg PIXEL
@ aPosObj[1,1],aPosObj[1,2]+290 Say Alltrim(RetTitle("C2_QUANT"))  + " : " + Transform(C2_QUANT,PesqPict("SC2","C2_QUANT")) OF oDlg PIXEL
@ aPosObj[1,1]+12,aPosObj[1,2]  Say Alltrim(RetTitle("C2_DATPRI")) + " : " + DTOC(C2_DATPRI) OF oDlg PIXEL
@ aPosObj[1,1]+12,aPosObj[1,2]+120 Say Alltrim(RetTitle("C2_DATPRF")) + " : " + DTOC(C2_DATPRF) OF oDlg PIXEL
@ aPosObj[1,1]+12,aPosObj[1,2]+200 Say Alltrim(RetTitle("C2_TPOP"))   + " : " + Iif(C2_TPOP=="F",STR0073,STR0074) OF oDlg PIXEL   //"Firme"###"Prevista"
@ aPosObj[1,1]+12,aPosObj[1,2]+290 Say Alltrim(RetTitle("C2_DATRF"))  + " : " + DTOC(C2_DATRF) OF oDlg PIXEL
@ aPosObj[2,1]+10,aPosObj[2,2] MSGRAPHIC oGraph SIZE aPosObj[2,3],aPosObj[2,4] OF oDlg PIXEL
oGraph:SetMargins( 5, 5, 5, 5 )
oGraph:SetGradient( GDBOTTOMTOP, CLR_HGRAY, CLR_WHITE )
nSerie := oGraph:CreateSerie( 10 )
If nTotAbert > 0
	oGraph:Add(nSerie,nTotAbert,If(!lEncerrada,STR0075,STR0078),If(!lEncerrada,CLR_HMAGENTA,CLR_CYAN))  //"Qtde. a ser Produzida" //"Qtde. Nao Produzida"
EndIf
If nTotBaixa > 0 	
	oGraph:Add(nSerie,nTotBaixa, STR0076,CLR_HBLUE)  //"Qtde. Produzida "
EndIf
If nTotPerda > 0	
	oGraph:Add(nSerie,nTotPerda,STR0077,CLR_RED)  //"Qtde. Perda "
EndIf	
oGraph:l3D := .T.
DEFINE SBUTTON FROM aPosObj[3,1]-10,aPosObj[3,4]-40 ACTION oDlg:End() ENABLE OF oDlg PIXEL
ACTIVATE MSDIALOG oDlg

Return

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA650DelColsЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё04/06/02 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁFuncao utilizada para contornar deficiencia da GETDADOS em  Ё╠╠
╠╠Ё          Ёinicializar com linhas deletadas                            Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Function A650DelCols(oObj)
Local nx
For nx:=1 to Len(aColsDele)
	aCols[aColsDele[nx],Len(aCols[aColsDele[nx]])]:=.T.
Next nx
oObj:Reset()
RETURN

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650SldMRPЁ Autor ЁRodrigo de A. Sartorio Ё Data Ё10/09/2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Verifica saldo em estoque na data                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ lProjNovo  - Verifica saldo ref. a MRP programa novo       Ё╠╠
╠╠Ё          Ё lProjVelho - Verifica saldo ref. a MRP programa velho      Ё╠╠
╠╠Ё          Ё cComp      - Componente a ser verificado                   Ё╠╠
╠╠Ё          Ё dEntrega   - Data do consumo                               Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁUso       Ё MATA650 / MATA710                                          Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A650SldMRP(lProjNovo,lProjVelho,cComp,dEntrega)
Local aArea:=GetArea(),aAreaBack:={}
Local cCpoPr711:="",nQtdRet:=0,nEntrada:=0,nSaida:=0
Local cPeriodo:=A650DtoPer(dEntrega)
DEFAULT lProjNovo:=.T.
DEFAULT lProjVelho:=.F.
If lProjNovo
	dbSelectArea("SHA")
	aAreaBack:=GetArea()
	cCpoPr711 := "HA_PER"+cPeriodo
	dbSetOrder(1)
	If dbSeek(cComp+Criavar("C2_OPC",.F.)+"1")
		nEntrada+=&cCpoPr711
	EndIf
	If dbSeek(cComp+Criavar("C2_OPC",.F.)+"2")
		nEntrada+=&cCpoPr711
	EndIf
	If dbSeek(cComp+Criavar("C2_OPC",.F.)+"3")
		nSaida+=&cCpoPr711
	EndIf
	If dbSeek(cComp+Criavar("C2_OPC",.F.)+"4")
		nSaida+=&cCpoPr711
	EndIf
	nQtdRet:=nEntrada-nSaida
	RestArea(aAreaBack)
ElseIf lProjVelho
	cCpoPr711 := "H5_PER"+cPeriodo
	dbSelectArea("SH5")
	aAreaBack:=GetArea()
	dbSetOrder(1)
	If dbSeek(cComp+"1")
		nQtdRet:=&cCpoPr711
	EndIf
	If dbSeek(cComp+"2")
		nQtdRet+=&cCpoPr711
	EndIf
	If dbSeek(cComp+"3")
		nQtdRet-=&cCpoPr711
	EndIf
	*	nQtdRet += A710NecEst(cComp, cPeriodo)
	RestArea(aAreaBack)
Endif
RestArea(aArea)
RETURN nQtdRet

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFuncao    ЁA650Track Ё Autor ЁRodrigo de A Sartorio  Ё Data Ё19/11/2002Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤┘o Ё Faz o tratamento da chamada do System Tracker              Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁRetorno   Ё .T.                                                        Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ Nenhum                                                     Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/

Static Function A650Track()
Local aEnt     := {}
AAdd( aEnt, { "SC2",C2_NUM+C2_ITEM+C2_SEQUEN+C2_ITEMGRD} )
MaTrkShow( aEnt )
Return( .T. )

/*
эээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээээ
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбдддддддддддбдддддддбдддддддддддддддддддддддбддддддбддддддддд©╠╠
╠╠ЁFun┤┘o    ЁA650DelSHC Ё Autor ЁRodrigo de A. Sartorio Ё Data Ё11/08/03 Ё╠╠
╠╠цддддддддддедддддддддддадддддддадддддддддддддддддддддддаддддддаддддддддд╢╠╠
╠╠ЁDescri┤┘o ЁDeleta o registro de PMP vinculado a ordem de producao      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
ъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъъ
*/
Static Function A650DelSHC(cProduto,cOp,dDatPri)
Local aArea:=GetArea()
Local aAreaSHC:=SHC->(GetArea())
dbSelectArea("SHC")
dbSetOrder(2)
If dbSeek(xFilial()+cProduto+cOP)
	Reclock("SHC",.F.)
	Replace HC_OP With Criavar("HC_OP",.F.)
	Replace HC_STATUS With Criavar("HC_STATUS",.F.)                    
	MsUnlock()
EndIf
RestArea(aAreaSHC)
RestArea(aArea)
RETURN

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650PrioriЁ Autor ЁRodrigo de A Sartorio  Ё Data Ё 12/11/03 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Programa de priorizacao de OPs                             Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A650Priori(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650Priori(cAlias,nReg,nOpcx)
Local aRetCopy :=Aclone(aRotina), cMarca
Local aIndexSC2:= {}
Local cNumOPD:="",cItemOPD:="",cSeqOpD:="",cItemGrDOp:=""
Local cNumOPA:="",cItemOPA:="",cSeqOpA:="",cItemGrAOp:=""

PRIVATE bFiltraBrw:= {|| NIL},cCondicao:=""

aRotina := {{STR0001, "PesqBrw"  , 0 , 1},;	//"Pesquisar"
	        {STR0098,"A650ProPri", 0 , 0} } //"Reprioriza"

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё mv_par01 - Altera Prioridades 1- Produto posicionado 2- TodosЁ
//Ё mv_par02 - Op de                                             Ё
//Ё mv_par03 - Op Ate                                            Ё
//Ё mv_par04 - Ops intermed. grava prioridade 1-Op Pai 2-Propria Ё
//Ё mv_par05 - Armazem de                                        Ё
//Ё mv_par06 - Armazem ate                                       Ё
//Ё mv_par07 - Produto de                                        Ё
//Ё mv_par08 - Produto ate                                       Ё
//Ё mv_par09 - Prioridade inicial para regravacao                Ё
//Ё mv_par10 - Incremento na prioridade                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
If Pergunte("MTA65P",.T.)
	dbSelectArea("SC2")
	
	//Ё Separa o numero , item, sequencia e item grade das OPs digitadasЁ
	//Ё nos parametros de OP inicio e OP fim                            Ё
	cNumOPD:=Substr(mv_par02,1,Len(SC2->C2_NUM))
	cItemOPD:=Substr(mv_par02,1+Len(SC2->C2_NUM),Len(SC2->C2_ITEM))
	cSeqOpD:=Substr(mv_par02,1+Len(SC2->C2_NUM)+Len(SC2->C2_ITEM),Len(SC2->C2_SEQUEN))
	cItemGrDOp:=Substr(mv_par02,1+Len(SC2->C2_NUM)+Len(SC2->C2_ITEM)+Len(SC2->C2_SEQUEN),Len(SC2->C2_ITEMGRD))
	cNumOPA:=Substr(mv_par03,1,Len(SC2->C2_NUM))
	cItemOPA:=Substr(mv_par03,1+Len(SC2->C2_NUM),Len(SC2->C2_ITEM))
	cSeqOpA:=Substr(mv_par03,1+Len(SC2->C2_NUM)+Len(SC2->C2_ITEM),Len(SC2->C2_SEQUEN))
	cItemGrAOp:=Substr(mv_par03,1+Len(SC2->C2_NUM)+Len(SC2->C2_ITEM)+Len(SC2->C2_SEQUEN),Len(SC2->C2_ITEMGRD))

	cCondicao := 'C2_FILIAL=="'+xFilial("SC2")+'".And.'
	// Considera somente produto posicionado no browse
	If mv_par01 == 1	                              
		cCondicao += 'C2_PRODUTO=="'+SC2->C2_PRODUTO+'".And.'	
	// Considera produtos do filtro
	Else
		cCondicao += 'C2_PRODUTO>="'+mv_par07+'".And.C2_PRODUTO<="'+mv_par08+'".And.'	
	EndIf
	// Filtra numeracao de OPs	
	cCondicao += 'C2_NUM>="'+cNumOPD+'".And.C2_ITEM>="'+cItemOPD+'".And.C2_ITEMGRD>="'+cItemGrDOP+'".And.'
	// Considera somente produto com SEQUENCIA 001
	If mv_par04 == 1	                              
		cCondicao += 'C2_SEQUEN == "'+StrZero(1,Len(SC2->C2_SEQUEN),0)+'".And.'
	Else
		cCondicao += 'C2_SEQUEN >= "'+cSeqOpD+'".And.' 	
	EndIf
	cCondicao += 'C2_NUM<="'+cNumOPA+'".And.C2_ITEM<="'+cItemOPA+'".And.C2_ITEMGRD<="'+cItemGrAOP+'".And.'
	If mv_par04 <> 1	                              
		cCondicao += 'C2_SEQUEN <= "'+cSeqOpA+'".And.' 	
	EndIf
	// Filtra armazem
	cCondicao += 'C2_LOCAL>="'+mv_par05+'".And.C2_LOCAL<="'+mv_par06+'"'

	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Inicializa o filtro utilizando a funcao FilBrowse                      Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	dbSelectArea("SC2")
	dbSetOrder(1)                                                             		
	bFiltraBrw := {|| FilBrowse("SC2",@aIndexSC2,@cCondicao) }
	Eval(bFiltraBrw)

	dbGotop()
	If Bof() .and. Eof()
		Help(" ",1,"RECNO")
	Else
		//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
		//Ё Endereca a funcao de BROWSE                                  Ё
		//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
		cMarca := GetMark()
		MarkBrow("SC2","C2_OK",,,,cMarca,,,'xFilial("SC2")','xFilial("SC2")')		
	EndIf
	//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
	//Ё Finaliza o uso da funcao FilBrowse e retorna os indices padroes.       Ё
	//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
	EndFilBrw("SC2",aIndexSC2)
EndIf
Pergunte("MTA650",.F.)
//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Restaura a integridade da janela                             Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
inclui := .F.
aRotina:=AClone(aRetCopy)
dbSelectArea(cAlias)
dbGoTo(nReg)
RETURN

/*
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
╠╠зддддддддддбддддддддддбдддддддбдддддддддддддддддддддддбддддддбдддддддддд©╠╠
╠╠ЁFun┤└o    ЁA650ProPriЁ Autor ЁRodrigo de A Sartorio  Ё Data Ё 12/11/03 Ё╠╠
╠╠цддддддддддеддддддддддадддддддадддддддддддддддддддддддаддддддадддддддддд╢╠╠
╠╠ЁDescri┤└o Ё Executa mudanca de prioridade das OPs                      Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁSintaxe   Ё Void A650ProPri(ExpC1,ExpN1,ExpN2)                         Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠ЁParametrosЁ ExpC1 = Alias do arquivo                                   Ё╠╠
╠╠Ё          Ё ExpN1 = Numero do registro                                 Ё╠╠
╠╠Ё          Ё ExpN2 = Opcao selecionada no menu                          Ё╠╠
╠╠цддддддддддедддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд╢╠╠
╠╠Ё Uso      Ё Mata650                                                    Ё╠╠
╠╠юддддддддддадддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды╠╠
╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠╠
*/
Function A650ProPri(cAlias,cCampo,nOpcE,cMarca,lInverte)
LOCAL cIndice:="C2_PRODUTO+C2_NUM+C2_ITEM"
LOCAL cArqNtx:=CriaTrab(NIL,.F.),nIndex:=0,nz:=0
LOCAL aArrayProd:={},cProduto:="",nRecOrig:=0,aOpPis:={}

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё mv_par01 - Altera Prioridades 1- Produto posicionado 2- TodosЁ
//Ё mv_par02 - Op de                                             Ё
//Ё mv_par03 - Op Ate                                            Ё
//Ё mv_par04 - Ops intermed. grava prioridade 1-Op Pai 2-Propria Ё
//Ё mv_par05 - Armazem de                                        Ё
//Ё mv_par06 - Armazem ate                                       Ё
//Ё mv_par07 - Produto de                                        Ё
//Ё mv_par08 - Produto ate                                       Ё
//Ё mv_par09 - Prioridade inicial para regravacao                Ё
//Ё mv_par10 - Incremento na prioridade                          Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды

//здддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддд©
//Ё Retorna os indices e cria a 2a IndRegua.                     Ё
//юдддддддддддддддддддддддддддддддддддддддддддддддддддддддддддддды
dbSelectArea("SC2")
RetIndex("SC2")
dbClearFilter()
If !lInverte
	cCondicao += '.And.C2_OK == "'+SUBSTR(cMarca,1,Len(C2_OK))+'"'
EndIf
IndRegua("SC2",cArqNtx,cIndice,,cCondicao,STR0061) //"Selecionando Registros..."
nIndex:=RetIndex("SC2")
#IFNDEF TOP
	dbSetIndex(cArqNtx+OrdBagExt())
#ENDIF
dbSetOrder(nIndex+1)
dbSelectArea(cAlias)
dbGotop()
ProcRegua(LastRec(),21,5) // Monta regua
While !Eof() 
	// Efetua quebra por produto
	cProduto:=SC2->C2_PRODUTO
	aArrayProd:={}
	While !Eof() .And. SC2->C2_PRODUTO == cProduto
		IncProc() // Adiciona contador na regua
		If IsMark("C2_OK",cMarca,lInverte) 
			AADD(aArrayProd,{SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN,Replicate("0",Len(SC2->C2_PRIOR)),SC2->(Recno())})
		EndIf
		dbSkip()
	End	
	nRecOrig:=Recno()
	// Muda prioridade de todas as ordens relacionadas ao produto
	For nz:=1 to Len(aArrayProd)
		If nz ==1 
			aArrayProd[nz,4]:=If(Empty(mv_par09),"500",mv_par09)			
		Else
			aArrayProd[nz,4]:=Str(Val(aArrayProd[nz-1,4])+mv_par10,Len(SC2->C2_PRIOR),0)			
			If "*" $ aArrayProd[nz,4]
				aArrayProd[nz,4]:="500"
			EndIf
		EndIf	
	Next nz
	// Grava novas prioridades
	For nz:=1 to Len(aArrayProd)
		dbGoto(aArrayProd[nz,5])
		Reclock("SC2",.F.)
		Replace C2_PRIOR With aArrayProd[nz,4]
		MsUnlock()
		// Armazena numero de OPs para posteriormente identificar ops filhas e gravar prioridade em todas
		If mv_par04 == 1
			AADD(aOpPis,{SC2->C2_NUM,SC2->C2_ITEM,SC2->C2_SEQUEN,SC2->C2_ITEMGRD,SC2->C2_PRIOR})		
		EndIf
	Next nz
	// Volta ao laco principal
	dbGoto(nRecOrig)
End
// Retira filtro
dbSelectArea("SC2")
RetIndex("SC2")
dbClearFilter()
// Apaga arquivo de trabalho
Ferase(cArqNtx+OrdBagExt())
dbSetOrder(1)
// Grava sequencia nas Ops filhas
For nz:=1 to Len(aOpPis)
	dbSeek(xFilial("SC2")+aOpPis[nz,1]+aOpPis[nz,2]+aOpPis[nz,3]+aOpPis[nz,4])
	While !Eof() .And. SC2->C2_FILIAL+SC2->C2_NUM+SC2->C2_ITEM == xFilial("SC2")+aOpPis[nz,1]+aOpPis[nz,2]
		If SC2->C2_ITEMGRD == aOpPis[nz,4] .And. (SC2->C2_SEQUEN <> StrZero(1,Len(SC2->C2_SEQUEN),0))		
			Reclock("SC2",.F.)
			Replace C2_PRIOR With aOpPis[nz,5] 		
			MsUnlock()
		EndIf
		dbSkip()
	End
Next nz
CloseBrowse()
RETURN
